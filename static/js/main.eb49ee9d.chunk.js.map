{"version":3,"sources":["i18n/index.ts","i18n/en.ts","i18n/vn.ts","i18n/rs.ts","_theme.tsx","components/CatchFishTypeInput.tsx","core/utils.ts","components/CatchQuantityInput.tsx","components/CatchDurationInput.tsx","api/freepcis.ts","api/index.ts","api/catch.ts","hooks/use-ipfs.ts","components/CatchReview.tsx","data/catchPrompt.tsx","components/FishDataConfirm.tsx","components/LandingDataCard.tsx","data/landingPrompt.tsx","components/SaleFishSelectInput.tsx","data/salePrompt.tsx","components/VesselCaptainNameInput.tsx","components/VesselIDInput.tsx","data/gear.tsx","components/FishingGearInput.tsx","components/CaptainProfileReview.tsx","components/VesselCertificationInput.tsx","data/setupCaptainProfilePrompt.tsx","api/csvToXml/csvHeader.tsx","api/csvToXml/index.ts","api/csvToXml/catchAndProcessXml.ts","api/csvToXml/aggregationDisaggregationXml.ts","components/CsvFileInput.tsx","data/testPrompt.tsx","components/DappProducerReceiveInput.tsx","data/receivePrompt.tsx","api/csvToXml/boltonCsvToXml.ts","components/BoltonEpcisToolsInput.tsx","data/csvPrompt.tsx","_data.tsx","components/CaptainProfile.tsx","components/Header.tsx","App.tsx","serviceWorker.ts","index.tsx","api/dapp.ts"],"names":["strings","LocalizedStrings","en","input_placeholder","atlanticCod","blueCrab","dolphinFish","grouper","kingCrab","pacificCod","redSnapper","seaCucumber","shark","swordfish","albacoreTuna","bigeyeTuna","skipjackTuna","yellowfinTuna","bluefinTuna","prompt_welcomeNew","prompt_introduceNemo","prompt_vesselCaptainName","captain","prompt_vesselName","prompt_vesselID","imo","mmsi","prompt_fishingGearTypeCode","selectGearBase","selectGearSubtype","selectGearOptionalType","prompt_productionMethod","aquaculture","inlandFishery","marineFishery","prompt_ownership","prompt_vesselOwnerName","prompt_organization","prompt_organizationName","prompt_certificationHolder","certification","form_certificationAgencyLabel","form_certificationValueLabel","form_certificationIdentificationLabel","form_certificationAgencyPlaceholder","form_certificationValuePlaceholder","form_certificationIdentificationPlaceholder","form_firstNamePlaceholder","form_lastNamePlaceholder","form_middleNamePlaceholder","prompt_certificationStandard","prompt_unitOfMeasurement","prompt_setupProfileCompleted","prompt_profileDone","kilogram","pound","prompt_welcome","prompt_end","prompt_anotherOne","prompt_unavailable","prompt_initial","yes","no","days","weeks","months","addNew","csv","receive","catch","transport","landing","sale","test","nothing","prompt_csv","csv_catchProcess","csv_aggregationDisaggregation","csv_shipReceive","csv_transshipment","csv_boltonEpcisTools","prompt_nothing","prompt_test","prompt_receive","prompt_catch","prompt_catchFishType","prompt_catchDuration","prompt_catchHarvestStartDate","prompt_catchHarvestEndDate","prompt_catchArea","prompt_catchQuantity","prompt_catchQuantityListDone","prompt_catchReview","prompt_catchCongrat","prompt_preservation","add_quantityPlaceholder","chilled","salted","fresh","prompt_sale","prompt_size","prompt_weight","prompt_value","prompt_saleConfirmation","prompt_landing","prompt_landingConfirm","inprogress","finished","prompt_confirmData","dataIsAccurate","dataIsInaccurate","prompt_errorReported","date","time","timeZone","container","geoLocation","surroundingNet","withPurseLines","oneBoatOperated","twoBoatsOperated","withoutPurseLines","seineNets","beachSeines","vesselSeines","danishSeines","scottishSeines","pairSeines","seineNetsNotSpecified","trawls","bottomTrawls","beamTrawls","otterTrawls","pairTrawls","nephropsTrawls","shrimpTrawls","bottomTrawlsNotSpecified","midwaterTrawls","midwaterTrawlsNotSpecified","otterTwinTrawls","otterTrawlsNotSpecified","pairTrawlsNotSpecified","otherTrawlsNotSpecified","dredges","boatDredges","handDredges","liftNets","portableLiftNets","boatOperatedLiftNets","shoreOperatedStationaryLiftNets","liftNetsNotSpecified","fallingGear","castNets","fallingGearNotSpecified","gillnetsAndEntanglingNets","setGillnetsAnchored","driftnets","encirclingGillnets","fixedGillnetsOnStakes","trammelNets","combinedGillnetsTrammelNets","gillnetsAndEntanglingNetsNotSpecified","gillnetsNotSpecified","traps","stationaryUncoveredPoundNets","pots","fykeNets","stowNets","barriersFencesWeirsEtc","aerialTraps","trapsNotSpecified","hooksAndLines","handlinesAndPoleLinesHandOperated","handlinesAndPoleLinesMechanized","setLonglines","driftingLonglines","longlinesNotSpecified","trollingLines","hooksAndLinesNotSpecified","grapplingAndWounding","harpoons","harvestingMachines","pumps","mechanizedDredges","harvestingMachinesNotSpecified","miscellaneousGear","recreationalFishingGear","gearNotKnowOrNotSpecified","vn","rs","prompt_quantity","languages","key","value","flag","label","theme","background","headerBgColor","headerFontColor","botBubbleColor","botFontColor","userBubbleColor","userFontColor","dangerColor","CircleButton","styled","button","prop","StyledColumn","div","RefreshButton","onClick","window","location","reload","StyledInput","input","LabeledInput","className","rest","Divider","hr","ReviewInput","StyledButton","p","FillButton","StyledSubmitButton","props","StyledColumnForm","form","StyledRowForm","RowDiv","StyledSelect","Select","StyledLabel","StyledForm","createSelectOptionList","list","map","numberValidator","isNaN","appendTrigger","i","order","trigger","options","o","j","triggers","hideInput","waitAction","message","id","createOptionLabel","createPromptArray","structure","reduce","acc","src","length","push","AmountInput","QRScanButton","QRCodeDiv","QRCodeContainer","DurationTypeSelect","DurationValueInput","freepcisVault","capture","uri","auth","username","password","sendCatchEvent","body","a","headers","Headers","set","btoa","fetch","method","response","console","log","dapp","freepcis","generateQuantityElementList","fishCode","quantityList","epcClass","quantity","uom","join","generateNonEmptyElement","element","createCatchPayload","catchArea","harvestEndDate","harvestStartDate","firstName","lastName","fishingGearType","organizationName","productionMethod","language","vesselIdType","vesselIdString","vesselName","vesselOwnerName","vesselCertificationAgency","vesselCertificationIdentification","vesselCertificationStandard","vesselCertificationValue","dt","DateTime","local","creationDate","toISO","eventTimeZoneOffset","toFormat","Promise","resolve","fallback","latitude","longitude","navigator","geolocation","getCurrentPosition","position","coords","quantityElementList","vesselCaptainName","upper","productionMethodCode","productionMethodCodeMap","vesselID","vesselFlagState","debug","require","Ipfs","w","ipfs","repo","api","dappVault","ipfsRepo","silent","once","ipfsReady","initIpfs","reject","err","useIpfs","opts","useState","isIpfsReady","setIpfsReady","ipfsInitError","setIpfsInitError","error","useEffect","startIpfs","stop","Container","animated","QuantityItem","promptOrder","promptStructure","add_catchFishType","component","triggerNextStep","fishOptionList","disabled","setDisabled","setValue","useCatchCacheState","setCatchCache","onSubmit","e","preventDefault","fishKey","onChange","classes","selectControl","selectInput","replace","add_catchDuration","durationList","useFormState","durationType","formState","number","raw","catchCache","endDate","startDate","minus","values","durationValue","toISODate","required","add_catchQuantity","steps","useProfileState","unitOfMeasurement","profile","qrCode","setQRCode","amount","uomMap","code","uuid","size","add_catchArea","add_catchQuantityDone","add_catchReview","apiUrl","useLanguageState","sendMethod","setSendMethod","success","setSuccess","setOriginId","ipfsHash","setIpfsHash","catchCacheRest","text","price","dappFormState","dappInput","fao3AMap","epcisDoc","sendToEOS","catchResult","originId","sendPromise","all","sent","Object","keys","k","readOnly","placeholder","style","color","href","target","rel","add_preservation","done","setDone","ref","rewardMe","type","config","emoji","LandingDataTable","role","aria-label","landingPromptOrder","SaleFishSelectInput","fishStore","JSON","parse","localStorage","getItem","catches","fish","setFish","setTimeout","removeItem","localStorageKey","chatCache","salePromptOrder","StyledMiddleNameInput","StyledCaptainLabel","span","IDTypeSelect","IDInput","isGearValid","partOne","partTwo","partThree","gearAbbreviationMap","partOneTwo","partOneTwoThree","gearTree","gearBaseList","surroundingNet_withPurseLines","surroundingNet_withPurseLines_oneBoatOperated","surroundingNet_withPurseLines_twoBoatsOperated","surroundingNet_withoutPurseLines","seineNets_beachSeines","seineNets_vesselSeines","seineNets_vesselSeines_danishSeines","seineNets_vesselSeines_scottishSeines","seineNets_vesselSeines_pairSeines","seineNets_seineNetsNotSpecified","trawls_bottomTrawls_beamTrawls","trawls_bottomTrawls_otterTrawls","trawls_bottomTrawls_pairTrawls","trawls_bottomTrawls_nephropsTrawls","trawls_bottomTrawls_shrimpTrawls","trawls_bottomTrawls_bottomTrawlsNotSpecified","trawls_midwaterTrawls_otterTrawls","trawls_midwaterTrawls_pairTrawls","trawls_midwaterTrawls_shrimpTrawls","trawls_midwaterTrawls_midwaterTrawlsNotSpecified","trawls_otterTwinTrawls","trawls_otterTrawlsNotSpecified","trawls_pairTrawlsNotSpecified","trawls_otherTrawlsNotSpecified","dredges_boatDredges","dredges_handDredges","liftNets_portableLiftNets","liftNets_boatOperatedLiftNets","liftNets_shoreOperatedStationaryLiftNets","liftNets_liftNetsNotSpecified","fallingGear_castNets","fallingGear_fallingGearNotSpecified","gillnetsAndEntanglingNets_setGillnetsAnchored","gillnetsAndEntanglingNets_driftnets","gillnetsAndEntanglingNets_encirclingGillnets","gillnetsAndEntanglingNets_fixedGillnetsOnStakes","gillnetsAndEntanglingNets_trammelNets","gillnetsAndEntanglingNets_combinedGillnetsTrammelNets","gillnetsAndEntanglingNets_gillnetsAndEntanglingNetsNotSpecified","gillnetsAndEntanglingNets_gillnetsNotSpecified","traps_stationaryUncoveredPoundNets","traps_pots","traps_fykeNets","traps_stowNets","traps_barriersFencesWeirsEtc","traps_aerialTraps","traps_trapsNotSpecified","hooksAndLines_handlinesAndPoleLinesHandOperated","hooksAndLines_handlinesAndPoleLinesMechanized","hooksAndLines_setLonglines","hooksAndLines_driftingLonglines","hooksAndLines_longlinesNotSpecified","hooksAndLines_trollingLines","hooksAndLines_hooksAndLinesNotSpecified","grapplingAndWounding_harpoons","harvestingMachines_pumps","harvestingMachines_mechanizedDredges","harvestingMachines_harvestingMachinesNotSpecified","getGearKeyList","gearTreeNode","StyledHeaderLabel","CertificationInput","add_vesselCaptainName","useCaptainProfileState","setProfile","middleName","formName","maxLength","add_vesselName","user","add_vesselID","shipIDTypeOptionList","idType","select","vessel","name","add_fishingGearTypeCode","setPartOne","setPartTwo","setPartThree","partOneOptions","partTwoOptions","setPartTwoOptions","partThreeOptions","setPartThreeOptions","gearId","getGearId","fishingGearTypeCode","clearable","onInputClear","add_productionMethod","add_ownership","add_vesselOwnerName","add_organization","add_organizationName","add_unitOfMeasurement","add_certificationHolder","add_certificationStandard","vesselCertification","standard","prompt_profileReview","captainProfile","idString","agency","identification","completed","csvAggregationEventHeader","csvTransformationEventHeader","csvObjectEventHeader","csvLocationHeader","csvEpcClassHeader","csvBusinessDocumentHeader","csvMasterDataHeader","csvLocationDataHeaderV0","csvEventLevelDataHeader","csvAggregationDisaggregationHeader","csvAggregatedCatchProcessHeader","createCsvFileReaderStream","file","Error","split","pop","fileReaderStream","parseUom","s","toLowerCase","createSender","informationProviderID","informationProviderContactName","informationProviderEmail","createReceiver","destinationID","destinationContactName","destinationEmail","createFishVocab","seafoodID","speciesCode","speciesScientificName","tradeItemDescription","tradeItemConditionCode","createVocabEl","createOutputProductVocab","data","outputProductID","informationProvider","descriptionShort","outputProductName","createLocationVocab","processorID","processorOwnerName","streetAddressOne","processorAddress1","streetAddressTwo","processorAddress2","city","processorCity","state","processorState","postalCode","processorPostalCode","countryCode","processorCountryCode","contact","processorContactName","email","processorContactEmail","createFishCatchEvent","eventDateV1","eventTimeZoneOffsetV1","readPointV1","bizLocationV1","seafoodQuantity","seafoodUOM","vesselOperator","vesselRegistration","catchAreaFAO","mscCertification","landingAuthority","landingAuthorization","unloadingPort","landingDateStart","landingDateEnd","harvestCertification","harvestCertificationCoC","FIP","ISSF","ratingsScore","ratingsScheme","vesselTransponder","vesselRegistryLink","visibilityEvent","productOwnerV1","createProcessEvent","eventDateV2","eventTimeZoneOffsetV2","inputSeafoodID","inputSeafoodQuantity","inputSeafoodUOM","outputQuantity","outputUOM","readPointV2","bizLocationV2","lotNumber","productionDate","bestBeforeDate","storageStateCode","firstFreezeDate","countryOfOrigin","transformationVisibilityEvent","productOwnerV3","createSingleCatchAndProcessXml","createAggregatedCatchAndProcessXml","dataList","fishIdSet","Set","fishVocabList","filter","has","add","outputProductIdSet","outputProductVocabList","locationIdSet","locationVocabList","createSingleAggregationDisaggregationEvent","d","eventTime","parentEPC","action","readPoint","bizLocation","childEPC","unitOfMeasure","productOwner","createAggregatedAggregationDisaggregationXml","dList","informationProviderContact","informationReceiverID","informationReceiverContact","informationReceiverEmail","informationProviderChild","speciesCodeChild","speciesNameChild","descriptionShortChild","itemConditionCodeChild","itemConditionCodeParent","additionalTradeItemIdentificationParent","partyIDTypeCode","additionalPartyID","telephone","StyledGrommet","Grommet","DataContainer","FileDropContainer","HiddenFileDropContainer","HiddenFileInput","FileDropText","AccordionContent","Box","CodeContainer","XmlDownloadButton","fileLabel","xml","downloadText","blob","Blob","saveAs","AggregatedXmlDownload","eventCount","aggregatedXml","Accordion","margin","AccordionPanel","EpcisEventList","epcisXmlList","setSent","Heading","level","multiple","CsvFileDrop","processFile","dropText","fileInputRef","useRef","current","click","FileDrop","onDrop","accept","evt","files","CsvFileInput","singleParser","aggregatedParser","setEpcisXmlList","setAggregatedXml","setEventCount","readerStream","neatCsv","csvRowList","grommet","comp_test","EpcisDataContainer","EpcisDataViewer","previousStep","setError","epcisData","setEpcisData","receiptId","setReceiptId","onFinish","event","claimCatchEvent","RpcError","stringify","json","copy","withIgnoreError","fx","parseCsvColumnList","csvData","index","indexKey","itemKeyList","currentData","nextItem","newItem","forEach","createAggregationEventXml","skipLines","parsedData","bizStep","parentID","disposition","readPoint_id","bizLocation_id","epcItemsXml","childEPCs_epc","childEPCsXml","childQuantityListItem","extension_childQuantityList_quantityElement_epcClass","extension_childQuantityList_quantityElement_quantity","extension_childQuantityList_quantityElement_uom","extensionItemsXml","extensionXml","t","createTransformationEventXml","inputQuantityItemXml","inputQuantityList_quantityElement_epcClass","inputQuantityList_quantityElement_quantity","inputQuantityList_quantityElement_uom","inputQuantityListXml","outputQuantityItemXml","outputQuantityList_quantityElement_epcClass","outputQuantityList_quantityElement_quantity","outputQuantityList_quantityElement_uom","outputQuantityListXml","ilmdCbvmdaItemsXml","ilmdCertificationItemsXml","ilmd_certificationList_certification_certificationStandard","ilmd_certificationList_certification_certificationAgency","ilmd_certificationList_certification_certificationValue","ilmd_certificationList_certification_certificationIdentification","trim","ilmdItemsXml","ilmdXml","createObjectEventXml","epcList_epc","epcListXml","bizTransactionItem","bizTransactionList_bizTransaction_type","bizTransactionList_bizTransaction_value","bizTransactionListXml","sourceListItem","extension_sourceList_source_type","extension_sourceList_source_value","sourceListXml","destinationListItem","extension_destinationList_destination_type","extension_destinationList_destination_value","destinationListXml","quantityListItem","extension_quantityList_quantityElement_epcClass","extension_quantityList_quantityElement_quantity","extension_quantityList_quantityElement_uom","quantityListXml","ilmdGdstItemsXml","extension_ilmd_certificationList_certification_certificationStandard","extension_ilmd_certificationList_certification_certificationAgency","extension_ilmd_certificationList_certification_certificationValue","extension_ilmd_certificationList_certification_certificationIdentification","createLocationXml","vocabArrayKeyList","vocabElementListItems","optionalAttributeMap","optionalAttributeItems","entries","includes","v","polygonItemsXml","geofencePolygonPolygonPointSeq","geofencePolygonPolygonPointValue","geofanceXml","createEpcClassXml","speciesForFisheryStatisticsPurposesCode","grossWeightItemsXml","grossWeightMeasurementUnitCode","grossWeightMeasurementValue","grossWeightXml","createBusinessDocumentHeaderXml","senderId","senderName","senderEmail","receiverId","receiverName","receiverEmail","createBoltonXml","bdhXml","epcClassXml","locationXml","objectEventXml","transformationEventXml","aggregationEventXml","StyledCsvFileDrop","fileValid","DropContainer","add_csvType","comp_catchProcess","comp_aggregationDisaggregation","comp_boltonEpcisTools","setBdhXml","bdhFileName","setBdhFileName","setEpcClassXml","epcClassFileName","setEpcClassFileName","setLocationXml","locationFileName","setLocationFileName","setObjectEventXml","objectEventFileName","setObjectEventFileName","setTransformationEventXml","transformationEventFileName","setTransformationEventFileName","setAggregationEventXml","aggregationEventFileName","setAggregationEventFileName","createBDHXml","newXml","isDebug","savedLanguage","createPersistedState","createSteps","isProfileSetup","end","validator","previousValue","ProfileIcon","CloseProfileModalButton","ItemContainer","CaptainProfile","open","setOpen","profileFormRest","springRef","useSpring","from","opacity","to","transRef","closeButtonRef","closeButtonPopin","stiff","transform","useChain","width","height","HeaderContainer","Header","onLanguageChanged","valueRenderer","svg","lang","StyledChatBot","ChatBot","VersionContainer","Boolean","hostname","match","ReactDOM","render","hasEnded","setHasEnded","setLanguage","repository","version","headerComponent","newLanguage","enableMobileAutoFocus","botAvatar","hideUserAvatar","cache","cacheName","userAvatar","userDelay","handleEnd","document","getElementById","serviceWorker","ready","then","registration","unregister","table","account","eosiotoken","contract","producer","encodeNemoTXValue","blockNum","decodeNemoTXValue","tx","txId","signatureProvider","JsSignatureProvider","rpc","JsonRpc","Api","get_table_rows","scope","lower_bound","limit","show_payer","tableData","rows","buyer","seller","tax","transact","actions","authorization","actor","permission","memo","blocksBehind","expireSeconds","result","receipt","transaction_id","processed","block_num","claimResult","cat","epcisDataBuffer","toString","content","Buffer","results","hash"],"mappings":"ocAMaA,EAAe,I,OAAIC,GAAiB,CAC/CC,GCPgB,CAChBC,kBAAmB,yBAEnBC,YAAa,eACbC,SAAU,uBACVC,YAAa,0BACbC,QAAS,iBACTC,SAAU,kBACVC,WAAY,cACZC,WAAY,cACZC,YAAa,6BACbC,MAAO,gBACPC,UAAW,YACXC,aAAc,gBACdC,WAAY,cACZC,aAAc,gBACdC,cAAe,iBACfC,YAAa,eAEbC,kBAAmB,8DACnBC,qBACE,gIACFC,yBAA0B,yBAG1BC,QAAS,UACTC,kBACE,oEACFC,gBAAiB,6CACjBC,IAAK,MACLC,KAAM,OAENC,2BAA4B,oCAI5BC,eAAgB,yBAChBC,kBAAmB,wBACnBC,uBAAwB,sBAExBC,wBAAyB,2BAGzBC,YAAa,cACbC,cAAe,iBACfC,cAAe,iBAEfC,iBAAkB,4BAClBC,uBAAwB,iCAKxBC,oBAAqB,0CAIrBC,wBAAyB,iDAEzBC,2BAA4B,qCAG5BC,cAAe,gBAEfC,8BAA+B,SAC/BC,6BAA8B,UAC9BC,sCAAuC,WAEvCC,oCAAqC,aACrCC,mCAAoC,MACpCC,4CAA6C,yBAE7CC,0BAA2B,QAC3BC,yBAA0B,OAC1BC,2BAA4B,IAE5BC,6BAA8B,iDAE9BC,yBAA0B,oDAG1BC,6BAA8B,wCAC9BC,mBAAoB,2IAEpBC,SAAU,gBACVC,MAAO,aAEPC,eAAgB,wBAChBC,WAAY,wBACZC,kBAAmB,uCACnBC,mBAAoB,sDAEpBC,eAAgB,8BAEhBC,IAAK,aACLC,GAAI,YAEJC,KAAM,MACNC,MAAO,OACPC,OAAQ,QAERC,OAAQ,UAERC,IAAK,0BACLC,QAAS,aACTC,MAAO,qBACPC,UAAW,yBACXC,QAAS,iBACTC,KAAM,oBAENC,KAAM,oBAENC,QAAS,wBAETC,WAAY,uBACZC,iBAAkB,uCAClBC,8BAA+B,8CAC/BC,gBAAiB,gCACjBC,kBAAmB,6BAEnBC,qBAAsB,kCAEtBC,eAAgB,8BAEhBC,YAAa,oCAEbC,eAAgB,0CAEhBC,aAAc,6BAEdC,qBAAsB,wBACtBC,qBAAsB,4BAEtBC,6BAA8B,iCAE9BC,2BAA4B,kCAG5BC,iBAAkB,qCAElBC,qBAAsB,8DACtBC,6BAA8B,8BAE9BC,mBAAoB,gCAEpBC,oBAAqB,0DAErBC,oBAAqB,+BAErBC,wBAAyB,qBAEzBC,QAAS,gBACTC,OAAQ,eACRC,MAAO,eAEPC,YAAa,+BACbC,YAAa,2CACbC,cAAe,+BACfC,aAAc,oCACdC,wBAAyB,4BAEzBC,eAAgB,+BAEhBC,sBACE,qHACFC,WAAY,qBACZC,SAAU,wBAEVC,mBAAoB,+BAEpBC,eAAgB,MAChBC,iBAAkB,KAElBC,qBACE,+FAEFC,KAAM,OACNC,KAAM,OACNC,SAAU,YACVC,UAAW,YACXC,YAAa,WAIbC,eAAgB,kBAChBC,eAAgB,mBAChBC,gBAAiB,oBACjBC,iBAAkB,qBAClBC,kBAAmB,gCACnBC,UAAW,aACXC,YAAa,eACbC,aAAc,gBACdC,aAAc,gBACdC,eAAgB,kBAChBC,WAAY,cACZC,sBAAuB,6BACvBC,OAAQ,SACRC,aAAc,gBACdC,WAAY,cACZC,YAAa,eACbC,WAAY,cACZC,eAAgB,kBAChBC,aAAc,gBACdC,yBAA0B,gCAC1BC,eAAgB,kBAChBC,2BAA4B,kCAC5BC,gBAAiB,oBACjBC,wBAAyB,+BACzBC,uBAAwB,8BACxBC,wBAAyB,+BACzBC,QAAS,UACTC,YAAa,eACbC,YAAa,eACbC,SAAU,YACVC,iBAAkB,qBAClBC,qBAAsB,0BACtBC,gCAAiC,sCACjCC,qBAAsB,4BACtBC,YAAa,eACbC,SAAU,YACVC,wBAAyB,+BACzBC,0BAA2B,+BAC3BC,oBAAqB,0BACrBC,UAAW,YACXC,mBAAoB,sBACpBC,sBAAuB,6BACvBC,YAAa,eACbC,4BAA6B,iCAC7BC,sCACE,+CACFC,qBAAsB,2BACtBC,MAAO,QACPC,6BAA8B,kCAC9BC,KAAM,OACNC,SAAU,YACVC,SAAU,YACVC,uBAAwB,+BACxBC,YAAa,eACbC,kBAAmB,wBACnBC,cAAe,kBACfC,kCAAmC,2CACnCC,gCAAiC,wCACjCC,aAAc,gBACdC,kBAAmB,qBACnBC,sBAAuB,4BACvBC,cAAe,iBACfC,0BAA2B,kCAC3BC,qBAAsB,yBACtBC,SAAU,WACVC,mBAAoB,sBACpBC,MAAO,QACPC,kBAAmB,qBACnBC,+BAAgC,sCAChCC,kBAAmB,qBACnBC,wBAAyB,4BACzBC,0BAA2B,oCDvP3BC,GERgB,CAChBzL,kBAAmB,kCAEnBC,YAAa,wDACbC,SAAU,kDACVC,YAAa,wBACbC,QAAS,cACTC,SAAU,UACVC,WAAY,sCACZC,WAAY,kBACZC,YAAa,gCACbC,MAAO,iBACPC,UAAW,kBACXC,aAAc,iBACdC,WAAY,6BACZC,aAAc,0BACdC,cAAe,gCACfC,YAAa,6BAEbsC,eAAgB,oEAChBC,WAAY,2DACZE,mBACE,0HAEFC,eAAgB,wDAEhBM,OAAQ,mBACRG,MAAO,wBACPC,UAAW,8BACXC,QAAS,yBACTC,KAAM,2BACNE,QAAS,4CAETU,aAAc,8BFxBdyG,GGTgB,CAChB1L,kBAAmB,mHACnBqD,eAAgB,gJAChBC,WAAY,2IACZE,mBACE,6PACFmI,gBAAiB,sHACjBhG,oBAAqB,8EACrBD,oBAAqB,6GAErBG,QAAS,gEACTC,OAAQ,8CACRC,MAAO,wCAEP9F,YAAa,8FACbC,SAAU,uGACVC,YAAa,yHACbC,QAAS,uCACTC,SAAU,wFACVC,WAAY,sGACZC,WAAY,4EACZC,YAAa,8FACbC,MAAO,uCACPC,UAAW,mDACXC,aAAc,8FACdC,WAAY,mFACZC,aAAc,4EACdC,cAAe,8FACfC,YAAa,oGAEb0C,eAAgB,6GAEhBM,OAAQ,0DACRG,MAAO,8CACPe,aAAc,2FACdd,UAAW,sEACXC,QAAS,sEACTC,KAAM,2DACNE,QAAS,oFAET8B,eAAgB,mKAChBC,sBACE,gjBACFC,WAAY,0CACZC,SAAU,gEAEVC,mBAAoB,wJAEpBC,eAAgB,qDAChBC,iBAAkB,8CAElBC,qBACE,+FAEFC,KAAM,iCACNC,KAAM,iCACNC,SAAU,kFACVC,UAAW,yDACXC,YAAa,sDH9CF2E,EAAY,CACrB,CAAEC,IAAK,KAAMC,MAAO,KAAMC,KAAM,KAAMC,MAAO,iBAC7C,CAAEH,IAAK,KAAMC,MAAO,KAAMC,KAAM,KAAMC,MAAO,WAC7C,CAAEH,IAAK,KAAMC,MAAO,KAAMC,KAAM,KAAMC,MAAO,W,mhFIP1C,IAAMC,EAAQ,CACnBC,WAAY,UAEZC,cAAe,UACfC,gBAAiB,OACjBC,eAAgB,UAChBC,aAAc,OACdC,gBAAiB,OACjBC,cAAe,UACfC,YAAa,OAGTC,EAAeC,UAAOC,OAAV,KAQF,SAAAC,GAAI,OAAIA,EAAKZ,MAAME,iBACxB,SAAAU,GAAI,OAAIA,EAAKZ,MAAMG,mBAMjBU,EAAeH,UAAOI,IAAV,KAMZC,EAAgB,kBAC3B,kBAACN,EAAD,KACE,kBAAC,IAAD,CAASO,QAAS,kBAAMC,OAAOC,SAASC,cAI/BC,EAAcV,UAAOW,MAAV,KAUXC,EAAeZ,mBAAO,gBAAGa,EAAH,EAAGA,UAAWxB,EAAd,EAAcA,MAAUyB,EAAxB,4CACjC,yBAAKD,UAAWA,GACd,+BAAQxB,GACR,kBAACqB,EAAgBI,MAHOd,CAAH,KAmBZe,EAAUf,UAAOgB,GAAV,KAIPC,EAAcjB,kBAAOY,EAAPZ,CAAH,KAoBXkB,EAAelB,UAAOC,OAAV,KAGT,SAAAkB,GAAC,OAAIA,EAAE5B,YAAc4B,EAAE7B,MAAMI,kBAClC,SAAAyB,GAAC,OAAIA,EAAE7B,MAAMK,gBAQN,SAAAwB,GAAC,OAAIA,EAAE7B,MAAMO,iBASlBuB,EAAapB,kBAAOkB,EAAPlB,CAAH,KAKVqB,EAAqBrB,mBAAO,SAACsB,GAAD,OACvC,kBAACJ,EAAiBI,EAChB,kBAAC,IAAD,SAF8BtB,CAAH,KASnB,SAAAmB,GAAC,OAAIA,EAAE7B,MAAMK,gBAIZ4B,EAAmBvB,UAAOwB,KAAV,KAQhBC,EAAgBzB,kBAAOuB,EAAPvB,CAAH,KAIb0B,EAAS1B,UAAOI,IAAV,KAONuB,GAAe3B,kBAAO4B,IAAP5B,CAAH,KAWZ6B,GAAc7B,UAAOX,MAAV,K,6XCnKxB,IAAMsC,GAAe3B,kBAAO4B,IAAP5B,CAAH,MAaZ8B,GAAa9B,UAAOwB,KAAV,M,+NCjBT,IAAMO,GAAyB,SAACC,GAAD,OACpCA,EAAKC,KAAI,SAAA9C,GAAK,MAAK,CACjBA,QACAE,MAAM,GAAD,OAAKnM,EAAQiM,SAGT+C,GAAkB,SAAC/C,GAC9B,QAAIgD,MAAMhD,IAAUA,GAAS,IACpB,yCAKEiD,GAAgB,SAACjB,EAAQkB,EAAWC,GAC/C,IAAMC,EAAUpB,EAAEoB,SAAWD,EAAMD,EAAI,GAkBvC,OAhBKlB,EAAEqB,QAMLrB,EAAEqB,QAAUrB,EAAEqB,QAAQP,KAAI,SAACQ,EAAQC,GAMjC,OALIvB,EAAEwB,SACJF,EAAEF,QAAUpB,EAAEwB,SAASD,GAEvBD,EAAEF,QAAUA,EAEPE,MAXTtB,EAAEoB,QAAUA,GACRpB,EAAEyB,WAAczB,EAAE0B,YAAe1B,EAAE2B,UACrC3B,EAAE2B,QAAU5P,EAAQiO,EAAE4B,aAYnB5B,EAAEwB,SACFxB,GAGI6B,GAAoB,SAAC7D,GAAD,MAAoB,CACnDA,QACAE,MAAOnM,EAAQiM,IAAUA,IAGd8D,GAAoB,SAACX,EAAsBY,GAAvB,OAC/BZ,EAAMa,QAAO,SAACC,EAAKL,EAAYV,EAAGgB,GAWhC,OAVIhB,EAAIgB,EAAIC,OAAS,GACnBF,EAAIG,KAAKnB,G,2VAAc,CAAD,CAElBW,MACIG,EAAUH,IAAO,CAAEH,WAAW,IAEpCP,EACAC,IAGGc,IACN,K,qtBCvCL,IAAMI,GAAcxD,kBAAOU,EAAPV,CAAH,MAKXyD,GAAezD,kBAAOkB,EAAPlB,CAAH,MAOZ0D,GAAY1D,UAAOI,IAAV,MAITuD,GAAkB3D,kBAAO0B,EAAP1B,CAAH,M,8aCdrB,IAAM4D,GAAqB5D,kBAAO2B,GAAP3B,CAAH,MAIlB6D,GAAqB7D,kBAAOU,EAAPV,CAAH,M,oCCpBX8D,GAAgB,CAC3BC,QAAS,CACPC,IAAK,kFACLC,KAAM,CACJC,SAAU,OACVC,SAAU,aAKHC,GAAc,yCAAG,WAAOC,GAAP,wBAAAC,EAAA,6DAEtBC,EAAU,IAAIC,QAFQ,EAIRV,GAAcC,QAA3BC,EAJqB,EAIrBA,IAAKC,EAJgB,EAIhBA,KAEZM,EAAQE,IAAI,gBAAiB,SAAWC,KAAKT,EAAKC,SAAW,IAAMD,EAAKE,WACxEI,EAAQE,IAAI,eAAgB,YAPA,SASLE,MAAMX,EAAI,CAC/BY,OAAQ,OACRL,UACAF,SAZ0B,OAStBQ,EATsB,OAe5BC,QAAQC,IAAIF,GAfgB,2CAAH,sDCTZ,IACbG,QACAC,Y,SCkBIC,GAA8B,eAACC,EAAD,uDAAY,GAAIC,EAAhB,uDAA+B,GAA/B,OAClCA,EACGnD,KACC,gBAAGoD,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,IAAvB,8FAEiDJ,EAFjD,YAE6DE,EAF7D,wCAGYC,EAHZ,mCAIOC,EAJP,qCAODC,KAAK,OAEJC,GAA0B,SAACC,EAAiBvG,GAAlB,OAC9BA,EAAK,WAAOuG,EAAP,YAAkBvG,EAAlB,aAA4BuG,EAA5B,KAAyC,IAEnCC,GAAkB,yCAAG,wFAAArB,EAAA,6DAChCsB,EADgC,EAChCA,UACAT,EAFgC,EAEhCA,SACAU,EAHgC,EAGhCA,eACAC,EAJgC,EAIhCA,iBACAV,EALgC,EAKhCA,aAEAW,EAPgC,EAOhCA,UACAC,EARgC,EAQhCA,SAEAC,EAVgC,EAUhCA,gBACAC,EAXgC,EAWhCA,iBACAC,EAZgC,EAYhCA,iBAEAC,EAdgC,EAchCA,SAEAC,EAhBgC,EAgBhCA,aACAC,EAjBgC,EAiBhCA,eACAC,EAlBgC,EAkBhCA,WACAC,EAnBgC,EAmBhCA,gBAEAC,EArBgC,EAqBhCA,0BACAC,EAtBgC,EAsBhCA,kCACAC,EAvBgC,EAuBhCA,4BACAC,EAxBgC,EAwBhCA,yBAEMC,EAAKC,YAASC,QAEdC,EAAeH,EAAGI,QAClBC,EAAsBL,EAAGM,SAAS,MA7BR,SAjChC,IAAIC,SAAQ,SAAAC,GACV,IAAMC,EAAW,CACfC,SAAU,QACVC,UAAW,YAGTC,UAAUC,YACZD,UAAUC,YAAYC,oBACpB,SAAAC,GACEP,EAAQO,EAASC,WAEnB,kBAAMR,EAAQC,MAGhBD,EAAQC,MAmBoB,uBA+BxBC,EA/BwB,EA+BxBA,SAAUC,EA/Bc,EA+BdA,UAEZM,EAAsB5C,GAC1BC,EACAC,GAGI2C,EAAoBC,iBAAM,GAAD,OAAIhC,EAAJ,YAAgBD,GAAa,KAEtDkC,EAAuBC,GAAwB/B,GAE/CgC,EAAWH,iBAAM3B,GAAgB,IAAMC,EAEvC8B,EAAkBJ,iBAAM5B,GA5CE,spBA0DLY,EA1DK,8DA2DKE,EA3DL,+UAkEJK,EAlEI,YAkEQC,EAlER,qLAsEVM,EAtEU,kSA2EUK,EA3EV,6GA4EY5B,EA5EZ,iLA+EAd,GAAwB,kBAAkBe,GA/E1C,6CAgFAf,GAAwB,mBAAmBS,GAhF3C,kEAkFmB6B,EAlFnB,kFAmFiBK,EAnFjB,kHAoFexC,EApFf,oHAqFqBK,EArFrB,yOAwFqBgC,EAxFrB,0IAyFiBnC,EAzFjB,qIA0FeD,EA1Ff,4GA4FRc,EAA2B,kQAIMA,EAJN,4FAKIF,EALJ,yFAMGG,EANH,iGAOYF,EAPZ,qKAUxB,GAtGK,gNAAH,sDCnCzB2B,GAAQC,EAAQ,IAARA,CAAiB,YAEvBC,GAAShI,OAATgI,KAEFC,GAAIjI,OAEJkI,GAAO,IAAIF,GAAK,CACpBG,KAAMC,GAAI3D,KAAK4D,UAAUC,SACzBC,QAAQ,IAGVL,GAAKM,KAAK,SAAS,WACjBP,GAAEQ,WAAY,KAGhB,IAAMC,GAAW,SAACR,GAAD,OAAe,IAAIrB,SAAQ,SAACC,EAAS6B,GAChDV,GAAEQ,WACJ3B,IAGFoB,EAAKM,KAAK,SAAS,WACjBP,GAAEQ,WAAY,EACd3B,OAGFoB,EAAKM,KAAK,SAAS,SAACI,GAAD,OAAcD,EAAOC,UAGnC,SAASC,GAAQC,GAAa,IAAD,EAEEC,oBAAS,GAFX,mBAE3BC,EAF2B,KAEdC,EAFc,OAGQF,mBAAS,MAHjB,mBAG3BG,EAH2B,KAGZC,EAHY,mDAgBlC,uBAAApF,EAAA,+EAEU2E,GAASR,IAFnB,OAGIe,GAAa,GAHjB,gDAKI1E,QAAQ6E,MAAM,mBAAd,MACAD,EAAiB,EAAD,IAChBF,GAAa,GAPjB,0DAhBkC,sBA6BlC,OAxBAI,qBAAU,WAER,OAPgC,mCAMhCC,GACO,WACDpB,IAAQA,GAAKqB,OACfzB,GAAM,iBACNI,GAAKqB,OACLN,GAAa,OAGhB,IAaHnB,GAAMI,IAEC,CAAEA,QAAMc,cAAaE,iB,0wBClC9B,IAAMM,GAAY/J,kBAAOgK,IAAS5J,IAAhBJ,CAAH,MAKTiK,GAAejK,kBAAOiB,EAAPjB,CAAH,MCtBZkK,GAAc,CAClB,eAEA,uBACA,oBAEA,mBACA,gBAEA,uBACA,oBAEA,uBACA,oBAEA,+BACA,wBAIA,qBACA,kBAEA,sBAEA,qBAGIC,GAAkB,CACtBC,kBAAmB,CACjBC,UAAW,mBTZmB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,gBAC7B9H,EAAU+H,GAD+C,EAE/BjB,oBAAS,GAFsB,mBAExDkB,EAFwD,KAE9CC,EAF8C,OAGrCnB,mBAAS9G,EAAQ,GAAGrD,OAHiB,mBAGxDA,EAHwD,KAGjDuL,EAHiD,OAIrCC,GAAmB,IAApCC,EAJsD,oBAM/D,OACE,kBAAC9I,GAAD,CACE+I,SAAU,SAAAC,GACRA,EAAEC,iBAIFN,GAAY,GAEZG,EAAc,CACZI,QAAS7L,IAGXmL,MAGJ,kBAAC,GAAD,CACEnL,MAAOA,EACPqL,SAAUA,EACVhI,QAASA,EACTyI,SAAUP,EACVQ,QAAS,CACPC,cAAe,iBACfC,YAAa,kBAIjB,kBAAC/J,EAAD,CAAoBmJ,SAAUA,OSrBnB,MACX5H,WAAW,EACXyI,SAAS,EACTxI,YAAY,GAGdyI,kBAAmB,CACjBjB,UAAW,mBNnBmB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,gBAC7B9H,EAAUT,GAAuBwJ,IADuB,EAG9BjC,oBAAS,GAHqB,mBAGvDkB,EAHuD,KAG7CC,EAH6C,OAKzBe,aAEnC,CACAC,aAAcF,GAAa,KARiC,mBAKvDG,EALuD,YAK1CC,EAL0C,EAK1CA,OAAQC,EALkC,EAKlCA,IALkC,EAW1BjB,GAAmB,IAXO,mBAWvDkB,EAXuD,KAW3CjB,EAX2C,KAa9D,OACE,kBAACnJ,EAAD,CACEoJ,SAAU,SAAAC,GACRA,EAAEC,iBAEFN,GAAY,GAEZ,IAAMqB,EAAUhF,YAASC,QACnBgF,EAAYD,EAAQE,MAAR,eACfN,EAAUO,OAAOR,aAAeC,EAAUO,OAAOC,gBAG9CrG,EAAiBiG,EAAQK,YACzBrG,EAAmBiG,EAAUI,YAEnCvB,E,2VAAc,IACTiB,EADQ,CAEX/F,mBACAD,oBAGFyE,MAGF,kBAACzG,GAAD,eAAoBuI,UAAQ,EAAC5B,SAAUA,GAAcmB,EAAO,mBAE5D,kBAAC/H,GAAD,iBACMgI,EAAI,gBADV,CAEEpB,SAAUA,EACVhI,QAASA,EACT0I,QAAS,CACPC,cAAe,iBACfC,YAAa,mBAIjB,kBAAC/J,EAAD,CAAoBmJ,SAAUA,OM9BrB,MACX5H,WAAW,EACXyI,SAAS,EACTxI,YAAY,GAGdwJ,kBAAmB,CACjBhC,UAAW,mBPjBmB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,gBAAkC,KAAjBgC,MAClCC,GAAgB,CAChCC,kBAAmB,cADdC,EAD8D,sBAKjC9B,GAAmB,CACrDvF,aAAc,KANqD,mBAK9DyG,EAL8D,KAKlDjB,EALkD,OASrCtB,oBAAS,GAT4B,mBAS9DkB,EAT8D,KASpDC,EAToD,OAWrCe,eAXqC,mBAW9DE,EAX8D,KAWjDC,EAXiD,KAWjDA,OAXiD,EAazCrC,mBAAS,IAbgC,mBAa9DoD,EAb8D,KAatDC,EAbsD,KAerE,OACE,kBAACpL,EAAD,CACEsJ,SAAU,SAAAC,GACRA,EAAEC,iBAIFN,GAAY,GAEZ,IAAMrF,EAAeyG,EAAWzG,cAAgB,GAEhDA,EAAa7B,KAAK,CAChB8B,SAAUqH,EACVpH,SAAUoG,EAAUO,OAAOW,OAC3BrH,IAAKsH,GAAOJ,EAAQD,qBAGtB5B,E,2VAAc,IACPiB,EADM,CAETzG,kBAGJkF,MAGF,kBAAC3G,GAAD,KACE,kBAACD,GAAD,KACGgJ,GAEH,kBAACjJ,GAAD,CAAcnD,QAAS,SAACwK,GACtBA,EAAEC,iBAEF,IAAM+B,EAAOC,OAEbJ,EAAUG,KALZ,WAOW,IACT,kBAAC,KAAD,CAAQE,KAAK,SAIjB,kBAACtL,EAAD,KACE,kBAAC8B,GAAD,eAAa4I,UAAQ,EAAC5B,SAAUA,GAAcmB,EAAO,YACrD,6BACGzY,EAAQuZ,EAAQD,oBAEnB,kBAACnL,EAAD,CAAoBmJ,SAAUA,IAAakC,QO5CpC,MACX9J,WAAW,EACXyI,SAAS,EACTxI,YAAY,GAGdoK,cAAe,CACbrK,WAAW,EACXJ,QAAS,CAAC,KAAM,KAAM,KAAM,MAAMP,IAAIe,KAGxCkK,sBAAuB,CACrBtK,WAAW,EACXJ,QAAS,CAAC,MAAO,MAAMP,IAAIe,IAC3BL,SAAU,CAAC,qBAAsB,sBAGnCwK,gBAAiB,CACf9C,UAAW,mBDnCY,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,gBACpB2C,EADsD,EAAjBX,MACrCW,cAEAG,EAAWzE,GAAI3D,KAAK4D,UAApBwE,OAHsD,EAKjBhE,KAArCX,EALsD,EAKtDA,KAAMc,EALgD,EAKhDA,YAAaE,EALmC,EAKnCA,cALmC,EAO1BkB,KAP0B,mBAOvDkB,EAPuD,KAO3CjB,EAP2C,OAS5C2B,KAAXE,EATuD,sBAW3CY,KAAZjH,EAXuD,sBAa9BkD,oBAAS,GAbqB,mBAavDkB,EAbuD,KAa7CC,EAb6C,OAe1BnB,mBAAS,IAfiB,mBAevDgE,EAfuD,KAe3CC,EAf2C,OAiB9CjE,mBAAS,IAAlBK,EAjBuD,sBAkBhCL,mBAAS,IAlBuB,mBAkBvDkE,EAlBuD,KAkB9CC,EAlB8C,OAmBtCnE,mBAAS,IAAxBoE,EAnBqD,sBAoB9BpE,mBAAS,IApBqB,mBAoBvDqE,EApBuD,KAoB7CC,EApB6C,KAsBtDxI,EAAoCyG,EAApCzG,aAAiByI,EAtBqC,YAsBlBhC,EAtBkB,oBAwBhCL,aAAa,MACtCqC,EADqC,CAExCjI,UAAWqH,EAAc9N,SA1BmC,mBAwBvDuM,EAxBuD,KAwB1CoC,EAxB0C,KAwB1CA,KAxB0C,EA6B3BtC,aAAa,CAC9C4B,SACAW,MAAO,eA/BqD,mBA6BvDC,EA7BuD,KA6BxCC,GA7BwC,KAqC9D,OAAK7I,EAKH,kBAAC2E,GAAD,KACE,kBAACxI,EAAD,CACEsJ,SAAQ,yCAAE,WAAMC,GAAN,sBAAAxG,EAAA,6DACRwG,EAAEC,iBACFN,GAAY,GAENtF,EAAW+I,GAASrC,EAAWb,SAJ7B,SAMerF,GAAmB,MACrC8G,EADoC,GAEpCZ,EAFoC,CAGvCjG,UAAWqH,EAAc9N,MACzBiH,WACAjB,cAXM,OAMFgJ,EANE,OAcFC,EAdE,iCAAA9J,EAAA,MAcU,6BAAAA,EAAA,sEAMUqE,GAAI3D,KAAKZ,eACjC4J,EAAc/B,OACdxD,EACA0F,GATc,OAMVE,EANU,OAYhBT,EAAYS,EAAYV,UACxBD,EAAYW,EAAYC,UAExBb,EAAW,QAfK,2CAdV,qDAgCFc,EAAc,GAhCZ,KAkCAjB,EAlCA,OAmCD,SAnCC,QAuCD,aAvCC,uCAoCJiB,EAAYhL,KAAK6K,KACjBG,EAAYhL,KAAKoF,GAAI1D,SAASb,eAAe+J,IArCzC,oCAwCJI,EAAYhL,KAAK6K,KAxCb,oCA4CJG,EAAYhL,KAAKoF,GAAI1D,SAASb,eAAe+J,IA5CzC,8CAgDF/G,QAAQoH,IAAID,GAhDV,QAkDR3D,EAAc,MACTiB,EADQ,CAEX4C,MAAM,KAGRnE,IAvDQ,4CAAF,uDA0DPoE,OAAOC,KAAKjD,EAAUO,QAAQhK,KAAI,SAAA2M,GAAC,OAClC,kBAAC3N,EAAD,eACE/B,IAAK0P,EACLpE,SAAUA,EACVnL,MAAOuP,GACHd,EAAKc,QAIb,kBAAC7N,EAAD,MAECqE,EAAanD,KAAI,WAAmCI,GAAnC,IAAGgD,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,IAAvB,OAChB,kBAAC0E,GAAD,CACE4E,UAAQ,EACR3P,IAAKmG,EACLmF,SAAUA,EACVnL,MAAOgG,EACPlG,MAAK,UAAKmG,EAAL,YAAiBC,QAI1B,kBAACxE,EAAD,MAEA,kBAACK,EAAD,CACEoJ,SAAUA,GAAYqB,EAAW4C,KACjCnO,QAAS,kBAAMiN,EAAc,cAF/B,oBAOA,6BAEA,kBAAC3M,EAAD,eACEvB,MAAO,MACPmL,SAAUA,EACV4B,UAAQ,GACJ6B,GAAUH,KAAK,UAJrB,CAKEgB,YAAa,2BAGf,kBAAClO,EAAD,eACEvB,MAAO,QACPmL,SAAUA,EACV4B,UAAQ,GACJ6B,GAAUH,KAAK,SAJrB,CAKEgB,YAAa,yBAGdvF,GACC,oCACE,kBAACnI,EAAD,CACE7B,WAAY,aACZiL,SAAUA,GAAYqB,EAAW4C,KACjCnO,QAAS,kBAAMiN,EAAc,cAH/B,eAOA,kBAACnM,EAAD,CACE7B,WAAY,aACZiL,SAAUA,GAAYqB,EAAW4C,KACjCnO,QAAS,kBAAMiN,EAAc,UAH/B,8BAWN,yBAAKwB,MAAO,CAAEC,MAAO,QAClBrF,EAAMrG,OAAS,GAAK,wCAAcqG,GAClCF,GACC,wCAAcA,EAAc3G,SAAW2G,IAG1C+D,EAAQlK,OAAS,GAChB,6FAEE,uBACE2L,KAAK,uEACLC,OAAO,SACPC,IAAI,uBAHN,wEAOA,kBAACpO,EAAD,MACA,kBAACc,GAAD,KACG,IADH,8CAE8C,KAE9C,uBAAGoN,KAAI,+BAA0BtB,GAAYuB,OAAO,SAASC,IAAI,uBAAjE,+BAC2BxB,MA1J1B,sDCHI,MACX/K,WAAW,EACXyI,SAAS,EACTxI,YAAY,GAGduM,iBAAkB,CAChBxM,WAAW,EACXJ,QAAS,CAAC,UAAW,SAAU,SAASP,IAAIe,KAG9CjK,oBAAqB,CACnBsR,UAAW,mBC9EgB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,gBAA2B,EACnChB,oBAAS,GAD0B,mBACpD+F,EADoD,KAC9CC,EAD8C,KAG3D,OACE,kBAAC,KAAD,CACEC,IAAK,SAACA,GACAA,IAAQF,IACVE,EAAIC,WACJF,GAAQ,GAERhF,MAGJmF,KAAK,QACLC,OAAQ,CACNC,MAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,kBAGhE,6BAAMzc,EAAQ6F,wBD4DL,MACX6J,WAAW,EACXyI,SAAS,EACTxI,YAAY,IEnFH+M,GAAmB,kBAC9B,6BACG1c,EAAQyG,sBACT,6BACA,+BACE,+BACE,4BACE,4BAAI,0BAAMkW,KAAK,MAAMC,aAAW,QAA5B,iBACJ,4BAAK5c,EAAQgH,MACb,2CAEF,4BACE,4BAAI,0BAAM2V,KAAK,MAAMC,aAAW,QAA5B,WACJ,4BAAK5c,EAAQiH,MACb,mDAEF,4BACE,4BAAI,0BAAM0V,KAAK,MAAMC,aAAW,aAA5B,iBACJ,gCAAM5c,EAAQmH,WACd,qEAEF,4BACE,4BAAI,0BAAMwV,KAAK,MAAMC,aAAW,YAA5B,iBACJ,4BAAK5c,EAAQoH,aACb,2DCtBGyV,GAAqB,CAChC,iBACA,yBACA,wBACA,qBACA,kBACA,sBACA,qB,wNCPF,IAAMpO,GAAe3B,kBAAO4B,IAAP5B,CAAH,MAaLgQ,GAAsB,SAAC,GAA+B,IAA7B1F,EAA4B,EAA5BA,gBAE9B2F,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,gBAAyB,CAAEC,QAAS,IAFtB,EAIhChH,oBAAS,GAJuB,mBAIzDkB,EAJyD,KAI/CC,EAJ+C,OAKxCnB,mBAAS2G,EAAUK,QAAQ,GAAKL,EAAUK,QAAQ,GAAGnR,MAAQ,MALrB,mBAKzDoR,EALyD,KAKnDC,EALmD,KAOhE,OAAIP,EAAUK,QAAQ,GAmBpB,kBAAC,GAAD,CACEnR,MAAOoR,EACP/F,SAAUA,EACVhI,QAASyN,EAAUK,QACnBpF,QAAS,CACPC,cAAe,iBACfC,YAAa,gBAEfH,SAAU,SAACsF,GACTC,EAAQD,GACR9F,GAAY,GACZH,EAAgB,CACdnL,MAAOoR,QA9BbE,YAAW,WACTL,aAAaM,WAAWC,GAAgBC,WACxCrQ,OAAOC,SAASC,WACf,KAED,6BACE,8DAGA,6BACA,kEACA,6BANF,oCC3BAoQ,GAAkB,CACtB,cACA,cACA,cAEA,WACA,gBAEA,aACA,eAEA,YACA,0BACA,qB,kxBCCF,IAAM9G,GAAY/J,kBAAOgK,IAAS5J,IAAhBJ,CAAH,MAaT8Q,GAAwB9Q,kBAAOU,EAAPV,CAAH,MAIrB8B,GAAa9B,UAAOwB,KAAV,MAMVuP,GAAqB/Q,UAAOgR,KAAV,MACb,SAAA7P,GAAC,OAAIA,EAAE7B,MAAMI,kB,8uBC/BxB,IAAMuR,GAAejR,kBAAO2B,GAAP3B,CAAH,MAIZkR,GAAUlR,kBAAOU,EAAPV,CAAH,MCCAmR,GAAc,SAACC,EAAiBC,EAAkBC,GAC7D,GAAMC,GAAoBH,GACxB,OAAO,EAGT,IAAIC,EACF,OAAO,EAGT,IAAMG,EAAU,UAAMJ,EAAN,YAAiBC,GAEjC,GAAKE,GAAoBC,GACvB,OAAO,EAGT,IAAIF,EACF,OAAO,EAGT,IAAMG,EAAe,UAAMD,EAAN,YAAoBF,GAEzC,QAAKC,GAAoBE,IAOdC,GAAW,CACtBnX,eAAgB,CAEdC,eAAgB,CAEdC,gBAAiB,KACjBC,iBAAkB,MAEpBC,kBAAmB,MAErBC,UAAW,CAETC,YAAa,KACbC,aAAc,CAEZC,aAAc,KACdC,eAAgB,KAChBC,WAAY,MAEdC,sBAAuB,MAEzBC,OAAQ,CACNC,aAAc,CACZC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,eAAgB,KAChBC,aAAc,KACdC,yBAA0B,MAE5BC,eAAgB,CACdL,YAAa,KACbC,WAAY,KACZE,aAAc,KACdG,2BAA4B,MAE9BC,gBAAiB,KACjBC,wBAAyB,KACzBC,uBAAwB,KACxBC,wBAAyB,MAE3BC,QAAS,CACPC,YAAa,KACbC,YAAa,MAEfC,SAAU,CACRC,iBAAkB,KAClBC,qBAAsB,KACtBC,gCAAiC,KACjCC,qBAAsB,MAExBC,YAAa,CACXC,SAAU,KACVC,wBAAyB,MAE3BC,0BAA2B,CACzBC,oBAAqB,KACrBC,UAAW,KACXC,mBAAoB,KACpBC,sBAAuB,KACvBC,YAAa,KACbC,4BAA6B,KAC7BC,sCAAuC,KACvCC,qBAAsB,MAExBC,MAAO,CACLC,6BAA8B,KAC9BC,KAAM,KACNC,SAAU,KACVC,SAAU,KACVC,uBAAwB,KACxBC,YAAa,KACbC,kBAAmB,MAErBC,cAAe,CACbC,kCAAmC,KACnCC,gCAAiC,KACjCC,aAAc,KACdC,kBAAmB,KACnBC,sBAAuB,KACvBC,cAAe,KACfC,0BAA2B,MAE7BC,qBAAsB,CACpBC,SAAU,MAEZC,mBAAoB,CAClBC,MAAO,KACPC,kBAAmB,KACnBC,+BAAgC,MAElCC,kBAAmB,KACnBC,wBAAyB,KACzBC,0BAA2B,MAGhB8S,GAAejD,OAAOC,KAAK+C,IA+E3BH,GAAsB,CACjCK,8BAA+B,KAC/BC,8CAA+C,MAC/CC,+CAAgD,MAChDC,iCAAkC,KAElCC,sBAAuB,KACvBC,uBAAwB,KACxBC,oCAAqC,MACrCC,sCAAuC,MACvCC,kCAAmC,MACnCC,gCAAiC,KAEjCC,+BAAgC,MAChCC,gCAAiC,MACjCC,+BAAgC,MAChCC,mCAAoC,MACpCC,iCAAkC,MAClCC,6CAA8C,KAE9CC,kCAAmC,MACnCC,iCAAkC,MAClCC,mCAAoC,MACpCC,iDAAkD,KAClDC,uBAAwB,MACxBC,+BAAgC,KAChCC,8BAA+B,KAC/BC,+BAAgC,KAEhCC,oBAAqB,MACrBC,oBAAqB,MAErBC,0BAA2B,MAC3BC,8BAA+B,MAC/BC,yCAA0C,MAC1CC,8BAA+B,KAE/BC,qBAAsB,MACtBC,oCAAqC,KAErCC,8CAA+C,MAC/CC,oCAAqC,MACrCC,6CAA8C,MAC9CC,gDAAiD,MACjDC,sCAAuC,MACvCC,sDAAuD,MACvDC,gEAAiE,MACjEC,+CAAgD,KAEhDC,mCAAoC,MACpCC,WAAY,MACZC,eAAgB,MAChBC,eAAgB,MAChBC,6BAA8B,MAC9BC,kBAAmB,MACnBC,wBAAyB,MAEzBC,gDAAiD,MACjDC,8CAA+C,MAC/CC,2BAA4B,MAC5BC,gCAAiC,MACjCC,oCAAqC,KACrCC,4BAA6B,MAC7BC,wCAAyC,KAEzCC,8BAA+B,MAE/BC,yBAA0B,MAC1BC,qCAAsC,MACtCC,kDAAmD,MAEnD1W,kBAAmB,MACnBC,wBAAyB,KACzBC,0BAA2B,M,ipBCnR7B,IAAMiD,GAAa9B,UAAOwB,KAAV,MAQVG,GAAe3B,kBAAO4B,IAAP5B,CAAH,MAcZsV,GAAuB,SAACC,GAC5B,GAAIA,EAAc,CAChB,IAAM5G,EAAOD,OAAOC,KAAK4G,GAEzB,OAAI5G,EAAKrL,OAAS,EACTvB,GAAuB4M,GAEvB,GAGT,MAAO,I,+gBCxCX,IAAM5E,GAAY/J,kBAAOgK,IAAS5J,IAAhBJ,CAAH,MAIT8B,GAAa9B,UAAOwB,KAAV,M,4sCCIhB,IAAMuI,GAAY/J,kBAAOgK,IAAS5J,IAAhBJ,CAAH,MAaT8B,GAAa9B,UAAOwB,KAAV,MASVgU,GAAoBxV,UAAOgR,KAAV,MACZ,SAAA7P,GAAC,OAAIA,EAAE7B,MAAMI,kBAIlB+V,GAAqBzV,kBAAOY,EAAPZ,CAAH,MChClBkK,GAAc,CAClB,oBAEA,uBAEA,2BACA,wBAEA,oBACA,iBAEA,kBACA,eAEA,6BACA,0BAEA,0BACA,uBAEA,mBACA,gBAEA,yBACA,sBAEA,sBACA,mBAEA,0BACA,uBAEA,6BACA,0BAEA,+BACA,4BAEA,2BACA,wBAEA,+BAEA,uBAEA,qBAEA,qBAGIC,GAAkB,CACtBuL,sBAAuB,CACrBrL,UAAW,mBNlBuB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,gBAAkC,KAAjBgC,MAC1BqJ,GAAuB,KADoB,mBAClElJ,EADkE,KACzDmJ,EADyD,OAGzCtM,oBAAS,GAHgC,mBAGlEkB,EAHkE,KAGxDC,EAHwD,OAK3Ce,eAL2C,mBAKlEE,EALkE,KAKrDoC,EALqD,KAKrDA,KAEpB,OACE,kBAAC,GAAD,KACE,kBAACiD,GAAD,KAAqB7d,EAAQsB,SAE7B,kBAAC,GAAD,CACEqW,SAAU,SAAAC,GACRA,EAAEC,iBADW,MAE+BW,EAAUO,OAA9CjG,EAFK,EAELA,SAAUD,EAFL,EAEKA,UAAW8P,EAFhB,EAEgBA,WAE7BpL,GAAY,GAEZmL,E,2VAAW,IACNnJ,EADK,CAERjY,QAAS,CACPuR,YACA8P,aACA7P,WACA8P,SAAU9N,iBAAM,GAAD,OAAIhC,EAAJ,YAAgBD,GAAY,SAI/CuE,EAAgB,CACdnL,MAAO6G,MAIX,kBAACtF,EAAD,eACE8J,SAAUA,EACV4B,UAAQ,EACR0C,YAAa5b,EAAQgD,0BACjB4X,EAAK,cAEV,KACD,kBAACpN,EAAD,eACE8J,SAAUA,EACV4B,UAAQ,EACR0C,YAAa5b,EAAQ+C,2BACjB6X,EAAK,eAEX,kBAACgD,GAAD,eACEtG,SAAUA,EACVsE,YAAa5b,EAAQiD,4BACjB2X,EAAK,cAHX,CAIEiI,UAAW,KAEZ,IAED,kBAAC1U,EAAD,CAAoBmJ,SAAUA,QMpCvB,MACX5H,WAAW,EACXyI,SAAS,EACTxI,YAAY,GAGdmT,eAAgB,CACdC,MAAM,GAGRC,aAAc,CACZ7L,UAAW,mBLxDc,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,gBAAiBgC,EAAiB,EAAjBA,MAAiB,EAClCqJ,GAAuB,IADW,mBACzDlJ,EADyD,KAChDmJ,EADgD,KAG1DpT,EAAU2T,GAHgD,EAKhC7M,oBAAS,GALuB,mBAKzDkB,EALyD,KAK/CC,EAL+C,OAO1Be,aAAiC,CACrE4K,OAAQ,QARsD,mBAOzD1K,EAPyD,YAO5CoC,EAP4C,EAO5CA,KAAMuI,EAPsC,EAOtCA,OAI1B,OACE,kBAAC5U,EAAD,CACEoJ,SAAU,SAAAC,GACRA,EAAEC,iBAIFN,GAAY,GAEZmL,EAAW,MACJnJ,EADG,CAEN6J,OAAO,IACLC,KAAMjK,EAAM0J,eAAe7W,OACxBuM,EAAUO,WAInB3B,MAGF,kBAAC2G,GAAD,CACEhG,SAAU,SAAC9L,GAAD,OAAkBkX,EAAO,UAAUpL,SAAS,CAACiE,OAAO,CAAC/P,YAC/DA,MAAOkX,EAAO,UAAUlX,MACxBqL,SAAUA,EACVhI,QAASA,EACT0I,QAAS,CACPC,cAAe,iBACfC,YAAa,kBAIjB,kBAAC8F,GAAD,eAAS1G,SAAUA,GAAcsD,EAAK,cACtC,kBAACzM,EAAD,CAAoBmJ,SAAUA,OKarB,MACX5H,WAAW,EACXyI,SAAS,EACTxI,YAAY,GAGd2T,wBAAyB,CAEvBnM,UAAW,mBH9BiB,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,gBAA0B,EAC5BqL,GAAuB,IADK,mBACnDlJ,EADmD,KAC1CmJ,EAD0C,OAG5BtM,mBAAS,IAHmB,mBAGnD8H,EAHmD,KAG1CqF,EAH0C,OAI5BnN,mBAAS,IAJmB,mBAInD+H,EAJmD,KAI1CqF,EAJ0C,OAKxBpN,mBAAS,IALe,mBAKnDgI,EALmD,KAKxCqF,EALwC,KAOpDC,EAAiB7U,GAAuB4P,IAPY,EASdrI,mBAAS,IATK,mBASnDuN,EATmD,KASnCC,EATmC,OAUVxN,mBAAS,IAVC,mBAUnDyN,EAVmD,KAUjCC,EAViC,OAY1B1N,oBAAS,GAZiB,mBAYnDkB,EAZmD,KAYzCC,EAZyC,KAe1D,OACE,kBAAC,GAAD,CACEI,SAAU,SAAAC,GACRA,EAAEC,iBAEFN,GAAY,GAEZ,IAAMwM,ED3EU,SAAC7F,EAAiBC,EAAkBC,GAC1D,OAAKA,EACG,GAAN,OAAUF,EAAV,YAAqBC,EAArB,YAAgCC,GAG5BD,EACE,GAAN,OAAUD,EAAV,YAAqBC,GAGlBD,GAIE,KC8Dc8F,CAAU9F,EAASC,EAASC,GAI3C,IAAK2F,EACH,OAAOnS,QAAQ6E,MAAM,yBAGvB,IAAMwN,EAAsB5F,GAAoB0F,GAEhDrB,E,2VAAW,IACJnJ,EADG,CAEN0K,yBAGJ7M,MAGF,kBAAC,GAAD,CACEwE,YAAa5b,EAAQ4B,eACrBmW,SAAU,SAAC9L,GACTsX,EAAWtX,GAEXuX,EAAW,IACXI,EAAkBxB,GAAe5D,GAASvS,KAE1CwX,EAAa,IACbK,EAAoB,KAEtB7X,MAAOiS,EACP5G,SAAUA,EACVhI,QAASoU,EACT1L,QAAS,CACPC,cAAe,iBACfC,YAAa,kBAGjB,kBAAC,GAAD,CACE0D,YAAa5b,EAAQ6B,kBACrBkW,SAAU,SAAC9L,GACTuX,EAAWvX,GACXwX,EAAa,IACbK,EAAoB1B,GAAe5D,GAASN,GAASjS,MAEvDA,MAAOkS,EACP7G,SAAUA,GAAsC,IAA1BqM,EAAevT,OACrCd,QAASqU,EACT3L,QAAS,CACPC,cAAe,iBACfC,YAAa,kBAGjB,kBAAC,GAAD,CACEgM,WAAS,EACTtI,YAAa5b,EAAQ8B,uBACrBiW,SAAU0L,EACVU,aAAc,kBAAIV,EAAa,KAC/BxX,MAAOmS,EACP9G,SAAUA,GAAwC,IAA5BuM,EAAiBzT,OACvCd,QAASuU,EACT7L,QAAS,CACPC,cAAe,iBACfC,YAAa,kBAIjB,kBAAC/J,EAAD,CACEmJ,SAAUA,IAAa2G,GAAYC,EAASC,EAASC,QG3D9C,MACX1O,WAAW,EACXyI,SAAS,EACTxI,YAAY,GAGdyU,qBAAsB,CAEpB1U,WAAW,EACXJ,QAAS,CAAC,cAAe,gBAAiB,iBAAiBP,IACzDe,KAIJuU,cAAe,CAEb3U,WAAW,EACXJ,QAAS,CAAC,MAAO,MAAMP,IAAIe,IAC3BL,SAAU,CAAC,sBAAuB,2BAGpC6U,oBAAqB,CACnBvB,MAAM,GAGRwB,iBAAkB,CAChB7U,WAAW,EACXJ,QAAS,CAAC,MAAO,MAAMP,IAAIe,IAC3BL,SAAU,CAAC,0BAA2B,+BAGxC+U,qBAAsB,CACpBzB,MAAM,GAGR0B,sBAAuB,CACrB/U,WAAW,EACXJ,QAAS,CAAC,QAAS,YAAYP,IAAIe,KAGrC4U,wBAAyB,CACvBhV,WAAW,EACXJ,QAAS,CAAC,MAAO,MAAMP,IAAIe,IAC3BL,SAAU,CAAC,+BAAgC,6BAG7CkV,0BAA2B,CACzBxN,UAAW,mBDjFyB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,gBAAkC,KAAjBgC,MAC5BqJ,GAAuB,KADsB,mBACpElJ,EADoE,KAC3DmJ,EAD2D,OAG3CtM,oBAAS,GAHkC,mBAGpEkB,EAHoE,KAG1DC,EAH0D,OAK7Ce,eAL6C,mBAKpEE,EALoE,KAKvDoC,EALuD,KAKvDA,KAEpB,OACE,kBAAC,GAAD,KACE,kBAAC0H,GAAD,KAAoBtiB,EAAQwC,eAE5B,kBAAC,GAAD,CACEmV,SAAU,SAAAC,GACRA,EAAEC,iBAEFN,GAAY,GAEZmL,EAAW,MACNnJ,EADK,CAERqL,oBAAoB,MACfpM,EAAUO,OADI,CAEjB8L,SAAU,WAIdzN,MAEF,kBAACmL,GAAD,eACEjL,SAAUA,EACV4B,UAAQ,EACR/M,MAAOnM,EAAQyC,8BACfmZ,YAAa5b,EAAQ4C,qCACjBgY,EAAK,YAGX,kBAAC2H,GAAD,eACEjL,SAAUA,EACV4B,UAAQ,EACR/M,MAAOnM,EAAQ0C,6BACfkZ,YAAa5b,EAAQ6C,oCACjB+X,EAAK,WAGX,kBAAC2H,GAAD,eACEjL,SAAUA,EACV4B,UAAQ,EACR/M,MAAOnM,EAAQ2C,sCACfiZ,YAAa5b,EAAQ8C,6CACjB8X,EAAK,oBAGX,kBAACzM,EAAD,CAAoBmJ,SAAUA,QC8BvB,MACX5H,WAAW,EACXyI,SAAS,EACTxI,YAAY,GAGdmV,qBAAsB,CACpB3N,UAAW,mBFnHqB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,gBAAiBgC,EAAiB,EAAjBA,MAEpDgL,EAMEhL,EANFgL,qBAEAE,EAIElL,EAJFkL,oBACAE,EAGEpL,EAHFoL,qBAEAC,EACErL,EADFqL,sBAPqE,EAU9ChC,GAAuB,IAAzCsC,EAVgE,sBAYhD1L,GAAgB,IAA9BqJ,EAZ8D,sBAcvCtM,oBAAS,GAd8B,mBAchEkB,EAdgE,KActDC,EAdsD,KAgB/DjW,EAAyCyjB,EAAzCzjB,QAAS8hB,EAAgC2B,EAAhC3B,OAAQwB,EAAwBG,EAAxBH,oBAhB8C,EAkBzCtM,aAA6C,CACzEzF,UAAWvR,EAAQuR,UACnB8P,WAAYrhB,EAAQqhB,WACpB7P,SAAUxR,EAAQwR,SAElBK,aAAciQ,EAAOF,OACrB9P,eAAgBgQ,EAAO4B,SACvB3R,WAAY+P,EAAOC,KAEnB5P,4BAA6BmR,EACzBA,EAAoBC,SACpB,GACJtR,0BAA2BqR,EACvBA,EAAoBK,OACpB,GACJvR,yBAA0BkR,EACtBA,EAAoB3Y,MACpB,GACJuH,kCAAmCoR,EAC/BA,EAAoBM,eACpB,GAEJnS,gBAAiBgS,EAAed,oBAEhChR,iBAAkBmR,EAAqBnY,MAEvCqH,gBAAiBgR,EAAsBA,EAAoBrY,MAAQ,GACnE+G,iBAAkBwR,EAAuBA,EAAqBvY,MAAQ,GAEtEqN,kBAAmBmL,EAAsBxY,QA/C4B,mBAkBhEuM,EAlBgE,KAkBnDoC,EAlBmD,KAkBnDA,KAoCpB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEjD,SAAU,SAAAC,GACRA,EAAEC,iBAEFN,GAAY,GAEZmL,E,2VAAW,IACNlK,EAAUO,OADL,CAERoM,WAAW,KAGbjI,aAAaM,WAAWC,GAAgBC,WAExCtG,MAGDoE,OAAOC,KAAKjD,EAAUO,QAAQhK,KAAI,SAAA2M,GAAC,OAClC,kBAAC3N,EAAD,eACE/B,IAAK0P,EACLpE,SAAUA,EACVnL,MAAOuP,GACHd,EAAKc,QAIb,kBAACvN,EAAD,CAAoBmJ,SAAUA,QEkCvB,MACX5H,WAAW,EACXyI,SAAS,EACTxI,YAAY,I,qEC5IHyV,GAA4B,CACvC,SACA,UACA,sBACA,eACA,WACA,YACA,sBACA,kBACA,cAEA,gBAEA,eACA,iBAEA,uDACA,uDACA,mDAGWC,GAA+B,CAC1C,UACA,sBACA,eACA,YACA,sBACA,kBACA,cAEA,eACA,iBAEA,6CACA,6CACA,wCAEA,8CACA,8CACA,yCAEA,iBACA,sBACA,sBACA,iCAEA,2DACA,mEACA,6DACA,2DAGWC,GAAuB,CAClC,SACA,UACA,sBACA,eACA,YACA,sBACA,kBACA,cAEA,cAEA,eACA,iBAEA,yCACA,0CAEA,mCACA,oCAEA,6CACA,8CAEA,qBACA,sCACA,yCACA,gCACA,kCACA,sBACA,gCACA,kCACA,sCACA,+BACA,8BACA,+BACA,oCACA,mCAEA,qEACA,6EACA,uEACA,oEAEA,6EACA,uFACA,mFACA,4EACA,8EACA,kFACA,sFAEA,kDACA,kDACA,8CAGWC,GAAoB,CAC/B,sBACA,KACA,OACA,gBACA,mBACA,mBACA,OACA,QACA,aACA,cACA,WACA,YACA,UACA,YACA,QACA,WACA,aACA,kBACA,yBACA,sBACA,iCACA,oCAGWC,GAAoB,CAC/B,sBACA,KACA,mBACA,0CACA,0CACA,yBACA,oCACA,4BACA,8BACA,kCAGWC,GAA4B,CACvC,WACA,aACA,cACA,aACA,eACA,iBAGWC,GAAsB,CACjC,wBACA,6BACA,2BACA,wBACA,6BACA,2BACA,WACA,2BACA,mBACA,mBACA,wBACA,yBACA,YACA,4BACA,wBACA,oBACA,oBACA,4BACA,gBACA,cACA,0BACA,2CAGWC,GAA0B,CACrC,WACA,OACA,kBACA,oBACA,mBACA,mBACA,OACA,QACA,aACA,cACA,WACA,YACA,UACA,YACA,SAGWC,GAA0B,CACrC,SACA,YACA,sBACA,YACA,cACA,sBACA,WACA,eACA,uBAGWC,GAAkC,UAC1CH,GACAC,GACAC,IASQE,IANoB,UAC5BJ,GACAC,GACAC,IAG0C,CAC7C,wBACA,iCACA,2BACA,gBACA,yBACA,mBACA,cACA,wBACA,cACA,gBACA,YACA,cACA,wBACA,uBACA,yBACA,kBACA,aACA,iBACA,WACA,qBACA,aACA,kBACA,eACA,sBACA,uBACA,mBACA,iBACA,gBACA,mBACA,mBACA,uBACA,mBACA,iBACA,uBACA,0BACA,MACA,OACA,eACA,gBACA,oBACA,qBACA,kBACA,iBACA,cACA,wBACA,cACA,gBACA,iBACA,uBACA,kBACA,kBACA,oBACA,iBACA,YACA,YACA,iBACA,iBACA,mBACA,kBACA,kBACA,qBACA,cACA,oBACA,oBACA,gBACA,iBACA,sBACA,uBACA,uBACA,wBACA,gCACA,mBCpSWG,GAA2B,SAACC,GACvC,IAAKA,EAAM,MAAM,IAAIC,MAAM,WAE3B,GAAmC,QAA/BD,EAAK3C,KAAK6C,MAAM,KAAKC,MACvB,MAAM,IAAIF,MAAM,WAGlB,OAAOG,KAAiBJ,IAGbK,GAAW,SAACC,GAAD,OACtBA,GAA4B,MAAvBA,EAAE,GAAGC,cAAwB,MAAQ,OAE/BC,GAAe,SAAC,GAAD,IAC1BC,EAD0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","file":"static/js/main.eb49ee9d.chunk.js","sourcesContent":["import LocalizedStrings from \"react-localization\";\r\n\r\nimport { en } from \"./en\";\r\nimport { vn } from \"./vn\";\r\nimport { rs } from \"./rs\";\r\n\r\nexport const strings: any = new LocalizedStrings({\r\n  en,\r\n  vn,\r\n  rs\r\n});\r\n\r\nexport const languages = [\r\n    { key: \"us\", value: \"us\", flag: \"us\", label: \"United States\" },\r\n    { key: \"vn\", value: \"vn\", flag: \"vn\", label: \"Vietnam\" },\r\n    { key: \"rs\", value: \"rs\", flag: \"rs\", label: \"Serbia\" }\r\n  ];","export const en = {\r\n  input_placeholder: \"Type your answer . . .\",\r\n\r\n  atlanticCod: \"Atlantic Cod\",\r\n  blueCrab: \"Blue Crab (Atlantic)\",\r\n  dolphinFish: \"Dolphinfish (Mahi Mahi)\",\r\n  grouper: \"Potato Grouper\",\r\n  kingCrab: \"King Crab (red)\",\r\n  pacificCod: \"Pacific Cod\",\r\n  redSnapper: \"Red Snapper\",\r\n  seaCucumber: \"Black Spotted Sea Cucumber\",\r\n  shark: \"Frilled Shark\",\r\n  swordfish: \"Swordfish\",\r\n  albacoreTuna: \"Albacore Tuna\",\r\n  bigeyeTuna: \"Bigeye Tuna\",\r\n  skipjackTuna: \"Skipjack Tuna\",\r\n  yellowfinTuna: \"Yellowfin Tuna\",\r\n  bluefinTuna: \"Bluefin Tuna\",\r\n\r\n  prompt_welcomeNew: \"Welcome aboard Captain 🎉🎉🎉\",\r\n  prompt_introduceNemo:\r\n    \"My name is Nemo and I am here to replace your paper and pencil logbook (as long as your phone is charged 🔋 . . . )\",\r\n  prompt_vesselCaptainName: \"How may I address you?\",\r\n  // Answer with Custom Component: Call me Captain FIRSTNAME LASTNAME\r\n\r\n  captain: \"Captain\",\r\n  prompt_vesselName:\r\n    \"Very well Captain {previousValue}. What is the name of your ship?\",\r\n  prompt_vesselID: \"And what is {previousValue}'s IMO or MMSI?\",\r\n  imo: \"IMO\",\r\n  mmsi: \"MMSI\",\r\n  // Answer with custom component: a selector with Name, IMO, or MMSI next to a text input\r\n  prompt_fishingGearTypeCode: \"What fishing gear is on the ship?\",\r\n  // Answer with 3 subsequence styled select\r\n  // prompt_\r\n\r\n  selectGearBase: \"Select Base Gear . . .\",\r\n  selectGearSubtype: \"Select Sub-type . . .\",\r\n  selectGearOptionalType: \"Optional type . . .\",\r\n\r\n  prompt_productionMethod: \"How will you be fishing?\",\r\n  // Answer with 3 choices: Aquaculture, Inland Fishery, Marine Fishery\r\n\r\n  aquaculture: \"Aquaculture\",\r\n  inlandFishery: \"Inland Fishery\",\r\n  marineFishery: \"Marine Fishery\",\r\n\r\n  prompt_ownership: \"Are you the ship's owner?\",\r\n  prompt_vesselOwnerName: \"Who is the owner of this ship?\",\r\n\r\n  // <input-name> NO.disabled\r\n  //              YES\r\n\r\n  prompt_organization: \"Do you belong to a larger organization?\",\r\n  // <input-name> YES.disabled\r\n  //              NO\r\n\r\n  prompt_organizationName: \"What is the name of this organization/company?\",\r\n\r\n  prompt_certificationHolder: \"Is your vessel covered by the MSC?\",\r\n  // <input-name> YES.disabled\r\n  //              NO\r\n  certification: \"Certification\",\r\n\r\n  form_certificationAgencyLabel: \"Agency\",\r\n  form_certificationValueLabel: \"Cert. #\",\r\n  form_certificationIdentificationLabel: \"Cert. ID\",\r\n\r\n  form_certificationAgencyPlaceholder: \"Agency 101\",\r\n  form_certificationValuePlaceholder: \"999\",\r\n  form_certificationIdentificationPlaceholder: \"M12554-12486-FC-GFF-1Y\",\r\n  \r\n  form_firstNamePlaceholder: \"First\",\r\n  form_lastNamePlaceholder: \"Last\",\r\n  form_middleNamePlaceholder: \"M\",\r\n  \r\n  prompt_certificationStandard: \"Please provide your certification information:\",\r\n\r\n  prompt_unitOfMeasurement: \"Lastly, what's your prefered unit of measurement?\",\r\n  // 2 choices\r\n\r\n  prompt_setupProfileCompleted: \"Please review your information below:\",\r\n  prompt_profileDone: \"You are all set Captain! NOTE: You can change your information anytime! Simply open your profile via the button in the top right corner.\",\r\n\r\n  kilogram: \"Kilogram (kg)\",\r\n  pound: \"Pound (lb)\",\r\n\r\n  prompt_welcome: \"Welcome back Captain!\",\r\n  prompt_end: \"See you soon Captain!\",\r\n  prompt_anotherOne: \"What else can I add for you Captain?\",\r\n  prompt_unavailable: \"I'm sorry Captain, I'm afraid I can't do that . . .\",\r\n\r\n  prompt_initial: \"What would you like to add?\",\r\n\r\n  yes: \"✅ YES\",\r\n  no: \"❎ NO\",\r\n\r\n  days: \"Day\",\r\n  weeks: \"Week\",\r\n  months: \"Month\",\r\n\r\n  addNew: \"Add new\",\r\n\r\n  csv: \"Upload csv 📁\",\r\n  receive: \"Buy ⭐\",\r\n  catch: \"Catch 🐟\",\r\n  transport: \"Transport 🚢\",\r\n  landing: \"Landing ⚓\",\r\n  sale: \"Sell 💰\",\r\n\r\n  test: \"TEST 🙉\",\r\n  \r\n  nothing: \"I'm good 😁\",\r\n\r\n  prompt_csv: \"Which event is this?\",\r\n  csv_catchProcess: \"🐟 Catching and Processing\",\r\n  csv_aggregationDisaggregation: \"🔼 Aggregation and Disaggregation\",\r\n  csv_shipReceive: \"📨 Ship and Receive\",\r\n  csv_transshipment: \"🔄 Transshipment\",\r\n\r\n  csv_boltonEpcisTools: \"🅱 Bolton EPCIS Tools\",\r\n\r\n  prompt_nothing: \"Smooth sailing 💨\",\r\n\r\n  prompt_test: \"WELCOME TO THE TESTING FLOW . . .\",\r\n\r\n  prompt_receive: \"Let's buy that data record 🌐\",\r\n\r\n  prompt_catch: \"Let's get this done ⚡\",\r\n\r\n  prompt_catchFishType: \"What have you caught?\",\r\n  prompt_catchDuration: \"How long was the journey?\",\r\n\r\n  prompt_catchHarvestStartDate: \"When did you start this catch?\",\r\n  // Show option to pick a time range?\r\n  prompt_catchHarvestEndDate: \"When did you finish this catch?\",\r\n  // Show option to manually input date, or simply say now.\r\n  \r\n  prompt_catchArea: \"Which FAO catch area did you fish?\",\r\n\r\n  prompt_catchQuantity: \"Please scan the container QR code and provide the quantity:\",\r\n  prompt_catchQuantityListDone: \"Is that the last container?\",\r\n  \r\n  prompt_catchReview: \"Please review the catch data:\",\r\n\r\n  prompt_catchCongrat: \"🐟 Congratulations on the catch! 🐟\",\r\n  \r\n  prompt_preservation: \"How are you preserving them?\",\r\n\r\n  add_quantityPlaceholder: \"Enter quantity in \",\r\n\r\n  chilled: \"Frozen ❄\",\r\n  salted: \"Dried ♨\",\r\n  fresh: \"Fresh ✨\",\r\n\r\n  prompt_sale: \"What would you like to sell?\",\r\n  prompt_size: \"Dimension of this sell? (in cubic meter)\",\r\n  prompt_weight: \"Total weight? (in Kilo TONS)\",\r\n  prompt_value: \"How much does it cost? (in USD $)\",\r\n  prompt_saleConfirmation: \"Your order has been sent.\",\r\n\r\n  prompt_landing: \"Have you finished unpacking?\",\r\n  // prompt_cargoLoad: \"How heavy \"\r\n  prompt_landingConfirm:\r\n    \"⚓ Your time, container, and geolocation has been automatically recorded! Please review the data for accuracy:\",\r\n  inprogress: \"In-progress ⏳\",\r\n  finished: \"Finished 🏁\",\r\n\r\n  prompt_confirmData: \"Does the data seem accurate?\",\r\n\r\n  dataIsAccurate: \"Yes\",\r\n  dataIsInaccurate: \"No\",\r\n\r\n  prompt_errorReported:\r\n    \"I have reported this error to our engineers. TODO: Continue this flow to add self-input data\",\r\n\r\n  date: \"Date\",\r\n  time: \"Time\",\r\n  timeZone: \"Time Zone\",\r\n  container: \"Container\",\r\n  geoLocation: \"Location\",\r\n\r\n  // Gears:\r\n\r\n  surroundingNet: \"Surrounding net\",\r\n  withPurseLines: \"With purse lines\",\r\n  oneBoatOperated: \"One boat operated\",\r\n  twoBoatsOperated: \"Two boats operated\",\r\n  withoutPurseLines: \"Without purse lines (lampara)\",\r\n  seineNets: \"Seine nets\",\r\n  beachSeines: \"Beach seines\",\r\n  vesselSeines: \"Vessel seines\",\r\n  danishSeines: \"Danish seines\",\r\n  scottishSeines: \"Scottish seines\",\r\n  pairSeines: \"Pair seines\",\r\n  seineNetsNotSpecified: \"Seine nets (not specified)\",\r\n  trawls: \"Trawls\",\r\n  bottomTrawls: \"Bottom trawls\",\r\n  beamTrawls: \"Beam trawls\",\r\n  otterTrawls: \"Otter trawls\",\r\n  pairTrawls: \"Pair trawls\",\r\n  nephropsTrawls: \"Nephrops trawls\",\r\n  shrimpTrawls: \"Shrimp trawls\",\r\n  bottomTrawlsNotSpecified: \"Bottom trawls (not specified)\",\r\n  midwaterTrawls: \"Midwater trawls\",\r\n  midwaterTrawlsNotSpecified: \"Midwater trawls (not specified)\",\r\n  otterTwinTrawls: \"Otter twin trawls\",\r\n  otterTrawlsNotSpecified: \"Otter trawls (not specified)\",\r\n  pairTrawlsNotSpecified: \"Pair trawls (not specified)\",\r\n  otherTrawlsNotSpecified: \"Other trawls (not specified)\",\r\n  dredges: \"Dredges\",\r\n  boatDredges: \"Boat dredges\",\r\n  handDredges: \"Hand dredges\",\r\n  liftNets: \"Lift nets\",\r\n  portableLiftNets: \"Portable lift nets\",\r\n  boatOperatedLiftNets: \"Boat operated lift nets\",\r\n  shoreOperatedStationaryLiftNets: \"Shore operated stationary lift nets\",\r\n  liftNetsNotSpecified: \"Lift nets (not specified)\",\r\n  fallingGear: \"Falling gear\",\r\n  castNets: \"Cast nets\",\r\n  fallingGearNotSpecified: \"Falling gear (not specified)\",\r\n  gillnetsAndEntanglingNets: \"Gillnets and entangling nets\",\r\n  setGillnetsAnchored: \"Set gillnets (anchored)\",\r\n  driftnets: \"Driftnets\",\r\n  encirclingGillnets: \"Encircling gillnets\",\r\n  fixedGillnetsOnStakes: \"Fixed gillnets (on stakes)\",\r\n  trammelNets: \"Trammel nets\",\r\n  combinedGillnetsTrammelNets: \"Combined gillnets trammel nets\",\r\n  gillnetsAndEntanglingNetsNotSpecified:\r\n    \"Gillnets and entangling nets (not specified)\",\r\n  gillnetsNotSpecified: \"Gillnets (not specified)\",\r\n  traps: \"Traps\",\r\n  stationaryUncoveredPoundNets: \"Stationary uncovered pound nets\",\r\n  pots: \"Pots\",\r\n  fykeNets: \"Fyke nets\",\r\n  stowNets: \"Stow nets\",\r\n  barriersFencesWeirsEtc: \"Barriers, fences, weirs, etc\",\r\n  aerialTraps: \"Aerial traps\",\r\n  trapsNotSpecified: \"Traps (not specified)\",\r\n  hooksAndLines: \"Hooks and lines\",\r\n  handlinesAndPoleLinesHandOperated: \"Handlines and pole lines (hand-operated)\",\r\n  handlinesAndPoleLinesMechanized: \"Handlines and pole lines (mechanized)\",\r\n  setLonglines: \"Set longlines\",\r\n  driftingLonglines: \"Drifting longlines\",\r\n  longlinesNotSpecified: \"Longlines (not specified)\",\r\n  trollingLines: \"Trolling lines\",\r\n  hooksAndLinesNotSpecified: \"Hooks and lines (not specified)\",\r\n  grapplingAndWounding: \"Grappling and wounding\",\r\n  harpoons: \"Harpoons\",\r\n  harvestingMachines: \"Harvesting machines\",\r\n  pumps: \"Pumps\",\r\n  mechanizedDredges: \"Mechanized dredges\",\r\n  harvestingMachinesNotSpecified: \"Harvesting machines (not specified)\",\r\n  miscellaneousGear: \"Miscellaneous gear\",\r\n  recreationalFishingGear: \"Recreational fishing gear\",\r\n  gearNotKnowOrNotSpecified: \"Gear not know or (not specified)\"\r\n};\r\n","export const vn = {\r\n  input_placeholder: \"Xin giao nhập thông tin\",\r\n\r\n  atlanticCod: \"Cá tuyết Đại Tây Dương\",\r\n  blueCrab: \"Cua xanh (Đại Tây Dương)\",\r\n  dolphinFish: \"Cá heo (Mahi Mahi)\",\r\n  grouper: \"Cá mú\",\r\n  kingCrab: \"Cua Vua\",\r\n  pacificCod: \"Cod Thái Bình Dương\",\r\n  redSnapper: \"Cá hồng\",\r\n  seaCucumber: \"Dưa chuột biển\",\r\n  shark: \"Cá mập\",\r\n  swordfish: \"Cá kiếm\",\r\n  albacoreTuna: \"Cá ngừ\",\r\n  bigeyeTuna: \"Cá ngừ mắt to\",\r\n  skipjackTuna: \"Cá ngừ vằn\",\r\n  yellowfinTuna: \"Cá ngừ vây vàng\",\r\n  bluefinTuna: \"Cá ngừ vây xanh\",\r\n\r\n  prompt_welcome: \"Chào mừng trở lại thuyền trưởng!\",\r\n  prompt_end: \"Hẹn gặp lại thuyền trưởng!\",\r\n  prompt_unavailable:\r\n    \"Xin lỗi Thuyền trưởng, phần mềm chưa được cài đặt  . . .\",\r\n\r\n  prompt_initial: \"Thuyền trưởng muốn làm gì??\",\r\n\r\n  addNew: \"Thêm mới\",\r\n  catch: \"Bắt 🐟\",\r\n  transport: \"Di chuyển 🚢\",\r\n  landing: \"Hạ cánh ⚓\",\r\n  sale: \"Giao bán 💰\",\r\n  nothing: \"Gọi đùa thôi 😁\",\r\n\r\n  prompt_catch: \"Loại bắt nào?\"\r\n}","export const rs = {\r\n  input_placeholder: \"Реците капетане! Ахои!\",\r\n  prompt_welcome: \"Добродошли назад капетане!\",\r\n  prompt_end: \"Видимо се ускоро капетане!\",\r\n  prompt_unavailable:\r\n    \"Жао ми је капетане, Нажалост то не могу да урадим . . .\",\r\n  prompt_quantity: \"Колико {previousValue} сте уловили?\",\r\n  prompt_preservation: \"Како их чувате?\",\r\n  prompt_catchCongrat: \"🐟 Браво мајсторе! 🐟\",\r\n\r\n  chilled: \"Замрзнуто ❄\",\r\n  salted: \"Сушено ♨\",\r\n  fresh: \"Свеже ✨\",\r\n\r\n  atlanticCod: \"Атлански бакалар\",\r\n  blueCrab: \"Плави рак (Атлантик)\",\r\n  dolphinFish: \"Долпхинфисх (Махи Махи)\",\r\n  grouper: \"Групер\",\r\n  kingCrab: \"Краљевска краба\",\r\n  pacificCod: \"Пацифички koбакалар\",\r\n  redSnapper: \"Црвени снапер\",\r\n  seaCucumber: \"Морски краставац\",\r\n  shark: \"Ајкула\",\r\n  swordfish: \"Сабљарка\",\r\n  albacoreTuna: \"Дугоперајна туна\",\r\n  bigeyeTuna: \"Велика ока туна\",\r\n  skipjackTuna: \"Пругаста туна\",\r\n  yellowfinTuna: \"Жутоперајна туна\",\r\n  bluefinTuna: \"Плавоперајна туна\",\r\n\r\n  prompt_initial: \"Шта желите да радите?\",\r\n\r\n  addNew: \"Додај ново\",\r\n  catch: \"Улова 🐟\",\r\n  prompt_catch: \"Каква врста уловe?\",\r\n  transport: \"Транспорт 🚢\",\r\n  landing: \"Пристајање ⚓\",\r\n  sale: \"Продаја  💰\",\r\n  nothing: \"Нисшта за сад 😁\",\r\n\r\n  prompt_landing: \"Јесте ли завршили распакирање?\",\r\n  prompt_landingConfirm:\r\n    \"⚓ Ваше време, контејнер и геолокација су аутоматски прејављени! Молимо вас да прегледате податке за тачност\",\r\n  inprogress: \"У току. ⏳\",\r\n  finished: \"Завршено 🏁\",\r\n\r\n  prompt_confirmData: \"Да ли подаци изгледају тачни?\",\r\n\r\n  dataIsAccurate: \"Како да не\",\r\n  dataIsInaccurate: \"Ма какви\",\r\n\r\n  prompt_errorReported:\r\n    \"I have reported this error to our engineers. TODO: Continue this flow to add self-input data\",\r\n\r\n  date: \"Датум\",\r\n  time: \"Време\",\r\n  timeZone: \"Временска Зона\",\r\n  container: \"Контејнер\",\r\n  geoLocation: \"Локација\"\r\n}","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Select from \"react-styled-select\";\r\nimport { Refresh } from \"styled-icons/material/Refresh\";\r\nimport { Check } from \"styled-icons/material/Check\";\r\n\r\nexport const theme = {\r\n  background: \"#f5f8fb\",\r\n  // fontFamily: \"Helvetica Neue\",\r\n  headerBgColor: \"#00b0ff\",\r\n  headerFontColor: \"#fff\",\r\n  botBubbleColor: \"#00b0ff\",\r\n  botFontColor: \"#fff\",\r\n  userBubbleColor: \"#fff\",\r\n  userFontColor: \"#4a4a4a\",\r\n  dangerColor: \"red\"\r\n};\r\n\r\nconst CircleButton = styled.button`\r\n  width: 4em;\r\n  height: 4em;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  border: none;\r\n  bottom: 5em;\r\n  z-index: 1000;\r\n  background: ${prop => prop.theme.headerBgColor};\r\n  color: ${prop => prop.theme.headerFontColor};\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const StyledColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\n\r\nexport const RefreshButton = () => (\r\n  <CircleButton>\r\n    <Refresh onClick={() => window.location.reload()} />\r\n  </CircleButton>\r\n);\r\n\r\nexport const StyledInput = styled.input`\r\n  width: 80px;\r\n  display: inline-flex;\r\n  font-weight: bold;\r\n  border: none;\r\n  font-size: 1em;\r\n  border-bottom: 1px black solid;\r\n  outline: none;\r\n`;\r\n\r\nexport const LabeledInput = styled(({ className, label, ...rest }: any) => (\r\n  <div className={className}>\r\n    <label>{label}</label>\r\n    <StyledInput {...rest} />\r\n  </div>\r\n))`\r\n  display: inline-flex;\r\n  width: 100%;\r\n  label {\r\n    width: 25%;\r\n  }\r\n  input {\r\n    width: 75%;\r\n    :disabled {\r\n      cursor: not-allowed;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Divider = styled.hr`\r\n  width: 80%;\r\n`\r\n\r\nexport const ReviewInput = styled(LabeledInput)`\r\n  width: 100%;\r\n  margin-bottom: 0.5em;\r\n\r\n  label {\r\n    color: black;\r\n    width: 50%;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n  }\r\n  input {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\ninterface BackgroundButtonProps {\r\n  readonly background?: string;\r\n};\r\n\r\nexport const StyledButton = styled.button<BackgroundButtonProps>`\r\n  cursor: pointer;\r\n  border: none;\r\n  background: ${p => p.background || p.theme.botBubbleColor};\r\n  color: ${p => p.theme.botFontColor};\r\n  height: 30px;\r\n\r\n  :hover {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  :disabled {\r\n    background: ${p => p.theme.userFontColor};\r\n  }\r\n\r\n  :disabled:hover {\r\n    cursor: not-allowed;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const FillButton = styled(StyledButton)`\r\n  margin-top: 1em;\r\n  width: 100%;\r\n`\r\n\r\nexport const StyledSubmitButton = styled((props: any) => (\r\n  <StyledButton {...props}>\r\n    <Check />\r\n  </StyledButton>\r\n))`\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  svg {\r\n    fill: ${p => p.theme.botFontColor};\r\n  }\r\n`;\r\n\r\nexport const StyledColumnForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledRowForm = styled(StyledColumnForm)`\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const RowDiv = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledSelect = styled(Select)`\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nexport const StyledLabel = styled.label`\r\n  font-weight: 700;\r\n`\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Select from \"react-styled-select\";\r\nimport { fishOptionList, useCatchCacheState } from \"../_data\";\r\nimport { StyledSubmitButton } from \"../_theme\";\r\n\r\nconst StyledSelect = styled(Select)`\r\n  width: 85%;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  align-items: center;\r\n`;\r\n\r\n\r\nexport const CatchFishTypeInput = ({ triggerNextStep } : any) => {\r\n  const options = fishOptionList;\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [value, setValue] = useState(options[0].value);\r\n  const [, setCatchCache] = useCatchCacheState({})\r\n  \r\n  return (\r\n    <StyledForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        // console.log(steps);\r\n        // console.log(formState.values);\r\n\r\n        setDisabled(true);\r\n\r\n        setCatchCache({\r\n          fishKey: value\r\n        })\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n    <StyledSelect\r\n      value={value}\r\n      disabled={disabled}\r\n      options={options}\r\n      onChange={setValue}\r\n      classes={{\r\n        selectControl: \"select-control\",\r\n        selectInput: \"select-input\"\r\n      }}\r\n    />\r\n\r\n    <StyledSubmitButton disabled={disabled} />\r\n  </StyledForm>\r\n  );\r\n};\r\n","import { strings } from \"../i18n\";\r\n\r\nexport const createSelectOptionList = (list: Array<string>) =>\r\n  list.map(value => ({\r\n    value,\r\n    label: `${strings[value]}`\r\n  }));\r\n\r\nexport const numberValidator = (value: number) => {\r\n  if (isNaN(value) || value <= 0) {\r\n    return \"It should be a number greater than 0!\";\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const appendTrigger = (p: any, i: number, order: Array<string>) => {\r\n  const trigger = p.trigger || order[i + 1];\r\n\r\n  if (!p.options) {\r\n    p.trigger = trigger;\r\n    if (p.hideInput && !p.waitAction && !p.message) {\r\n      p.message = strings[p.id];\r\n    }\r\n  } else {\r\n    p.options = p.options.map((o: any, j: number) => {\r\n      if (p.triggers) {\r\n        o.trigger = p.triggers[j]\r\n      } else {\r\n        o.trigger = trigger;\r\n      }\r\n      return o;\r\n    });\r\n  }\r\n  delete p.triggers;\r\n  return p;\r\n};\r\n\r\nexport const createOptionLabel = (value: string) => ({\r\n  value,\r\n  label: strings[value] || value\r\n});\r\n\r\nexport const createPromptArray = (order: Array<string>, structure: any) =>\r\n  order.reduce((acc, id: string, i, src) => {\r\n    if (i < src.length - 1) {\r\n      acc.push(appendTrigger(\r\n        {\r\n          id,\r\n          ...(structure[id] || { hideInput: true })\r\n        },\r\n        i,\r\n        order\r\n      ) as never);\r\n    }\r\n    return acc;\r\n  }, []);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { StyledInput, StyledSubmitButton, StyledColumnForm, RowDiv, StyledButton } from \"../_theme\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { useProfileState, useCatchCacheState, uomMap } from \"../_data\";\r\nimport { strings } from \"../i18n\";\r\n\r\nimport {Qrcode} from 'styled-icons/icomoon/Qrcode'\r\n\r\nimport uuid from 'uuid/v4'\r\n\r\ninterface CatchQuantityFormFields {\r\n  amount: number;\r\n}\r\n\r\nconst AmountInput = styled(StyledInput)`\r\n  width: 50%;\r\n  text-align: right;\r\n`;\r\n\r\nconst QRScanButton = styled(StyledButton)`\r\n  width: 30%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`\r\nconst QRCodeDiv = styled.div`\r\n  width: 60%;\r\n`\r\n\r\nconst QRCodeContainer = styled(RowDiv)`\r\n  height: 3em;\r\n`\r\n\r\nexport const CatchQuantityInput = ({ triggerNextStep, steps }: any) => {\r\n  const [profile] = useProfileState({\r\n    unitOfMeasurement: \"kilogram\"\r\n  });\r\n\r\n  const [catchCache, setCatchCache] = useCatchCacheState({\r\n    quantityList: []\r\n  });\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const [formState, { number }] = useFormState<CatchQuantityFormFields>();\r\n\r\n  const [qrCode, setQRCode] = useState(\"\")\r\n\r\n  return (\r\n    <StyledColumnForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        // console.log(steps);\r\n        // console.log(formState.values);\r\n\r\n        setDisabled(true);\r\n\r\n        const quantityList = catchCache.quantityList || []\r\n\r\n        quantityList.push({\r\n          epcClass: qrCode,\r\n          quantity: formState.values.amount,\r\n          uom: uomMap[profile.unitOfMeasurement]\r\n        })\r\n\r\n        setCatchCache({\r\n            ...catchCache,\r\n            quantityList\r\n        });\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n      <QRCodeContainer>\r\n        <QRCodeDiv>\r\n          {qrCode}\r\n        </QRCodeDiv>\r\n        <QRScanButton onClick={(e)=>{\r\n          e.preventDefault()\r\n\r\n          const code = uuid()\r\n\r\n          setQRCode(code)\r\n        }}>\r\n          Scan QR {\" \"}\r\n          <Qrcode size=\"15\"/>\r\n        </QRScanButton>\r\n      </QRCodeContainer>\r\n      \r\n      <RowDiv>\r\n        <AmountInput required disabled={disabled} {...number('amount')}/>\r\n        <div>\r\n          {strings[profile.unitOfMeasurement]}\r\n        </div>\r\n        <StyledSubmitButton disabled={disabled || !qrCode} />\r\n      </RowDiv>\r\n    </StyledColumnForm>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { durationList, useCatchCacheState } from \"../_data\";\r\nimport {\r\n  StyledInput,\r\n  StyledSubmitButton,\r\n  StyledSelect,\r\n  StyledRowForm\r\n} from \"../_theme\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { createSelectOptionList } from \"../core/utils\";\r\nimport { DateTime } from \"luxon\";\r\n\r\ninterface CatchDurationFormFields {\r\n  durationValue: number;\r\n  durationType: string;\r\n}\r\n\r\nconst DurationTypeSelect = styled(StyledSelect)`\r\n  width: 30%;\r\n`;\r\n\r\nconst DurationValueInput = styled(StyledInput)`\r\n  width: 50%;\r\n  text-align: right;\r\n`;\r\n\r\nexport const CatchDurationInput = ({ triggerNextStep }: any) => {\r\n  const options = createSelectOptionList(durationList);\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const [formState, { number, raw }] = useFormState<\r\n    CatchDurationFormFields\r\n  >({\r\n    durationType: durationList[0]\r\n  });\r\n\r\n  const [catchCache, setCatchCache] = useCatchCacheState({});\r\n\r\n  return (\r\n    <StyledRowForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n\r\n        setDisabled(true);\r\n\r\n        const endDate = DateTime.local();\r\n        const startDate = endDate.minus({\r\n          [formState.values.durationType]: formState.values.durationValue\r\n        });\r\n\r\n        const harvestEndDate = endDate.toISODate();\r\n        const harvestStartDate = startDate.toISODate();\r\n\r\n        setCatchCache({\r\n          ...catchCache,\r\n          harvestStartDate,\r\n          harvestEndDate\r\n        });\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n      <DurationValueInput required disabled={disabled} {...number(\"durationValue\")} />\r\n\r\n      <DurationTypeSelect\r\n        {...raw(\"durationType\")}     \r\n        disabled={disabled}\r\n        options={options}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n\r\n      <StyledSubmitButton disabled={disabled} />\r\n    </StyledRowForm>\r\n  );\r\n};\r\n","const freeEpcisUrl = 'http://www.freepcis.com/server/nemo/capture'\r\n\r\nexport const freepcisVault = {\r\n  capture: {\r\n    uri: 'https://cors-anywhere.herokuapp.com/'+ freeEpcisUrl,\r\n    auth: {\r\n      username: 'nemo',\r\n      password: 'test001'\r\n    }\r\n  }\r\n}\r\n\r\nexport const sendCatchEvent = async (body : any) => {\r\n\r\n  const headers = new Headers()\r\n\r\n  const {uri, auth} = freepcisVault.capture;\r\n  \r\n  headers.set('Authorization', 'Basic ' + btoa(auth.username + \":\" + auth.password));\r\n  headers.set('Content-Type', 'text/xml');\r\n  \r\n  const response = await fetch(uri,{\r\n    method: 'POST',\r\n    headers,\r\n    body\r\n  })\r\n\r\n  console.log(response)\r\n};\r\n","import * as dapp from './dapp'\r\nimport * as freepcis from './freepcis'\r\n\r\nexport default {\r\n  dapp,\r\n  freepcis\r\n}","import { DateTime } from \"luxon\";\r\nimport { upper } from \"case\";\r\nimport { productionMethodCodeMap } from \"../_data\";\r\n\r\nconst getCoordinate = () =>\r\n  new Promise(resolve => {\r\n    const fallback = {\r\n      latitude: 0.886256,\r\n      longitude: 148.445297\r\n    };\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        position => {\r\n          resolve(position.coords);\r\n        },\r\n        () => resolve(fallback)\r\n      );\r\n    } else {\r\n      resolve(fallback);\r\n    }\r\n  });\r\n\r\nconst generateQuantityElementList = (fishCode = \"\", quantityList = []) =>\r\n  quantityList\r\n    .map(\r\n      ({ epcClass, quantity, uom }: any) => `\r\n    <quantityElement>\r\n      <epcClass>http://epcis.nemo.com/user/vocab/obj/${fishCode}.${epcClass}</epcClass>\r\n      <quantity>${quantity}</quantity>\r\n      <uom>${uom}</uom>\r\n    </quantityElement>`\r\n    )\r\n    .join(\"\\n\");\r\n\r\nconst generateNonEmptyElement = (element: string, value: string) =>\r\n  value ? `<${element}>${value}</${element}>` : \"\";\r\n\r\nexport const createCatchPayload = async ({\r\n  catchArea,\r\n  fishCode,\r\n  harvestEndDate,\r\n  harvestStartDate,\r\n  quantityList,\r\n\r\n  firstName,\r\n  lastName,\r\n\r\n  fishingGearType,\r\n  organizationName,\r\n  productionMethod,\r\n\r\n  language,\r\n\r\n  vesselIdType,\r\n  vesselIdString,\r\n  vesselName,\r\n  vesselOwnerName,\r\n\r\n  vesselCertificationAgency,\r\n  vesselCertificationIdentification,\r\n  vesselCertificationStandard,\r\n  vesselCertificationValue\r\n}: any) => {\r\n  const dt = DateTime.local();\r\n\r\n  const creationDate = dt.toISO();\r\n  const eventTimeZoneOffset = dt.toFormat(\"ZZ\");\r\n\r\n  const { latitude, longitude } = (await getCoordinate()) as any;\r\n\r\n  const quantityElementList = generateQuantityElementList(\r\n    fishCode,\r\n    quantityList\r\n  );\r\n\r\n  const vesselCaptainName = upper(`${lastName}_${firstName}`, \",\");\r\n\r\n  const productionMethodCode = productionMethodCodeMap[productionMethod];\r\n\r\n  const vesselID = upper(vesselIdType) + \".\" + vesselIdString;\r\n\r\n  const vesselFlagState = upper(language);\r\n\r\n  return `\r\n  <epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:1\" \r\n    schemaVersion=\"1.1\" \r\n    creationDate=\"2001-12-17T09:30:47Z\" \r\n    xmlns:eecc=\"http://ns.eecc.info/epcis\"\r\n    xmlns:sbdh=\"http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n    xsi:schemaLocation=\"urn:epcglobal:epcis:xsd:1 http://www.gs1si.org/BMS/epcis/1_2/EPCglobal-epcis-1_2.xsd\" \r\n    xmlns:cbvmda=\"urn:epcglobal:cbv:mda\">\r\n      <EPCISBody>\r\n        <EventList>\r\n            <ObjectEvent> <!-- V1 CREATE THE CATCH EVENT ID WITH GDST KDEs-->\r\n                <eventTime>${creationDate}</eventTime>\r\n                <eventTimeZoneOffset>${eventTimeZoneOffset}</eventTimeZoneOffset>\r\n                <epcList>\r\n                </epcList>\r\n                <action>ADD</action>\r\n                <bizStep>urn:epcglobal:cbv:bizstep:commissioning</bizStep>\r\n                <disposition>urn:epcglobal:cbv:disp:active</disposition>\r\n                <readPoint>\r\n                    <id>geo:${latitude},${longitude}</id> <!-- Point where catch was recorded -->\r\n                </readPoint>\r\n                <extension>\r\n                    <quantityList>\r\n                      ${quantityElementList}\r\n                    </quantityList>\r\n                    <ilmd>\r\n                        <cbvmda:vesselCatchInformationList> <!--  Attach GDST KDEs to unique Catch Event -->\r\n                            <vesselCatchInformation>\r\n                                <vesselID>${vesselID}</vesselID> <!-- #2 & 3 GDST KDE Vessel ID -->\r\n                                <vesselName>${vesselName}</vesselName> <!-- #1 GDST KDE Vessel Name  -->\r\n\r\n                                <!-- A1 GDST KDE Vessel Ownership -->\r\n                                ${generateNonEmptyElement('vesselOwnerName',vesselOwnerName)}\r\n                                ${generateNonEmptyElement('organizationName',organizationName)}\r\n\r\n                                <vesselCaptainName>${vesselCaptainName}</vesselCaptainName>\r\n                                <vesselFlagState>${vesselFlagState}</vesselFlagState> <!-- #4 Vessel Flag State -->\r\n                                <catchArea>FAO.${catchArea}</catchArea> <!-- #7 GDST KDE Catch Area -->\r\n                                <fishingGearTypeCode>${fishingGearType}</fishingGearTypeCode> <!-- #5 Gear Type -->\r\n                            </vesselCatchInformation>\r\n                        </cbvmda:vesselCatchInformationList>\r\n                        <cbvmda:productionMethodCode>${productionMethodCode}</cbvmda:productionMethodCode> <!-- #19 GDST KDE Production Method -->\r\n                        <cbvmda:harvestStartDate>${harvestStartDate}</cbvmda:harvestStartDate> <!-- #8 & 9 GDST KDE Date of Capture -->\r\n                        <cbvmda:harvestEndDate>${harvestEndDate}</cbvmda:harvestEndDate> <!-- #8 & 9 GDST KDE Date of Capture -->\r\n                        ${\r\n                          vesselCertificationStandard ? \r\n                          `\r\n                            <cbvmda:certificationList> <!-- #6 GDST KDE Fishing Authorization / Organization License, Certs (Aqua) -->\r\n                              <certification>\r\n                                  <certificationStandard>${vesselCertificationStandard}</certificationStandard>\r\n                                  <certificationAgency>${vesselCertificationAgency}</certificationAgency>\r\n                                  <certificationValue>${vesselCertificationValue}</certificationValue>\r\n                                  <certificationIdentification>${vesselCertificationIdentification}</certificationIdentification>\r\n                              </certification>\r\n                          </cbvmda:certificationList>\r\n                          `: ''\r\n                        }\r\n                    </ilmd>\r\n                </extension>\r\n            </ObjectEvent>    \r\n        </EventList>\r\n    </EPCISBody>\r\n  </epcis:EPCISDocument>\r\n`;\r\n};\r\n","import { useState, useEffect } from 'react'\r\nimport api from \"../api\";\r\n\r\nconst debug = require(\"debug\")(\"use-ipfs\");\r\n\r\nconst { Ipfs } = window as any\r\n\r\nconst w = window as any\r\n\r\nconst ipfs = new Ipfs({\r\n  repo: api.dapp.dappVault.ipfsRepo,\r\n  silent: true\r\n})\r\n\r\nipfs.once('ready', () => {\r\n  w.ipfsReady = true\r\n})\r\n\r\nconst initIpfs = (ipfs: any) => new Promise((resolve, reject) => {\r\n  if (w.ipfsReady) {\r\n    resolve()\r\n  }\r\n\r\n  ipfs.once('ready', () => {\r\n    w.ipfsReady = true\r\n    resolve()\r\n  })\r\n\r\n  ipfs.once('error', (err: any) => reject(err))\r\n})\r\n\r\nexport function useIpfs(opts?: any) {\r\n\r\n  const [isIpfsReady, setIpfsReady] = useState(false)\r\n  const [ipfsInitError, setIpfsInitError] = useState(null as any)\r\n\r\n  useEffect(() => {\r\n    startIpfs()\r\n    return function cleanup() {\r\n      if (ipfs && ipfs.stop) {\r\n        debug('Stopping IPFS')\r\n        ipfs.stop()\r\n        setIpfsReady(false)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  async function startIpfs() {\r\n    try {\r\n      await initIpfs(ipfs)\r\n      setIpfsReady(true)\r\n    } catch (error) {\r\n      console.error('IPFS init error:', error)\r\n      setIpfsInitError(error)\r\n      setIpfsReady(false)\r\n    }\r\n  }\r\n\r\n  debug(ipfs)\r\n\r\n  return { ipfs, isIpfsReady, ipfsInitError }\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { animated } from \"react-spring\";\r\n\r\nimport {\r\n  useCatchCacheState,\r\n  fao3AMap,\r\n  useProfileState,\r\n  useLanguageState\r\n} from \"../_data\";\r\n\r\nimport {\r\n  LabeledInput,\r\n  StyledColumnForm,\r\n  ReviewInput,\r\n  Divider,\r\n  FillButton,\r\n  StyledLabel\r\n} from \"../_theme\";\r\nimport api from \"../api\";\r\nimport { createCatchPayload } from \"../api/catch\";\r\nimport { useIpfs } from \"../hooks/use-ipfs\";\r\n\r\n// const debug = require(\"debug\")(\"DappSendInput\");\r\n\r\nconst Container = styled(animated.div)`\r\n  width: 100%;\r\n  word-break: break-word;\r\n`;\r\n\r\nconst QuantityItem = styled(ReviewInput)`\r\n  label {\r\n  }\r\n`;\r\n\r\nexport const CatchReview = ({ triggerNextStep, steps }: any) => {\r\n  const { add_catchArea } = steps;\r\n\r\n  const { apiUrl } = api.dapp.dappVault;\r\n\r\n  const { ipfs, isIpfsReady, ipfsInitError } = useIpfs();\r\n\r\n  const [catchCache, setCatchCache] = useCatchCacheState();\r\n\r\n  const [profile] = useProfileState();\r\n\r\n  const [language] = useLanguageState();\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const [sendMethod, setSendMethod] = useState(\"\");\r\n\r\n  const [error] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [, setOriginId] = useState(\"\");\r\n  const [ipfsHash, setIpfsHash] = useState(\"\");\r\n\r\n  const { quantityList, ...catchCacheRest } = catchCache;\r\n\r\n  const [formState, { text }] = useFormState({\r\n    ...catchCacheRest,\r\n    catchArea: add_catchArea.value\r\n  });\r\n\r\n  const [dappFormState, dappInput] = useFormState({\r\n    apiUrl,\r\n    price: \"0.0200 EOS\"\r\n  });\r\n  // console.log(formState.values)\r\n\r\n  // console.log(Object.keys(formState.values))\r\n\r\n  if (!quantityList) {\r\n    return <div>Cache Cleaned . . .</div>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <StyledColumnForm\r\n        onSubmit={async e => {\r\n          e.preventDefault();\r\n          setDisabled(true);\r\n\r\n          const fishCode = fao3AMap[catchCache.fishKey];\r\n\r\n          const epcisDoc = await createCatchPayload({\r\n            ...profile,\r\n            ...catchCache,\r\n            catchArea: add_catchArea.value,\r\n            language,\r\n            fishCode\r\n          });\r\n\r\n          const sendToEOS = async () => {\r\n            // Take the epcisDoc and send it to IPFS, grab the resulting hash\r\n\r\n            // Take the hash and send it to the EOS table\r\n\r\n            // Get the blockhash and blockid, combine and Output the hash to the user\r\n            const catchResult = await api.dapp.sendCatchEvent(\r\n              dappFormState.values,\r\n              ipfs,\r\n              epcisDoc\r\n            );\r\n\r\n            setIpfsHash(catchResult.ipfsHash);\r\n            setOriginId(catchResult.originId);\r\n\r\n            setSuccess(\"sent\");\r\n          };\r\n\r\n          const sendPromise = []\r\n\r\n          switch (sendMethod) {\r\n            case \"both\":\r\n              sendPromise.push(sendToEOS())\r\n              sendPromise.push(api.freepcis.sendCatchEvent(epcisDoc))\r\n              break;\r\n            case \"ipfs-eos\":\r\n              sendPromise.push(sendToEOS())\r\n              break;\r\n            default:\r\n            case \"freepcis\":\r\n              sendPromise.push(api.freepcis.sendCatchEvent(epcisDoc))\r\n              break;\r\n          }\r\n\r\n          await Promise.all(sendPromise)\r\n\r\n          setCatchCache({\r\n            ...catchCache,\r\n            sent: true\r\n          });\r\n\r\n          triggerNextStep();\r\n        }}\r\n      >\r\n        {Object.keys(formState.values).map(k => (\r\n          <ReviewInput\r\n            key={k}\r\n            disabled={disabled}\r\n            label={k}\r\n            {...text(k as any)}\r\n          />\r\n        ))}\r\n\r\n        <Divider />\r\n\r\n        {quantityList.map(({ epcClass, quantity, uom }: any, i: number) => (\r\n          <QuantityItem\r\n            readOnly\r\n            key={epcClass}\r\n            disabled={disabled}\r\n            label={epcClass}\r\n            value={`${quantity} ${uom}`}\r\n          />\r\n        ))}\r\n\r\n        <Divider />\r\n\r\n        <FillButton\r\n          disabled={disabled || catchCache.sent}\r\n          onClick={() => setSendMethod(\"freepcis\")}\r\n        >\r\n          Send to FreEPCIS\r\n        </FillButton>\r\n\r\n        <br />\r\n\r\n        <LabeledInput\r\n          label={\"API\"}\r\n          disabled={disabled}\r\n          required\r\n          {...dappInput.text(\"apiUrl\")}\r\n          placeholder={\"find an eos api . . .\"}\r\n        />\r\n\r\n        <LabeledInput\r\n          label={\"PRICE\"}\r\n          disabled={disabled}\r\n          required\r\n          {...dappInput.text(\"price\")}\r\n          placeholder={\"selling price . . .\"}\r\n        />\r\n\r\n        {isIpfsReady && (\r\n          <>\r\n            <FillButton\r\n              background={'sandybrown'}\r\n              disabled={disabled || catchCache.sent}\r\n              onClick={() => setSendMethod(\"ipfs-eos\")}\r\n            >\r\n              Send to EOS\r\n            </FillButton>\r\n            <FillButton\r\n              background={'darkorchid'}\r\n              disabled={disabled || catchCache.sent}\r\n              onClick={() => setSendMethod(\"both\")}\r\n            >\r\n              Send to FreEPCIS and EOS\r\n            </FillButton>\r\n          </>\r\n        )}\r\n      </StyledColumnForm>\r\n\r\n      <div style={{ color: \"red\" }}>\r\n        {error.length > 0 && <span>ERROR: {error}</span>}\r\n        {ipfsInitError && (\r\n          <span>ERROR: {ipfsInitError.message || ipfsInitError}</span>\r\n        )}\r\n      </div>\r\n      {success.length > 0 && (\r\n        <div>\r\n          Catch event posted. Will take ~3 minutes for it to register -\r\n          <a\r\n            href=\"https://jungle.eosx.io/account/nemoeosmark1?mode=contract&sub=tables\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            https://jungle.eosx.io/account/nemoeosmark1?mode=contract&sub=tables\r\n          </a>\r\n          <Divider />\r\n          <StyledLabel>\r\n            {\" \"}\r\n            You can check the epcis data on IPFS here -{\" \"}\r\n          </StyledLabel>\r\n          <a href={`https://ipfs.io/ipfs/${ipfsHash}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {`https://ipfs.io/ipfs/${ipfsHash}`}\r\n          </a>\r\n          {/* \r\n            <StyledLabel> Give this Claim Code to the producer: </StyledLabel>\r\n            <br />\r\n            {originId}\r\n            <FillButton onClick={() => copy(originId)}>\r\n              Click to Copy Claim Code\r\n            </FillButton> \r\n          */}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { CatchFishTypeInput } from \"../components/CatchFishTypeInput\";\r\nimport { createOptionLabel, createPromptArray } from \"../core/utils\";\r\nimport { FishDataConfirm } from \"../components/FishDataConfirm\";\r\n\r\nimport { CatchQuantityInput } from \"../components/CatchQuantityInput\";\r\nimport { CatchDurationInput } from \"../components/CatchDurationInput\";\r\nimport { CatchReview } from \"../components/CatchReview\";\r\n\r\nconst promptOrder = [\r\n  \"prompt_catch\",\r\n\r\n  \"prompt_catchFishType\",\r\n  \"add_catchFishType\",\r\n\r\n  \"prompt_catchArea\",\r\n  \"add_catchArea\",\r\n\r\n  \"prompt_catchDuration\",\r\n  \"add_catchDuration\",\r\n\r\n  \"prompt_catchQuantity\",\r\n  \"add_catchQuantity\",\r\n\r\n  \"prompt_catchQuantityListDone\",\r\n  \"add_catchQuantityDone\",\r\n\r\n  // \"prompt_preservation\",\r\n  // \"add_preservation\",\r\n  \"prompt_catchReview\",\r\n  \"add_catchReview\",\r\n\r\n  \"prompt_catchCongrat\",\r\n\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nconst promptStructure = {\r\n  add_catchFishType: {\r\n    component: <CatchFishTypeInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_catchDuration: {\r\n    component: <CatchDurationInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_catchQuantity: {\r\n    component: <CatchQuantityInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_catchArea: {\r\n    hideInput: true,\r\n    options: [\"61\", \"71\", \"67\", \"77\"].map(createOptionLabel)\r\n  },\r\n\r\n  add_catchQuantityDone: {\r\n    hideInput: true,\r\n    options: [\"yes\", \"no\"].map(createOptionLabel),\r\n    triggers: [\"prompt_catchReview\", \"add_catchQuantity\"]\r\n  },\r\n\r\n  add_catchReview: {\r\n    component: <CatchReview />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_preservation: {\r\n    hideInput: true,\r\n    options: [\"chilled\", \"salted\", \"fresh\"].map(createOptionLabel)\r\n  },\r\n\r\n  prompt_catchCongrat: {\r\n    component: <FishDataConfirm />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  }\r\n} as any;\r\n\r\nexport const createCatchPrompt = () =>\r\n  createPromptArray(promptOrder, promptStructure);\r\n","import React, { useState } from \"react\";\r\nimport Reward from \"react-rewards\";\r\n\r\nimport { strings } from \"../i18n\";\r\n\r\nexport const FishDataConfirm = ({ triggerNextStep }: any) => {\r\n  const [done, setDone] = useState(false);\r\n\r\n  return (\r\n    <Reward\r\n      ref={(ref: any) => {\r\n        if (ref && !done) {\r\n          ref.rewardMe();\r\n          setDone(true);\r\n\r\n          triggerNextStep();\r\n        }\r\n      }}\r\n      type=\"emoji\"\r\n      config={{\r\n        emoji: [\"🐟\", \"🦐\", \"🐙\", \"🦀\", \"🐳\", \"🐋\", \"🐬\", \"🦑\", \"🐡\", \"🦈\"]\r\n      }}\r\n    >\r\n      <div>{strings.prompt_catchCongrat}</div>\r\n    </Reward>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { strings } from \"../i18n\";\r\n\r\nexport const LandingDataTable = () => (\r\n  <div>\r\n    {strings.prompt_landingConfirm}\r\n    <hr />\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <td><span role=\"img\" aria-label=\"date\">📅</span></td>\r\n          <td>{strings.date}</td>\r\n          <td>2016-12-14</td>\r\n        </tr>\r\n        <tr>\r\n          <td><span role=\"img\" aria-label=\"time\">⌚</span></td>\r\n          <td>{strings.time}</td>\r\n          <td>11:33:00.125+08:00</td>\r\n        </tr>\r\n        <tr>\r\n          <td><span role=\"img\" aria-label=\"container\">🚢</span></td>\r\n          <td> {strings.container}</td>\r\n          <td>f5c5ab8f-8bcf-446a-8dea-4cb625316ffd</td>\r\n        </tr>\r\n        <tr>\r\n          <td><span role=\"img\" aria-label=\"location\">📍</span></td>\r\n          <td>{strings.geoLocation}</td>\r\n          <td>geo:22.58425,120.31815</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n","import React from 'react'\r\nimport { createOptionLabel, appendTrigger } from \"../core/utils\";\r\nimport { LandingDataTable } from \"../components/LandingDataCard\";\r\nimport { strings } from \"../i18n\";\r\n\r\nexport const landingPromptOrder = [\r\n  \"prompt_landing\",\r\n  \"add_landingDisposition\",\r\n  \"prompt_landingConfirm\",\r\n  \"prompt_confirmData\",\r\n  \"add_confirmData\",\r\n  \"prompt_checkConfirm\",\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nexport const createLandingPrompt = () =>\r\n  [\r\n    {\r\n      id: `prompt_landing`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_landingDisposition`,\r\n      options: [\"inprogress\", \"finished\"].map(createOptionLabel)\r\n    },\r\n    // { // TODO: Stretch, ask cargo load\r\n    //   id: `prompt_cargoLoad`,\r\n    //   hideInput: true,\r\n    //   message: ({ previousValue }: any) =>\r\n    //     previousValue === \"finished\"\r\n    //       ? strings.prompt_cargoLoad\r\n    //       : \"✔\"\r\n    // },\r\n    {\r\n      id: `prompt_landingConfirm`,\r\n      component: <LandingDataTable />\r\n    },\r\n    {\r\n      id: `prompt_confirmData`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_confirmData`,\r\n      hideInput: true,\r\n      options: [\"dataIsAccurate\", \"dataIsInaccurate\"].map(createOptionLabel)\r\n    },\r\n    {\r\n      id: `prompt_checkConfirm`,\r\n      hideInput: true,\r\n      message: ({ previousValue }: any) =>\r\n        previousValue === \"dataIsInaccurate\"\r\n          ? strings.prompt_errorReported\r\n          : \"✔\"\r\n    }\r\n  ].map((p: any, i) => appendTrigger(p, i, landingPromptOrder));\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Select from \"react-styled-select\";\r\nimport { localStorageKey } from \"../_data\";\r\n\r\nconst StyledSelect = styled(Select)`\r\n  width: 100%;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nexport const SaleFishSelectInput = ({ triggerNextStep } : any) => {\r\n\r\n  const fishStore = JSON.parse(localStorage.getItem(\"FISH_STORE\") as any) || { catches: [] };\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [fish, setFish] = useState(fishStore.catches[0] ? fishStore.catches[0].value : null);\r\n\r\n  if(!fishStore.catches[0]) {\r\n    setTimeout(()=>{\r\n      localStorage.removeItem(localStorageKey.chatCache);\r\n      window.location.reload();\r\n    }, 3000)\r\n    return (\r\n      <div>\r\n        <b>\r\n          ⚠ No Fish Available ⚠ \r\n        </b>\r\n        <br/>\r\n        <i>You need to report your catch first</i>\r\n        <br/>\r\n        Auto Refresh in 3... 2... 1...\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <StyledSelect\r\n      value={fish}\r\n      disabled={disabled}\r\n      options={fishStore.catches}\r\n      classes={{\r\n        selectControl: \"select-control\",\r\n        selectInput: \"select-input\"\r\n      }}\r\n      onChange={(fish: string) => {\r\n        setFish(fish);\r\n        setDisabled(true);\r\n        triggerNextStep({\r\n          value: fish\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { SaleFishSelectInput } from \"../components/SaleFishSelectInput\";\r\nimport { numberValidator, appendTrigger } from \"../core/utils\";\r\n\r\nconst salePromptOrder = [\r\n  \"prompt_sale\",\r\n  \"add_species\",\r\n  \"prompt_size\",\r\n\r\n  \"add_size\",\r\n  \"prompt_weight\",\r\n  \r\n  \"add_weight\",\r\n  \"prompt_value\",\r\n\r\n  \"add_value\",\r\n  \"prompt_saleConfirmation\",\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nexport const createSalePrompt = () =>\r\n  [\r\n    {\r\n      id: `prompt_sale`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_species`,\r\n      hideInput: true,\r\n      waitAction: true,\r\n      component: <SaleFishSelectInput />\r\n    },\r\n    {\r\n      id: `prompt_size`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_size`,\r\n      user: true,\r\n      validator: numberValidator\r\n    },\r\n    {\r\n      id: `prompt_weight`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_weight`,\r\n      user: true\r\n    },\r\n    {\r\n      id: `prompt_value`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_value`,\r\n      user: true\r\n    },\r\n    {\r\n      id: `prompt_saleConfirmation`,\r\n      hideInput: true,\r\n      // component: <SaleDetail />\r\n    }\r\n  ].map((p: any, i) => appendTrigger(p, i, salePromptOrder));\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { animated } from \"react-spring\";\r\n\r\nimport { upper } from 'case'\r\n\r\nimport { useCaptainProfileState } from \"../_data\";\r\nimport { strings } from \"../i18n\";\r\n\r\nimport { StyledInput, StyledSubmitButton } from \"../_theme\";\r\n\r\ninterface CaptainNameFormFields {\r\n  firstName: string;\r\n  middleName: string;\r\n  lastName: string;\r\n}\r\n\r\nconst Container = styled(animated.div)`\r\n  width: 100%;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nconst StyledMiddleNameInput = styled(StyledInput)`\r\n  width: 20px;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  margin-top: 0.5em;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst StyledCaptainLabel = styled.span`\r\n  color: ${p => p.theme.botBubbleColor};\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const VesselCaptainNameInput = ({ triggerNextStep, steps }: any) => {\r\n  const [profile, setProfile] = useCaptainProfileState({})\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n  \r\n  const [formState, { text }] = useFormState<CaptainNameFormFields>();\r\n\r\n  return (\r\n    <Container>\r\n      <StyledCaptainLabel>{strings.captain}</StyledCaptainLabel>\r\n\r\n      <StyledForm\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          const { lastName, firstName, middleName } = formState.values;\r\n\r\n          setDisabled(true);\r\n\r\n          setProfile({\r\n            ...profile,\r\n            captain: {\r\n              firstName,\r\n              middleName,\r\n              lastName,\r\n              formName: upper(`${lastName}_${firstName}`,',')\r\n            },\r\n          })\r\n\r\n          triggerNextStep({\r\n            value: lastName,\r\n          })\r\n        }}\r\n      >\r\n        <StyledInput\r\n          disabled={disabled}\r\n          required\r\n          placeholder={strings.form_lastNamePlaceholder}\r\n          {...text(\"lastName\")}\r\n        />\r\n        {\", \"}\r\n        <StyledInput\r\n          disabled={disabled}\r\n          required\r\n          placeholder={strings.form_firstNamePlaceholder}\r\n          {...text(\"firstName\")}\r\n        />\r\n        <StyledMiddleNameInput\r\n          disabled={disabled}\r\n          placeholder={strings.form_middleNamePlaceholder}\r\n          {...text(\"middleName\")}\r\n          maxLength={1}\r\n        />\r\n        {\".\"}\r\n\r\n        <StyledSubmitButton disabled={disabled} />\r\n      </StyledForm>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { shipIDTypeOptionList, useCaptainProfileState } from \"../_data\";\r\nimport { StyledInput, StyledSubmitButton, StyledSelect, StyledRowForm } from \"../_theme\";\r\nimport { useFormState } from \"react-use-form-state\";\r\n\r\ninterface VesselIDFormFields {\r\n  idType: \"imo\" | \"mmsi\";\r\n  idString: string;\r\n}\r\n\r\nconst IDTypeSelect = styled(StyledSelect)`\r\n  width: 4em;\r\n`\r\n\r\nconst IDInput = styled(StyledInput)`\r\n  width: 10em;\r\n`;\r\n\r\nexport const VesselIDInput = ({ triggerNextStep, steps }: any) => {\r\n  const [profile, setProfile] = useCaptainProfileState({});\r\n\r\n  const options = shipIDTypeOptionList;\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const [formState, { text, select }] = useFormState<VesselIDFormFields>({\r\n    idType: \"imo\"\r\n  });\r\n\r\n  return (\r\n    <StyledRowForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        // console.log(steps);\r\n        // console.log(formState.values);\r\n\r\n        setDisabled(true);\r\n\r\n        setProfile({\r\n            ...profile,\r\n            vessel: {\r\n              name: steps.add_vesselName.value,\r\n              ...formState.values\r\n            }\r\n        });\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n      <IDTypeSelect\r\n        onChange={(value:string) => select(\"idType\").onChange({target:{value}})}\r\n        value={select(\"idType\").value}\r\n        disabled={disabled}\r\n        options={options}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n\r\n      <IDInput disabled={disabled} {...text('idString')}/>\r\n      <StyledSubmitButton disabled={disabled} />\r\n    </StyledRowForm>\r\n  );\r\n};\r\n","export const getGearId =(partOne: string, partTwo?: string, partThree?: string) => {\r\n  if(!!partThree) {\r\n    return `${partOne}_${partTwo}_${partThree}`;\r\n  }\r\n\r\n  if (!!partTwo) {\r\n    return `${partOne}_${partTwo}`;\r\n  }\r\n\r\n  if(!!partOne) {\r\n    return partOne\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport const isGearValid = (partOne: string, partTwo?: string, partThree?: string) => {\r\n  if (!!gearAbbreviationMap[partOne]) {\r\n    return true;\r\n  }\r\n\r\n  if(!partTwo) {\r\n    return false;\r\n  }\r\n\r\n  const partOneTwo = `${partOne}_${partTwo}`\r\n\r\n  if(!!gearAbbreviationMap[partOneTwo]) {\r\n    return true;\r\n  }\r\n\r\n  if(!partThree) {\r\n    return false;\r\n  }\r\n\r\n  const partOneTwoThree = `${partOneTwo}_${partThree}`\r\n\r\n  if(!!gearAbbreviationMap[partOneTwoThree]) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport const gearTree = {\r\n  surroundingNet: {\r\n    // 01.0.0\r\n    withPurseLines: {\r\n      // 01.1.0\r\n      oneBoatOperated: null, // 01.1.1\r\n      twoBoatsOperated: null // 01.1.2\r\n    },\r\n    withoutPurseLines: null // 01.2.0\r\n  },\r\n  seineNets: {\r\n    // 02.0.0\r\n    beachSeines: null, // 02.1.0\r\n    vesselSeines: {\r\n      // 02.2.0\r\n      danishSeines: null, // 02.2.1\r\n      scottishSeines: null,\r\n      pairSeines: null\r\n    },\r\n    seineNetsNotSpecified: null // 02.9.90\r\n  },\r\n  trawls: {\r\n    bottomTrawls: {\r\n      beamTrawls: null,\r\n      otterTrawls: null,\r\n      pairTrawls: null,\r\n      nephropsTrawls: null,\r\n      shrimpTrawls: null,\r\n      bottomTrawlsNotSpecified: null\r\n    },\r\n    midwaterTrawls: {\r\n      otterTrawls: null,\r\n      pairTrawls: null,\r\n      shrimpTrawls: null,\r\n      midwaterTrawlsNotSpecified: null\r\n    },\r\n    otterTwinTrawls: null,\r\n    otterTrawlsNotSpecified: null,\r\n    pairTrawlsNotSpecified: null,\r\n    otherTrawlsNotSpecified: null\r\n  },\r\n  dredges: {\r\n    boatDredges: null,\r\n    handDredges: null\r\n  },\r\n  liftNets: {\r\n    portableLiftNets: null,\r\n    boatOperatedLiftNets: null,\r\n    shoreOperatedStationaryLiftNets: null,\r\n    liftNetsNotSpecified: null\r\n  },\r\n  fallingGear: {\r\n    castNets: null,\r\n    fallingGearNotSpecified: null\r\n  },\r\n  gillnetsAndEntanglingNets: {\r\n    setGillnetsAnchored: null,\r\n    driftnets: null,\r\n    encirclingGillnets: null,\r\n    fixedGillnetsOnStakes: null,\r\n    trammelNets: null,\r\n    combinedGillnetsTrammelNets: null,\r\n    gillnetsAndEntanglingNetsNotSpecified: null,\r\n    gillnetsNotSpecified: null\r\n  },\r\n  traps: {\r\n    stationaryUncoveredPoundNets: null,\r\n    pots: null,\r\n    fykeNets: null,\r\n    stowNets: null,\r\n    barriersFencesWeirsEtc: null,\r\n    aerialTraps: null,\r\n    trapsNotSpecified: null\r\n  },\r\n  hooksAndLines: {\r\n    handlinesAndPoleLinesHandOperated: null,\r\n    handlinesAndPoleLinesMechanized: null,\r\n    setLonglines: null,\r\n    driftingLonglines: null,\r\n    longlinesNotSpecified: null,\r\n    trollingLines: null,\r\n    hooksAndLinesNotSpecified: null\r\n  },\r\n  grapplingAndWounding: {\r\n    harpoons: null\r\n  },\r\n  harvestingMachines: {\r\n    pumps: null,\r\n    mechanizedDredges: null,\r\n    harvestingMachinesNotSpecified: null\r\n  },\r\n  miscellaneousGear: null,\r\n  recreationalFishingGear: null,\r\n  gearNotKnowOrNotSpecified: null\r\n} as any;\r\n\r\nexport const gearBaseList = Object.keys(gearTree)\r\n\r\nexport const gearISSCFGMap = {\r\n  surroundingNet: \"01.0.0\",\r\n  surroundingNet_withPurseLines: \"01.1.0\",\r\n  surroundingNet_withPurseLines_oneBoatOperated: \"01.1.1\",\r\n  surroundingNet_withPurseLines_twoBoatsOperated: \"01.1.2\",\r\n  surroundingNet_withoutPurseLines: \"01.2.0\",\r\n  seineNets: \"02.0.0\",\r\n  seineNets_beachSeines: \"02.1.0\",\r\n  seineNets_vesselSeines: \"02.2.0\",\r\n  seineNets_vesselSeines_danishSeines: \"02.2.1\",\r\n  seineNets_vesselSeines_scottishSeines: \"02.2.2\",\r\n  seineNets_vesselSeines_pairSeines: \"02.2.3\",\r\n  seineNets_seineNetsNotSpecified: \"02.9.0\",\r\n  trawls: \"03.0.0\",\r\n  trawls_bottomTrawls: \"03.1.0\",\r\n  trawls_bottomTrawls_beamTrawls: \"03.1.1\",\r\n  trawls_bottomTrawls_otterTrawls: \"03.1.2\",\r\n  trawls_bottomTrawls_pairTrawls: \"03.1.3\",\r\n  trawls_bottomTrawls_nephropsTrawls: \"03.1.4\",\r\n  trawls_bottomTrawls_shrimpTrawls: \"03.1.5\",\r\n  trawls_bottomTrawls_bottomTrawlsNotSpecified: \"03.1.9\",\r\n  trawls_midwaterTrawls: \"03.2.0\",\r\n  trawls_midwaterTrawls_otterTrawls: \"03.2.1\",\r\n  trawls_midwaterTrawls_pairTrawls: \"03.2.2\",\r\n  trawls_midwaterTrawls_shrimpTrawls: \"03.2.3\",\r\n  trawls_midwaterTrawls_midwaterTrawlsNotSpecified: \"03.2.9\",\r\n  trawls_otterTwinTrawls: \"03.3.0\",\r\n  trawls_otterTrawlsNotSpecified: \"03.4.9\",\r\n  trawls_pairTrawlsNotSpecified: \"03.5.9\",\r\n  trawls_otherTrawlsNotSpecified: \"03.9.0\",\r\n  dredges: \"04.0.0\",\r\n  dredges_boatDredges: \"04.1.0\",\r\n  dredges_handDredges: \"04.2.0\",\r\n  liftNets: \"05.0.0\",\r\n  liftNets_portableLiftNets: \"05.1.0\",\r\n  liftNets_boatOperatedLiftNets: \"05.2.0\",\r\n  liftNets_shoreOperatedStationaryLiftNets: \"05.3.0\",\r\n  liftNets_liftNetsNotSpecified: \"05.9.0\",\r\n  fallingGear: \"06.0.0\",\r\n  fallingGear_castNets: \"06.1.0\",\r\n  fallingGear_fallingGearNotSpecified: \"06.9.0\",\r\n  gillnetsAndEntanglingNets: \"07.0.0\",\r\n  gillnetsAndEntanglingNets_setGillnetsAnchored: \"07.1.0\",\r\n  gillnetsAndEntanglingNets_driftnets: \"07.2.0\",\r\n  gillnetsAndEntanglingNets_encirclingGillnets: \"07.3.0\",\r\n  gillnetsAndEntanglingNets_fixedGillnetsOnStakes: \"07.4.0\",\r\n  gillnetsAndEntanglingNets_trammelNets: \"07.5.0\",\r\n  gillnetsAndEntanglingNets_combinedGillnetsTrammelNets: \"07.6.0\",\r\n  gillnetsAndEntanglingNets_gillnetsAndEntanglingNetsNotSpecified: \"07.9.0\",\r\n  gillnetsAndEntanglingNets_gillnetsNotSpecified: \"07.9.1\",\r\n  traps: \"08.0.0\",\r\n  traps_stationaryUncoveredPoundNets: \"08.1.0\",\r\n  traps_pots: \"08.2.0\",\r\n  traps_fykeNets: \"08.3.0\",\r\n  traps_stowNets: \"08.4.0\",\r\n  traps_barriersFencesWeirsEtc: \"08.5.0\",\r\n  traps_aerialTraps: \"08.6.0\",\r\n  traps_trapsNotSpecified: \"08.9.0\",\r\n  hooksAndLines: \"09.0.0\",\r\n  hooksAndLines_handlinesAndPoleLinesHandOperated: \"09.1.0\",\r\n  hooksAndLines_handlinesAndPoleLinesMechanized: \"09.2.0\",\r\n  hooksAndLines_setLonglines: \"09.3.0\",\r\n  hooksAndLines_driftingLonglines: \"09.4.0\",\r\n  hooksAndLines_longlinesNotSpecified: \"09.5.0\",\r\n  hooksAndLines_trollingLines: \"09.6.0\",\r\n  hooksAndLines_hooksAndLinesNotSpecified: \"09.9.0\",\r\n  grapplingAndWounding: \"10.0.0\",\r\n  grapplingAndWounding_harpoons: \"10.1.0\",\r\n  harvestingMachines: \"11.0.0\",\r\n  harvestingMachines_pumps: \"11.1.0\",\r\n  harvestingMachines_mechanizedDredges: \"11.2.0\",\r\n  harvestingMachines_harvestingMachinesNotSpecified: \"11.9.0\",\r\n  miscellaneousGear: \"20.0.0\",\r\n  recreationalFishingGear: \"25.0.0\",\r\n  gearNotKnowOrNotSpecified: \"99.0.0\"\r\n} as any;\r\n\r\nexport const gearAbbreviationMap = {\r\n  surroundingNet_withPurseLines: \"PS\",\r\n  surroundingNet_withPurseLines_oneBoatOperated: \"PS1\",\r\n  surroundingNet_withPurseLines_twoBoatsOperated: \"PS2\",\r\n  surroundingNet_withoutPurseLines: \"LA\",\r\n\r\n  seineNets_beachSeines: \"SB\",\r\n  seineNets_vesselSeines: \"SV\",\r\n  seineNets_vesselSeines_danishSeines: \"SDN\",\r\n  seineNets_vesselSeines_scottishSeines: \"SSC\",\r\n  seineNets_vesselSeines_pairSeines: \"SPR\",\r\n  seineNets_seineNetsNotSpecified: \"SX\",\r\n\r\n  trawls_bottomTrawls_beamTrawls: \"TTB\",\r\n  trawls_bottomTrawls_otterTrawls: \"OTB\",\r\n  trawls_bottomTrawls_pairTrawls: \"PTB\",\r\n  trawls_bottomTrawls_nephropsTrawls: \"TBN\",\r\n  trawls_bottomTrawls_shrimpTrawls: \"TBS\",\r\n  trawls_bottomTrawls_bottomTrawlsNotSpecified: \"TB\",\r\n\r\n  trawls_midwaterTrawls_otterTrawls: \"OTM\",\r\n  trawls_midwaterTrawls_pairTrawls: \"PTM\",\r\n  trawls_midwaterTrawls_shrimpTrawls: \"TMS\",\r\n  trawls_midwaterTrawls_midwaterTrawlsNotSpecified: \"TM\",\r\n  trawls_otterTwinTrawls: \"OTT\",\r\n  trawls_otterTrawlsNotSpecified: \"OT\",\r\n  trawls_pairTrawlsNotSpecified: \"PT\",\r\n  trawls_otherTrawlsNotSpecified: \"TX\",\r\n\r\n  dredges_boatDredges: \"DRB\",\r\n  dredges_handDredges: \"DRH\",\r\n\r\n  liftNets_portableLiftNets: \"LNP\",\r\n  liftNets_boatOperatedLiftNets: \"LNB\",\r\n  liftNets_shoreOperatedStationaryLiftNets: \"LNS\",\r\n  liftNets_liftNetsNotSpecified: \"LN\",\r\n\r\n  fallingGear_castNets: \"FCN\",\r\n  fallingGear_fallingGearNotSpecified: \"FG\",\r\n\r\n  gillnetsAndEntanglingNets_setGillnetsAnchored: \"GNS\",\r\n  gillnetsAndEntanglingNets_driftnets: \"GND\",\r\n  gillnetsAndEntanglingNets_encirclingGillnets: \"GNC\",\r\n  gillnetsAndEntanglingNets_fixedGillnetsOnStakes: \"GNF\",\r\n  gillnetsAndEntanglingNets_trammelNets: \"GTR\",\r\n  gillnetsAndEntanglingNets_combinedGillnetsTrammelNets: \"GTN\",\r\n  gillnetsAndEntanglingNets_gillnetsAndEntanglingNetsNotSpecified: \"GEN\",\r\n  gillnetsAndEntanglingNets_gillnetsNotSpecified: \"GN\",\r\n\r\n  traps_stationaryUncoveredPoundNets: \"FPN\",\r\n  traps_pots: \"FPO\",\r\n  traps_fykeNets: \"FYK\",\r\n  traps_stowNets: \"FSN\",\r\n  traps_barriersFencesWeirsEtc: \"FWR\",\r\n  traps_aerialTraps: \"FAR\",\r\n  traps_trapsNotSpecified: \"FIX\",\r\n\r\n  hooksAndLines_handlinesAndPoleLinesHandOperated: \"LHP\",\r\n  hooksAndLines_handlinesAndPoleLinesMechanized: \"LHM\",\r\n  hooksAndLines_setLonglines: \"LLS\",\r\n  hooksAndLines_driftingLonglines: \"LLD\",\r\n  hooksAndLines_longlinesNotSpecified: \"LL\",\r\n  hooksAndLines_trollingLines: \"LTL\",\r\n  hooksAndLines_hooksAndLinesNotSpecified: \"LX\",\r\n\r\n  grapplingAndWounding_harpoons: \"HAR\",\r\n\r\n  harvestingMachines_pumps: \"HMP\",\r\n  harvestingMachines_mechanizedDredges: \"HMD\",\r\n  harvestingMachines_harvestingMachinesNotSpecified: \"HMX\",\r\n\r\n  miscellaneousGear: \"MIS\",\r\n  recreationalFishingGear: \"RG\",\r\n  gearNotKnowOrNotSpecified: \"NK\"\r\n} as any;\r\n\r\n/**\r\n * data extraction code:\r\n\r\nimport {camel} from \"case\"\r\n\r\nconst data = `\r\n\r\n`.split('\\n')\r\n\r\nconst output = {}\r\n\r\ndata.map(d=>camel(d.trim())).forEach(d=>output[d] = null)\r\n\r\nconsole.log(JSON.stringify(output, \"\\t\", 2))\r\n\r\n */\r\n\r\n/**\r\n  * \r\n  * convert to ISSCFG Code, not accomodating special case.\r\n  * \r\nimport {camel} from \"case\"\r\n\r\nconst gearTree = {\r\n  surroundingNet: {\r\n    // 01.0.0\r\n    withPurseLines: {\r\n      // 01.1.0\r\n      oneBoatOperated: null, // 01.1.1\r\n      twoBoatsOperated: null // 01.1.2\r\n    },\r\n    withoutPurseLines: null // 01.2.0\r\n  },\r\n  seineNets: {\r\n    // 02.0.0\r\n    beachSeines: null, // 02.1.0\r\n    vesselSeines: {\r\n      // 02.2.0\r\n      danishSeines: null, // 02.2.1\r\n      scottishSeines: null,\r\n      pairSeines: null\r\n    },\r\n    seineNetsNotSpecified: null // 02.9.90\r\n  }\r\n};\r\n\r\nconst output = {}\r\n\r\nfunction extractTree (c, prevKey, prevIndex, level) {\r\n  if( c === null) {\r\n    \r\n    return;\r\n  };\r\n\r\n  Object.keys(c).forEach((k, i)=>{\r\n    const key = level === 1 ? k : `${prevKey}_${k}`\r\n\r\n    const nValue = key.search(/notSpecified/i) === -1 \r\n      ? i+1\r\n      : 9;\r\n\r\n    const baseValue = (level === 1 \r\n      ? (`0${nValue}`).slice(-2)\r\n      : `${prevIndex}.${nValue}`)\r\n\r\n    output[key] = baseValue + ('.0').repeat(3-level)\r\n    extractTree(c[k], key, baseValue, level + 1)\r\n  })\r\n}\r\n\r\nextractTree(gearTree,'', 0, 1)\r\n\r\nconsole.log(JSON.stringify(output, '\\t', 2))\r\n\r\n  * \r\n  */\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Select from \"react-styled-select\";\r\n\r\nimport { useCaptainProfileState } from \"../_data\";\r\nimport { StyledSubmitButton } from \"../_theme\";\r\nimport { createSelectOptionList } from \"../core/utils\";\r\n\r\nimport {\r\n  gearTree,\r\n  gearBaseList,\r\n  gearAbbreviationMap,\r\n  isGearValid,\r\n  getGearId,\r\n} from \"../data/gear\";\r\nimport { strings } from \"../i18n\";\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledSelect = styled(Select)`\r\n  width: 100%;\r\n  margin-bottom: 1em;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nconst getGearKeyList : any = (gearTreeNode: null | Object) => {\r\n  if (gearTreeNode) {\r\n    const keys = Object.keys(gearTreeNode);\r\n\r\n    if (keys.length > 0) {\r\n      return createSelectOptionList(keys);\r\n    } else {\r\n      return [];\r\n    }\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const FishingGearInput = ({triggerNextStep}: any) => {\r\n  const [profile, setProfile] = useCaptainProfileState({});\r\n\r\n  const [partOne, setPartOne] = useState(\"\");\r\n  const [partTwo, setPartTwo] = useState(\"\");\r\n  const [partThree, setPartThree] = useState(\"\");\r\n\r\n  const partOneOptions = createSelectOptionList(gearBaseList);\r\n\r\n  const [partTwoOptions, setPartTwoOptions] = useState([]);\r\n  const [partThreeOptions, setPartThreeOptions] = useState([]);\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n\r\n  return (\r\n    <StyledForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n\r\n        setDisabled(true);\r\n\r\n        const gearId = getGearId(partOne, partTwo, partThree);\r\n\r\n        // console.log(gearId);\r\n        \r\n        if (!gearId) {\r\n          return console.error(\"GEAR ID IS INVALID!!!\");\r\n        }\r\n\r\n        const fishingGearTypeCode = gearAbbreviationMap[gearId];\r\n\r\n        setProfile({\r\n            ...profile,\r\n            fishingGearTypeCode\r\n        });\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n      <StyledSelect\r\n        placeholder={strings.selectGearBase}\r\n        onChange={(value: string) => {\r\n          setPartOne(value);\r\n\r\n          setPartTwo(\"\");\r\n          setPartTwoOptions(getGearKeyList(gearTree[value]));\r\n\r\n          setPartThree(\"\");\r\n          setPartThreeOptions([]);\r\n        }}\r\n        value={partOne}\r\n        disabled={disabled}\r\n        options={partOneOptions}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n      <StyledSelect\r\n        placeholder={strings.selectGearSubtype}\r\n        onChange={(value: string) => {\r\n          setPartTwo(value);\r\n          setPartThree(\"\");\r\n          setPartThreeOptions(getGearKeyList(gearTree[partOne][value]));\r\n        }}\r\n        value={partTwo}\r\n        disabled={disabled || partTwoOptions.length === 0}\r\n        options={partTwoOptions}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n      <StyledSelect\r\n        clearable\r\n        placeholder={strings.selectGearOptionalType}\r\n        onChange={setPartThree}\r\n        onInputClear={()=>setPartThree('')}\r\n        value={partThree}\r\n        disabled={disabled || partThreeOptions.length === 0}\r\n        options={partThreeOptions}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n\r\n      <StyledSubmitButton\r\n        disabled={disabled || !isGearValid(partOne, partTwo, partThree)}\r\n      />\r\n    </StyledForm>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { animated } from \"react-spring\";\r\n\r\nimport { useCaptainProfileState, useProfileState, localStorageKey } from \"../_data\";\r\n\r\nimport { StyledSubmitButton, ReviewInput } from \"../_theme\";\r\n\r\nconst Container = styled(animated.div)`\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  margin-top: 1em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n`;\r\n\r\nexport const CaptainProfileReview = ({ triggerNextStep, steps }: any) => {\r\n  const {\r\n    add_productionMethod,\r\n\r\n    add_vesselOwnerName,\r\n    add_organizationName,\r\n\r\n    add_unitOfMeasurement\r\n  } = steps;\r\n\r\n  const [captainProfile] = useCaptainProfileState({});\r\n\r\n  const [, setProfile] = useProfileState({});\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const { captain, vessel, vesselCertification } = captainProfile;\r\n\r\n  const [formState, { text }] = useFormState<CaptainProfileReviewFormFields>({\r\n    firstName: captain.firstName,\r\n    middleName: captain.middleName,\r\n    lastName: captain.lastName,\r\n\r\n    vesselIdType: vessel.idType,\r\n    vesselIdString: vessel.idString,\r\n    vesselName: vessel.name,\r\n\r\n    vesselCertificationStandard: vesselCertification\r\n      ? vesselCertification.standard\r\n      : \"\",\r\n    vesselCertificationAgency: vesselCertification\r\n      ? vesselCertification.agency\r\n      : \"\",\r\n    vesselCertificationValue: vesselCertification\r\n      ? vesselCertification.value\r\n      : \"\",\r\n    vesselCertificationIdentification: vesselCertification\r\n      ? vesselCertification.identification\r\n      : \"\",\r\n\r\n    fishingGearType: captainProfile.fishingGearTypeCode,\r\n\r\n    productionMethod: add_productionMethod.value,\r\n\r\n    vesselOwnerName: add_vesselOwnerName ? add_vesselOwnerName.value : \"\",\r\n    organizationName: add_organizationName ? add_organizationName.value : \"\",\r\n\r\n    unitOfMeasurement: add_unitOfMeasurement.value\r\n  });\r\n\r\n  // console.log(formState.values)\r\n\r\n  // console.log(Object.keys(formState.values))\r\n\r\n  return (\r\n    <Container>\r\n      <StyledForm\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n\r\n          setDisabled(true);\r\n\r\n          setProfile({\r\n            ...formState.values,\r\n            completed: true\r\n          });\r\n\r\n          localStorage.removeItem(localStorageKey.chatCache);\r\n\r\n          triggerNextStep();\r\n        }}\r\n      >\r\n        {Object.keys(formState.values).map(k => (\r\n          <ReviewInput\r\n            key={k}\r\n            disabled={disabled}\r\n            label={k}\r\n            {...text(k as any)}\r\n          />\r\n        ))}\r\n\r\n        <StyledSubmitButton disabled={disabled} />\r\n      </StyledForm>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useFormState } from 'react-use-form-state'\r\nimport { animated } from 'react-spring'\r\n\r\nimport { useCaptainProfileState } from '../_data'\r\nimport { strings } from '../i18n'\r\n\r\nimport { StyledSubmitButton, LabeledInput } from '../_theme'\r\n\r\ninterface CertificationStandardFormFields {\r\n  standard: string\r\n  agency: string\r\n  value: string\r\n  identification: string\r\n}\r\n\r\nconst Container = styled(animated.div)`\r\n  width: 100%;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`\r\n\r\nconst StyledForm = styled.form`\r\n  margin-top: 1em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledHeaderLabel = styled.span`\r\n  color: ${p => p.theme.botBubbleColor};\r\n  font-weight: bold;\r\n`\r\n\r\nconst CertificationInput = styled(LabeledInput)`\r\n  width: 100%;\r\n  margin-bottom: 0.5em;\r\n`\r\n\r\nexport const VesselCertificationInput = ({ triggerNextStep, steps }: any) => {\r\n  const [profile, setProfile] = useCaptainProfileState({})\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const [formState, { text }] = useFormState<CertificationStandardFormFields>()\r\n\r\n  return (\r\n    <Container>\r\n      <StyledHeaderLabel>{strings.certification}</StyledHeaderLabel>\r\n\r\n      <StyledForm\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n\r\n          setDisabled(true)\r\n\r\n          setProfile({\r\n            ...profile,\r\n            vesselCertification: {\r\n              ...formState.values,\r\n              standard: 'MSC'\r\n            }\r\n          })\r\n\r\n          triggerNextStep()\r\n        }}>\r\n        <CertificationInput\r\n          disabled={disabled}\r\n          required\r\n          label={strings.form_certificationAgencyLabel}\r\n          placeholder={strings.form_certificationAgencyPlaceholder}\r\n          {...text('agency')}\r\n        />\r\n\r\n        <CertificationInput\r\n          disabled={disabled}\r\n          required\r\n          label={strings.form_certificationValueLabel}\r\n          placeholder={strings.form_certificationValuePlaceholder}\r\n          {...text('value')}\r\n        />\r\n\r\n        <CertificationInput\r\n          disabled={disabled}\r\n          required\r\n          label={strings.form_certificationIdentificationLabel}\r\n          placeholder={strings.form_certificationIdentificationPlaceholder}\r\n          {...text('identification')}\r\n        />\r\n\r\n        <StyledSubmitButton disabled={disabled} />\r\n      </StyledForm>\r\n    </Container>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n  createOptionLabel,\r\n  createPromptArray\r\n} from \"../core/utils\";\r\nimport { VesselCaptainNameInput } from \"../components/VesselCaptainNameInput\";\r\nimport { VesselIDInput } from \"../components/VesselIDInput\";\r\nimport { FishingGearInput } from \"../components/FishingGearInput\";\r\nimport { CaptainProfileReview } from \"../components/CaptainProfileReview\";\r\nimport { VesselCertificationInput } from \"../components/VesselCertificationInput\";\r\n\r\nconst promptOrder = [\r\n  \"prompt_welcomeNew\",\r\n\r\n  \"prompt_introduceNemo\",\r\n\r\n  \"prompt_vesselCaptainName\",\r\n  \"add_vesselCaptainName\",\r\n\r\n  \"prompt_vesselName\",\r\n  \"add_vesselName\",\r\n\r\n  \"prompt_vesselID\",\r\n  \"add_vesselID\",\r\n\r\n  \"prompt_fishingGearTypeCode\",\r\n  \"add_fishingGearTypeCode\",\r\n\r\n  \"prompt_productionMethod\",\r\n  \"add_productionMethod\",\r\n\r\n  \"prompt_ownership\",\r\n  \"add_ownership\",\r\n\r\n  \"prompt_vesselOwnerName\",\r\n  \"add_vesselOwnerName\",\r\n\r\n  \"prompt_organization\",\r\n  \"add_organization\",\r\n\r\n  \"prompt_organizationName\",\r\n  \"add_organizationName\",\r\n\r\n  \"prompt_certificationHolder\",\r\n  \"add_certificationHolder\",\r\n\r\n  \"prompt_certificationStandard\",\r\n  \"add_certificationStandard\",\r\n\r\n  \"prompt_unitOfMeasurement\",\r\n  \"add_unitOfMeasurement\",\r\n\r\n  \"prompt_setupProfileCompleted\",\r\n\r\n  \"prompt_profileReview\",\r\n\r\n  \"prompt_profileDone\",\r\n\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nconst promptStructure = {\r\n  add_vesselCaptainName: {\r\n    component: <VesselCaptainNameInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_vesselName: {\r\n    user: true\r\n  },\r\n\r\n  add_vesselID: {\r\n    component: <VesselIDInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_fishingGearTypeCode: {\r\n    // user: true,\r\n    component: <FishingGearInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_productionMethod: {\r\n    // user: true\r\n    hideInput: true,\r\n    options: [\"aquaculture\", \"inlandFishery\", \"marineFishery\"].map(\r\n      createOptionLabel\r\n    )\r\n  },\r\n\r\n  add_ownership: {\r\n    // user: true\r\n    hideInput: true,\r\n    options: [\"yes\", \"no\"].map(createOptionLabel),\r\n    triggers: [\"prompt_organization\", \"prompt_vesselOwnerName\"]\r\n  },\r\n\r\n  add_vesselOwnerName: {\r\n    user: true\r\n  },\r\n\r\n  add_organization: {\r\n    hideInput: true,\r\n    options: [\"yes\", \"no\"].map(createOptionLabel),\r\n    triggers: [\"prompt_organizationName\", \"prompt_certificationHolder\"]\r\n  },\r\n\r\n  add_organizationName: {\r\n    user: true\r\n  },\r\n\r\n  add_unitOfMeasurement: {\r\n    hideInput: true,\r\n    options: [\"pound\", \"kilogram\"].map(createOptionLabel)\r\n  },\r\n\r\n  add_certificationHolder: {\r\n    hideInput: true,\r\n    options: [\"yes\", \"no\"].map(createOptionLabel),\r\n    triggers: [\"prompt_certificationStandard\", \"prompt_unitOfMeasurement\"]\r\n  },\r\n\r\n  add_certificationStandard: {\r\n    component: <VesselCertificationInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  prompt_profileReview: {\r\n    component: <CaptainProfileReview />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  }\r\n} as any;\r\n\r\nexport const createSetupCaptainProfilePrompt = () =>\r\n  createPromptArray(promptOrder, promptStructure);\r\n","export const csvAggregationEventHeader = [\r\n  'action',\r\n  'bizStep',\r\n  'informationProvider',\r\n  'productOwner',\r\n  'parentID',\r\n  'eventTime',\r\n  'eventTimeZoneOffset',\r\n  'visibilityEvent',\r\n  'disposition',\r\n\r\n  'childEPCs_epc',\r\n\r\n  'readPoint_id',\r\n  'bizLocation_id',\r\n\r\n  'extension_childQuantityList_quantityElement_epcClass',\r\n  'extension_childQuantityList_quantityElement_quantity',\r\n  'extension_childQuantityList_quantityElement_uom'\r\n]\r\n\r\nexport const csvTransformationEventHeader = [\r\n  'bizStep',\r\n  'informationProvider',\r\n  'productOwner',\r\n  'eventTime',\r\n  'eventTimeZoneOffset',\r\n  'visibilityEvent',\r\n  'disposition',\r\n\r\n  'readPoint_id',\r\n  'bizLocation_id',\r\n\r\n  'inputQuantityList_quantityElement_epcClass',\r\n  'inputQuantityList_quantityElement_quantity',\r\n  'inputQuantityList_quantityElement_uom',\r\n\r\n  'outputQuantityList_quantityElement_epcClass',\r\n  'outputQuantityList_quantityElement_quantity',\r\n  'outputQuantityList_quantityElement_uom',\r\n\r\n  'ilmd_lotNumber',\r\n  'ilmd_productionDate',\r\n  'ilmd_bestBeforeDate',\r\n  'ilmd_preservationTechniqueCode',\r\n\r\n  'ilmd_certificationList_certification_certificationAgency',\r\n  'ilmd_certificationList_certification_certificationIdentification',\r\n  'ilmd_certificationList_certification_certificationStandard',\r\n  'ilmd_certificationList_certification_certificationValue'\r\n]\r\n\r\nexport const csvObjectEventHeader = [\r\n  'action',\r\n  'bizStep',\r\n  'informationProvider',\r\n  'productOwner',\r\n  'eventTime',\r\n  'eventTimeZoneOffset',\r\n  'visibilityEvent',\r\n  'disposition',\r\n\r\n  'epcList_epc',\r\n\r\n  'readPoint_id',\r\n  'bizLocation_id',\r\n\r\n  'bizTransactionList_bizTransaction_type',\r\n  'bizTransactionList_bizTransaction_value',\r\n\r\n  'extension_sourceList_source_type',\r\n  'extension_sourceList_source_value',\r\n\r\n  'extension_destinationList_destination_type',\r\n  'extension_destinationList_destination_value',\r\n\r\n  'extension_ilmd_FIP',\r\n  'extension_ilmd_harvestCertification',\r\n  'extension_ilmd_harvestCertificationCoC',\r\n  'extension_ilmd_harvestEndDate',\r\n  'extension_ilmd_harvestStartDate',\r\n  'extension_ilmd_ISSF',\r\n  'extension_ilmd_landingDateEnd',\r\n  'extension_ilmd_landingDateStart',\r\n  'extension_ilmd_productionMethodCode',\r\n  'extension_ilmd_ratingsScheme',\r\n  'extension_ilmd_ratingsScore',\r\n  'extension_ilmd_unloadingPort',\r\n  'extension_ilmd_vesselRegistryLink',\r\n  'extension_ilmd_vesselTransponder',\r\n\r\n  'extension_ilmd_certificationList_certification_certificationAgency',\r\n  'extension_ilmd_certificationList_certification_certificationIdentification',\r\n  'extension_ilmd_certificationList_certification_certificationStandard',\r\n  'extension_ilmd_certificationList_certification_certificationValue',\r\n\r\n  'extension_ilmd_vesselCatchInformationList_vesselCatchInformation_catchArea',\r\n  'extension_ilmd_vesselCatchInformationList_vesselCatchInformation_fishingGearTypeCode',\r\n  'extension_ilmd_vesselCatchInformationList_vesselCatchInformation_vesselFlagState',\r\n  'extension_ilmd_vesselCatchInformationList_vesselCatchInformation_vesselID',\r\n  'extension_ilmd_vesselCatchInformationList_vesselCatchInformation_vesselName',\r\n  'extension_ilmd_vesselCatchInformationList_vesselCatchInformation_vesselOperator',\r\n  'extension_ilmd_vesselCatchInformationList_vesselCatchInformation_vesselRegistration',\r\n\r\n  'extension_quantityList_quantityElement_epcClass',\r\n  'extension_quantityList_quantityElement_quantity',\r\n  'extension_quantityList_quantityElement_uom'\r\n]\r\n\r\nexport const csvLocationHeader = [\r\n  'informationProvider',\r\n  'id',\r\n  'name',\r\n  'unloadingPort',\r\n  'streetAddressOne',\r\n  'streetAddressTwo',\r\n  'city',\r\n  'state',\r\n  'postalCode',\r\n  'countryCode',\r\n  'latitude',\r\n  'longitude',\r\n  'contact',\r\n  'telephone',\r\n  'email',\r\n  'vesselID',\r\n  'vesselName',\r\n  'vesselOwnerName',\r\n  'vesselOrganizationName',\r\n  'fishingGearTypeCode',\r\n  'geofencePolygonPolygonPointSeq',\r\n  'geofencePolygonPolygonPointValue'\r\n]\r\n\r\nexport const csvEpcClassHeader = [\r\n  'informationProvider',\r\n  'id',\r\n  'descriptionShort',\r\n  'speciesForFisheryStatisticsPurposesName',\r\n  'speciesForFisheryStatisticsPurposesCode',\r\n  'tradeItemConditionCode',\r\n  'additionalTradeItemIdentification',\r\n  'preservationTechniqueCode',\r\n  'grossWeightMeasurementValue',\r\n  'grossWeightMeasurementUnitCode'\r\n]\r\n\r\nexport const csvBusinessDocumentHeader = [\r\n  'senderId',\r\n  'senderName',\r\n  'senderEmail',\r\n  'receiverId',\r\n  'receiverName',\r\n  'receiverEmail'\r\n]\r\n\r\nexport const csvMasterDataHeader = [\r\n  'informationProviderID',\r\n  'informationProviderContact',\r\n  'informationProviderEmail',\r\n  'informationReceiverID',\r\n  'informationReceiverContact',\r\n  'informationReceiverEmail',\r\n  'childEPC',\r\n  'informationProviderChild',\r\n  'speciesCodeChild',\r\n  'speciesNameChild',\r\n  'descriptionShortChild',\r\n  'itemConditionCodeChild',\r\n  'parentEPC',\r\n  'informationProviderParent',\r\n  'descriptonShortParent',\r\n  'speciesCodeParent',\r\n  'speciesNameParent',\r\n  'preservationTechniqueCode',\r\n  'unitOfMeasure',\r\n  'grossWeight',\r\n  'itemConditionCodeParent',\r\n  'additionalTradeItemIdentificationParent'\r\n]\r\n\r\nexport const csvLocationDataHeaderV0 = [\r\n  'location',\r\n  'name',\r\n  'partyIDTypeCode',\r\n  'additionalPartyID',\r\n  'streetAddressOne',\r\n  'streetAddressTwo',\r\n  'city',\r\n  'state',\r\n  'postalCode',\r\n  'countryCode',\r\n  'latitude',\r\n  'longitude',\r\n  'contact',\r\n  'telephone',\r\n  'email'\r\n]\r\n\r\nexport const csvEventLevelDataHeader = [\r\n  'action',\r\n  'eventTime',\r\n  'eventTimeZoneOffset',\r\n  'readPoint',\r\n  'bizLocation',\r\n  'purchaseOrderNumber',\r\n  'quantity',\r\n  'productOwner',\r\n  'informationProvider'\r\n]\r\n\r\nexport const csvAggregationDisaggregationHeader = [\r\n  ...csvMasterDataHeader,\r\n  ...csvLocationDataHeaderV0,\r\n  ...csvEventLevelDataHeader\r\n]\r\n\r\nexport const csvShipReceiveHeader = [\r\n  ...csvMasterDataHeader,\r\n  ...csvLocationDataHeaderV0,\r\n  ...csvEventLevelDataHeader\r\n]\r\n\r\nexport const csvAggregatedCatchProcessHeader = [\r\n  'informationProviderID',\r\n  'informationProviderContactName',\r\n  'informationProviderEmail',\r\n  'destinationID',\r\n  'destinationContactName',\r\n  'destinationEmail',\r\n  'eventDateV1',\r\n  'eventTimeZoneOffsetV1',\r\n  'readPointV1',\r\n  'bizLocationV1',\r\n  'seafoodID',\r\n  'speciesCode',\r\n  'speciesScientificName',\r\n  'tradeItemDescription',\r\n  'tradeItemConditionCode',\r\n  'seafoodQuantity',\r\n  'seafoodUOM',\r\n  'vesselOperator',\r\n  'vesselID',\r\n  'vesselRegistration',\r\n  'vesselName',\r\n  'vesselFlagState',\r\n  'catchAreaFAO',\r\n  'fishingGearTypeCode',\r\n  'productionMethodCode',\r\n  'harvestStartDate',\r\n  'harvestEndDate',\r\n  'unloadingPort',\r\n  'mscCertification',\r\n  'landingAuthority',\r\n  'landingAuthorization',\r\n  'landingDateStart',\r\n  'landingDateEnd',\r\n  'harvestCertification',\r\n  'harvestCertificationCoC',\r\n  'FIP',\r\n  'ISSF',\r\n  'ratingsScore',\r\n  'ratingsScheme',\r\n  'vesselTransponder',\r\n  'vesselRegistryLink',\r\n  'visibilityEvent',\r\n  'productOwnerV1',\r\n  'eventDateV2',\r\n  'eventTimeZoneOffsetV2',\r\n  'readPointV2',\r\n  'bizLocationV2',\r\n  'inputSeafoodID',\r\n  'inputSeafoodQuantity',\r\n  'inputSeafoodUOM',\r\n  'outputProductID',\r\n  'outputProductName',\r\n  'outputQuantity',\r\n  'outputUOM',\r\n  'lotNumber',\r\n  'productionDate',\r\n  'bestBeforeDate',\r\n  'storageStateCode',\r\n  'firstFreezeDate',\r\n  'countryOfOrigin',\r\n  'processorOwnerName',\r\n  'processorID',\r\n  'processorAddress1',\r\n  'processorAddress2',\r\n  'processorCity',\r\n  'processorState',\r\n  'processorPostalCode',\r\n  'processorCountryCode',\r\n  'processorContactName',\r\n  'processorContactEmail',\r\n  'transformationVisibilityEvent',\r\n  'productOwnerV3'\r\n]\r\n","import fileReaderStream from 'filereader-stream'\r\n// const parseDate = (s) => DateTime.fromFormat(s, 'dd/MM/yy').toISO()\r\n\r\nexport const createCsvFileReaderStream =(file)=> {\r\n  if (!file) throw new Error(\"no file\")\r\n\r\n  if (file.name.split('.').pop() !== 'csv') {\r\n    throw new Error('not csv')\r\n  }\r\n\r\n  return fileReaderStream(file)\r\n}\r\n\r\nexport const parseUom = (s: string) =>\r\n  s && s[0].toLowerCase() === 'l' ? 'LBR' : 'KGM'\r\n\r\nexport const createSender = ({\r\n  informationProviderID,\r\n  informationProviderContactName,\r\n  informationProviderEmail\r\n}) => `\r\n<sbdh:Sender>\r\n    <sbdh:Identifier>${informationProviderID}</sbdh:Identifier>\r\n    <sbdh:ContactInformation>\r\n        <sbdh:Contact>${informationProviderContactName}</sbdh:Contact>\r\n        <sbdh:EmailAddress>${informationProviderEmail}</sbdh:EmailAddress>\r\n    </sbdh:ContactInformation>\r\n</sbdh:Sender>\r\n`\r\n\r\nexport const createReceiver = ({\r\n  destinationID,\r\n  destinationContactName,\r\n  destinationEmail\r\n}) => `\r\n<sbdh:Receiver>\r\n    <sbdh:Identifier>${destinationID}</sbdh:Identifier>\r\n    <sbdh:ContactInformation>\r\n        <sbdh:Contact>${destinationContactName}</sbdh:Contact>\r\n        <sbdh:EmailAddress>${destinationEmail}</sbdh:EmailAddress>\r\n    </sbdh:ContactInformation>\r\n</sbdh:Receiver>\r\n`\r\n\r\nexport const createFishVocab = ({\r\n  seafoodID,\r\n  speciesCode,\r\n  speciesScientificName,\r\n  tradeItemDescription,\r\n  informationProviderID,\r\n  tradeItemConditionCode\r\n}) => `\r\n<VocabularyElement id=\"${seafoodID}\"> \r\n    <attribute id=\"urn:epcglobal:cbv:mda#speciesForFisheryStatisticsPurposesCode\">${speciesCode}</attribute>\r\n    <attribute id=\"urn:epcglobal:cbv:mda#speciesForFisheryStatisticsPurposesName\">${speciesScientificName}</attribute>\r\n    <attribute id=\"urn:epcglobal:cbv:mda#descriptionShort\">${tradeItemDescription}</attribute>\r\n    <attribute id=\"urn:epcglobal:cbv:mda#informationProvider\">${informationProviderID}</attribute>\r\n    <attribute id=\"urn:epcglobal:cbv:mda#tradeItemConditionCode\">${tradeItemConditionCode}</attribute>\r\n</VocabularyElement>\r\n`\r\nconst createVocabEl = ({ id, ...props }) => `\r\n<VocabularyElement id=\"${id}\">\r\n    ${Object.keys(props)\r\n      .map(\r\n        k =>\r\n          `<attribute id=\"urn:epcglobal:cbv:mda#${k}\">${props[k]}</attribute>`\r\n      )\r\n      .join('\\n')}\r\n</VocabularyElement>\r\n`\r\n\r\nexport const createOutputProductVocab = (data: CsvCatchProcessPayloadFields) =>\r\n  createVocabEl({\r\n    id: data.outputProductID,\r\n    informationProvider: data.informationProviderID,\r\n    descriptionShort: data.outputProductName\r\n  })\r\n\r\nexport const createLocationVocab = (data: CsvCatchProcessPayloadFields) =>\r\n  createVocabEl({\r\n    id: data.processorID,\r\n    informationProvider: data.informationProviderID,\r\n    name: data.processorOwnerName,\r\n    streetAddressOne: data.processorAddress1,\r\n    streetAddressTwo: data.processorAddress2,\r\n    city: data.processorCity,\r\n    state: data.processorState,\r\n    postalCode: data.processorPostalCode,\r\n    countryCode: data.processorCountryCode,\r\n    contact: data.processorContactName,\r\n    email: data.processorContactEmail\r\n  })\r\n\r\nexport const createFishCatchEvent = (data: CsvCatchProcessPayloadFields) => `\r\n<ObjectEvent> <!-- V1 Fishing/Catch Event (represents one catch, if multiple creat multiple events and IDs) -->\r\n    <eventTime>${\r\n      data.eventDateV1\r\n    }</eventTime> <!-- Reflects when the catch event is recorded, not actually when fish are caught -->\r\n    <eventTimeZoneOffset>${data.eventTimeZoneOffsetV1}</eventTimeZoneOffset>\r\n    <epcList>\r\n    </epcList>\r\n    <action>ADD</action> <!-- Action ADD indicates this is the creation point of the specific lot of fish -->\r\n    <bizStep>urn:epcglobal:cbv:bizstep:commissioning</bizStep> <!-- Indicates first time this ID appears in traceability event stream -->\r\n    <disposition>urn:epcglobal:cbv:disp:active</disposition> <!-- This indicates the lot is active. -->\r\n    <readPoint>\r\n        <id>${\r\n          data.readPointV1\r\n        }</id> <!-- This should either be where the catch event was recorded or where the fish was landed -->\r\n    </readPoint>\r\n    <bizLocation>\r\n        <id>${\r\n          data.bizLocationV1\r\n        }</id> <!-- Optional, if the vessel has a globally unique ID.  Otherwise, exclude.-->\r\n    </bizLocation>\r\n    <extension>              \r\n        <quantityList>\r\n            <quantityElement> \r\n                <epcClass>${\r\n                  data.seafoodID\r\n                }</epcClass> <!-- #10 GDST KDE Seafood Identifier -->\r\n                <quantity>${\r\n                  data.seafoodQuantity\r\n                }</quantity> <!-- #11 GDST KDE Weight/Commodity -->\r\n                <uom>${parseUom(data.seafoodUOM)}</uom> <!-- SIMP UOM is KG -->\r\n            </quantityElement>\r\n        </quantityList>\r\n        <ilmd>\r\n            <cbvmda:vesselCatchInformationList> <!--  Attach GDST KDEs to unique Catch Event -->\r\n                <vesselCatchInformation>\r\n                    <vesselOperator>${\r\n                      data.vesselOperator\r\n                    }</vesselOperator> <!-- #24 GDST KDE Vessel Ownership -->\r\n                    <vesselID>${data.vesselID}</vesselID>\r\n                    <vesselRegistration>${\r\n                      data.vesselRegistration\r\n                    }</vesselRegistration>\r\n                    <vesselName>${data.vesselName}</vesselName>\r\n                    <vesselFlagState>${data.vesselFlagState}</vesselFlagState>\r\n                    <catchArea>${\r\n                      data.catchAreaFAO\r\n                    }</catchArea> <!-- #7 GDST KDE FAO Catch Area -->\r\n                    <fishingGearTypeCode>${\r\n                      data.fishingGearTypeCode\r\n                    }</fishingGearTypeCode> <!-- #5 GDST KDE Gear Type Code -->\r\n                </vesselCatchInformation>\r\n            </cbvmda:vesselCatchInformationList>\r\n            <cbvmda:productionMethodCode>${\r\n              data.productionMethodCode\r\n            }</cbvmda:productionMethodCode> <!-- SIMP Source Type Code \"HCF\" -->\r\n            <cbvmda:harvestStartDate>${\r\n              data.harvestStartDate\r\n            }</cbvmda:harvestStartDate> <!-- #8 & 9 GDST KDE Date of Capture -->\r\n            <cbvmda:harvestEndDate>${\r\n              data.harvestEndDate\r\n            }</cbvmda:harvestEndDate> <!-- #8 & 9 GDST KDE Date of Capture -->\r\n            <cbvmda:certificationList> <!-- CERTIFICATES -->\r\n                <certification>\r\n                    <certificationStandard>MSC</certificationStandard>\r\n                    <certificationIdentification>${\r\n                      data.mscCertification\r\n                    }</certificationIdentification>\r\n                </certification>\r\n                <certification>\r\n                    <certificationStandard>${\r\n                      data.landingAuthority\r\n                    }</certificationStandard>\r\n                    <certificationIdentification>${\r\n                      data.landingAuthorization\r\n                    }</certificationIdentification>\r\n                </certification>\r\n            </cbvmda:certificationList>\r\n            <cbvmda:unloadingPort>${data.unloadingPort}</cbvmda:unloadingPort>\r\n            <gdst:landingDateStart>${\r\n              data.landingDateStart\r\n            }</gdst:landingDateStart>\r\n            <gdst:landingDateEnd>${data.landingDateEnd}</gdst:landingDateEnd>\r\n            <gdst:harvestCertification>${\r\n              data.harvestCertification\r\n            }</gdst:harvestCertification>\r\n            <gdst:harvestCertificationCoC>${\r\n              data.harvestCertificationCoC\r\n            }</gdst:harvestCertificationCoC>\r\n            <gdst:FIP>${data.FIP}</gdst:FIP>\r\n            <gdst:ISSF>${data.ISSF}</gdst:ISSF>\r\n            <gdst:ratingsScore>${data.ratingsScore}</gdst:ratingsScore>\r\n            <gdst:ratingsScheme>${data.ratingsScheme}</gdst:ratingsScheme>\r\n            <gdst:vesselTransponder>${\r\n              data.vesselTransponder\r\n            }</gdst:vesselTransponder>\r\n            <gdst:vesselRegistryLink>${\r\n              data.vesselRegistryLink\r\n            }</gdst:vesselRegistryLink>\r\n        </ilmd>\r\n    </extension>\r\n    <!-- EXTENSION -->\r\n    <gdst:visibilityEvent>${\r\n      data.visibilityEvent\r\n    }</gdst:visibilityEvent> <!-- Visibility Data -->\r\n    <gdst:productOwner>${\r\n      data.productOwnerV1\r\n    }</gdst:productOwner> <!-- Product Owner -->\r\n    <cbvmda:informationProvider>${\r\n      data.informationProviderID\r\n    }</cbvmda:informationProvider> <!-- Submitter of Data -->\r\n</ObjectEvent>\r\n`\r\n\r\nexport const createProcessEvent = (data: CsvCatchProcessPayloadFields) => `\r\n<extension> <!-- V2 Process Into Loins -->\r\n    <TransformationEvent>\r\n        <eventTime>${data.eventDateV2}</eventTime>\r\n        <eventTimeZoneOffset>${data.eventTimeZoneOffsetV2}</eventTimeZoneOffset>\r\n        <inputQuantityList>\r\n            <quantityElement> \r\n                <epcClass>${data.inputSeafoodID}</epcClass>\r\n                <quantity>${data.inputSeafoodQuantity}</quantity>\r\n                <uom>${parseUom(data.inputSeafoodUOM)}</uom>\r\n            </quantityElement>\r\n        </inputQuantityList>\r\n        <outputQuantityList>\r\n            <quantityElement>\r\n                <epcClass>${data.outputProductID}</epcClass> \r\n                <quantity>${data.outputQuantity}</quantity>\r\n                <uom>${parseUom(data.outputUOM)}</uom>\r\n            </quantityElement>\r\n        </outputQuantityList> \r\n        <bizStep>urn:epcglobal:cbv:bizstep:commissioning</bizStep>\r\n        <disposition>urn:epcglobal:cbv:disp:active</disposition>\r\n        <readPoint>\r\n            <id>${\r\n              data.readPointV2\r\n            }</id> <!-- Actual Location where event is captured -->\r\n        </readPoint>\r\n        <bizLocation>\r\n            <id>${data.bizLocationV2}</id> <!-- Processor Location -->\r\n        </bizLocation>\r\n        <ilmd> <!-- Master Data Related to a specific production lot -->\r\n            <cbvmda:lotNumber>${data.lotNumber}</cbvmda:lotNumber>\r\n            <cbvmda:productionDate>${\r\n              data.productionDate\r\n            }</cbvmda:productionDate>\r\n            <cbvmda:bestbeforeDate>${\r\n              data.bestBeforeDate\r\n            }</cbvmda:bestbeforeDate>\r\n            <cbvmda:storageStateCode>${\r\n              data.storageStateCode\r\n            }</cbvmda:storageStateCode>\r\n            <cbvmda:firstFreezeDate>${\r\n              data.firstFreezeDate\r\n            }</cbvmda:firstFreezeDate>\r\n            <cbvmda:countryOfOrigin>${\r\n              data.countryOfOrigin\r\n            }</cbvmda:countryOfOrigin>\r\n        </ilmd>\r\n        <!-- EXTENSION -->\r\n        <gdst:visibilityEvent>${\r\n          data.transformationVisibilityEvent\r\n        }</gdst:visibilityEvent>\r\n        <gdst:productOwner>${\r\n          data.productOwnerV3\r\n        }</gdst:productOwner> <!-- PGLN of company who owned products when event occurred. In the case of a transaction, it is the seller. -->\r\n        <cbvmda:informationProvider>${\r\n          data.informationProviderID\r\n        }</cbvmda:informationProvider> <!-- PGLN of company who input the data. -->\r\n    </TransformationEvent>\r\n</extension>\r\n`\r\n","import { DateTime } from 'luxon'\r\nimport {\r\n  createSender,\r\n  createReceiver,\r\n  createFishVocab,\r\n  createOutputProductVocab,\r\n  createLocationVocab,\r\n  createFishCatchEvent,\r\n  createProcessEvent\r\n} from '.'\r\n\r\nexport const createSingleCatchAndProcessXml = async (\r\n  data: CsvCatchProcessPayloadFields\r\n) => {\r\n  const dt = DateTime.local()\r\n  const creationDate = dt.toISO()\r\n  // const { latitude, longitude } = (await getCoordinate()) as any;\r\n  // const quantityElementList = generateQuantityElementList(\r\n  //   fishCode,\r\n  //   quantityList\r\n  // );\r\n  // const vesselCaptainName = upper(`${lastName}_${firstName}`, \",\");\r\n  // const productionMethodCode = productionMethodCodeMap[productionMethod];\r\n  // const vesselID = upper(vesselIdType) + \".\" + vesselIdString;\r\n  // const vesselFlagState = upper(language);\r\n  return `\r\n<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:1\" \r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n    xmlns:sbdh=\"http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader\" schemaVersion=\"0\" creationDate=\"2001-12-17T09:30:47Z\" \r\n    xsi:schemaLocation=\"urn:epcglobal:epcis:xsd:1  http://www.gs1si.org/BMS/epcis/1_2/EPCglobal-epcis-1_2.xsd\" \r\n    xmlns:cbvmda=\"urn:epcglobal:cbv:mda\"\r\n    xmlns:gdst=\"https://traceability-dialogue.org/epcis\">\r\n    <EPCISHeader>\r\n        <sbdh:StandardBusinessDocumentHeader>\r\n            <sbdh:HeaderVersion>1.0</sbdh:HeaderVersion>\r\n\r\n            ${createSender(data)}\r\n\r\n            ${createReceiver(data)}\r\n\r\n            <sbdh:DocumentIdentification> <!-- Meets minimum GDST Wild Caught BUL KDE 4.0 and CTEs  -->\r\n                <sbdh:Standard>GDST</sbdh:Standard> \r\n                <sbdh:TypeVersion>4.0</sbdh:TypeVersion>\r\n                <sbdh:Type>Wild</sbdh:Type>\r\n                <sbdh:CreationDateAndTime>${creationDate}</sbdh:CreationDateAndTime>\r\n            </sbdh:DocumentIdentification>\r\n        </sbdh:StandardBusinessDocumentHeader>\r\n        <extension>\r\n            <EPCISMasterData>\r\n                <VocabularyList> \r\n                    <Vocabulary type=\"urn:epcglobal:epcis:vtype:EPCClass\">\r\n                        <VocabularyElementList>\r\n                            ${createFishVocab(data)}\r\n\r\n                            ${createOutputProductVocab(data)}\r\n                        </VocabularyElementList>\r\n                    </Vocabulary>\r\n                    <Vocabulary type=\"urn:epcglobal:epcis:vtype:Location\">\r\n                        <VocabularyElementList>\r\n                            ${createLocationVocab(data)}    \r\n                        </VocabularyElementList>\r\n                    </Vocabulary>           \r\n                </VocabularyList>\r\n            </EPCISMasterData>\r\n        </extension>\r\n    </EPCISHeader>\r\n        <EPCISBody>\r\n        <EventList>\r\n            ${createFishCatchEvent(data)}\r\n            ${createProcessEvent(data)}\r\n        </EventList>\r\n    </EPCISBody>\r\n</epcis:EPCISDocument>\r\n`\r\n}\r\n\r\nexport const createAggregatedCatchAndProcessXml = async (dataList: [CsvCatchProcessPayloadFields]) => {\r\n  const dt = DateTime.local()\r\n  const creationDate = dt.toISO()\r\n  // Use the 1st row for sender and receiver\r\n  const {\r\n    informationProviderID,\r\n    informationProviderContactName,\r\n    informationProviderEmail,\r\n    destinationID,\r\n    destinationContactName,\r\n    destinationEmail\r\n  } = dataList[0]\r\n  const fishIdSet = new Set()\r\n  const fishVocabList = dataList.filter(({ seafoodID }) => {\r\n    if (fishIdSet.has(seafoodID)) return false\r\n    fishIdSet.add(seafoodID)\r\n    return true\r\n  })\r\n  const outputProductIdSet = new Set()\r\n  const outputProductVocabList = dataList.filter(({ outputProductID }) => {\r\n    if (outputProductIdSet.has(outputProductID)) return false\r\n    outputProductIdSet.add(outputProductID)\r\n    return true\r\n  })\r\n  /**\r\n     *\r\n        id: processorID,\r\n        informationProvider: informationProviderID,\r\n        name: processorOwnerName,\r\n        streetAddressOne: processorAddress1,\r\n        streetAddressTwo: processorAddress2,\r\n        city: processorCity,\r\n        state: processorState,\r\n        postalCode: processorPostalCode,\r\n        countryCode: processorCountryCode,\r\n        contact: processorContactName,\r\n        email: processorContactEmail\r\n     */\r\n  const locationIdSet = new Set()\r\n  const locationVocabList = dataList.filter(({ processorID }) => {\r\n    if (locationIdSet.has(processorID)) return false\r\n    locationIdSet.add(processorID)\r\n    return true\r\n  })\r\n  return `\r\n<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:1\" \r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n    xmlns:sbdh=\"http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader\" schemaVersion=\"1.2\" creationDate=\"2001-12-17T09:30:47Z\" \r\n    xsi:schemaLocation=\"urn:epcglobal:epcis:xsd:1  http://www.gs1si.org/BMS/epcis/1_2/EPCglobal-epcis-1_2.xsd\" \r\n    xmlns:cbvmda=\"urn:epcglobal:cbv:mda\"\r\n    xmlns:gdst=\"https://traceability-dialogue.org/epcis\">\r\n    <EPCISHeader>\r\n        <sbdh:StandardBusinessDocumentHeader>\r\n            <sbdh:HeaderVersion>1.0</sbdh:HeaderVersion>\r\n\r\n            ${createSender({\r\n              informationProviderID,\r\n              informationProviderContactName,\r\n              informationProviderEmail\r\n            })}\r\n\r\n            ${createReceiver({\r\n              destinationID,\r\n              destinationContactName,\r\n              destinationEmail\r\n            })}\r\n\r\n            <sbdh:DocumentIdentification> <!-- Meets minimum GDST Wild Caught BUL KDE 4.0 and CTEs  -->\r\n                <sbdh:Standard>GDST</sbdh:Standard> \r\n                <sbdh:TypeVersion>4.0</sbdh:TypeVersion>\r\n                <sbdh:InstanceIdentifier>100002</sbdh:InstanceIdentifier>\r\n                <sbdh:Type>Wild</sbdh:Type>\r\n                <sbdh:CreationDateAndTime>${creationDate}</sbdh:CreationDateAndTime>\r\n            </sbdh:DocumentIdentification>\r\n        </sbdh:StandardBusinessDocumentHeader>\r\n        <extension>\r\n            <EPCISMasterData>\r\n                <VocabularyList> \r\n                    <Vocabulary type=\"urn:epcglobal:epcis:vtype:EPCClass\">\r\n                        <VocabularyElementList>\r\n\r\n                            ${fishVocabList.map(createFishVocab).join('\\n')}\r\n\r\n                            ${outputProductVocabList\r\n                              .map(createOutputProductVocab)\r\n                              .join('\\n')}\r\n\r\n                        </VocabularyElementList>\r\n                    </Vocabulary>\r\n                    <Vocabulary type=\"urn:epcglobal:epcis:vtype:Location\">\r\n                        <VocabularyElementList>\r\n                            ${locationVocabList\r\n                              .map(createLocationVocab)\r\n                              .join('\\n')}\r\n                        </VocabularyElementList>\r\n                    </Vocabulary>           \r\n                </VocabularyList>\r\n            </EPCISMasterData>\r\n        </extension>\r\n    </EPCISHeader>\r\n        <EPCISBody>\r\n        <EventList>\r\n            ${dataList.map(createFishCatchEvent).join('\\n')}\r\n\r\n            ${dataList.map(createProcessEvent).join('\\n')}\r\n            </EventList>\r\n    </EPCISBody>\r\n</epcis:EPCISDocument>\r\n`\r\n}\r\n","import { parseUom } from '.'\r\n\r\nconst createSingleAggregationDisaggregationEvent = (\r\n  d: CsvAggregationDisaggregationPayloadFields\r\n) => {\r\n  return `                         \r\n<AggregationEvent>\r\n    <eventTime>${d.eventTime}</eventTime>\r\n    <eventTimeZoneOffset>${d.eventTimeZoneOffset}</eventTimeZoneOffset>\r\n    <parentID>${d.parentEPC}</parentID>\r\n    <childEPCs>\r\n    </childEPCs>\r\n    <action>${d.action}</action>\r\n    <bizStep>urn:epcglobal:cbv:bizstep:${\r\n      d.action === 'ADD' ? 'packing' : 'removing'\r\n    }</bizStep>\r\n    <disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\n    <readPoint>\r\n        <id>${d.readPoint}</id>\r\n    </readPoint>\r\n    <bizLocation>\r\n        <id>${d.bizLocation}</id>\r\n    </bizLocation>\r\n    <extension>\r\n        <childQuantityList>\r\n            <quantityElement>\r\n                <epcClass>${d.childEPC}</epcClass>\r\n                <quantity>${d.quantity}</quantity>\r\n                <uom>${parseUom(d.unitOfMeasure)}</uom>\r\n            </quantityElement>\r\n        </childQuantityList>\r\n    </extension>\r\n\r\n    <!-- EXTENSION -->\r\n    <gdst:visibilityEvent>${\r\n      d.action === 'ADD' ? 'Aggregate' : 'Disaggregate'\r\n    }</gdst:visibilityEvent>    \r\n    <gdst:productOwner>${d.productOwner}</gdst:productOwner>\r\n    <cbvmda:informationProvider>${\r\n      d.informationProvider\r\n    }</cbvmda:informationProvider>\r\n</AggregationEvent>`\r\n}\r\n\r\nexport const createAggregatedAggregationDisaggregationXml = async (\r\n  dList: [CsvAggregationDisaggregationPayloadFields]\r\n) => {\r\n  const d = dList[0]\r\n  return `<!-- GDST Basic Interoperability CSV File Nemo Converter - Aggregation / Disaggregation -->\r\n<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:1\" \r\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n      xmlns:sbdh=\"http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader\" \r\n      schemaVersion=\"0\" \r\n      creationDate=\"2001-12-17T09:30:47Z\" \r\n      xsi:schemaLocation=\"urn:epcglobal:epcis:xsd:1  http://www.gs1si.org/BMS/epcis/1_2/EPCglobal-epcis-1_2.xsd\" \r\n      xmlns:cbvmda=\"urn:epcglobal:cbv:mda\"\r\n      xmlns:gdst=\"https://traceability-dialogue.org/epcis\">\r\n      <EPCISHeader>\r\n          <sbdh:StandardBusinessDocumentHeader>\r\n              <sbdh:HeaderVersion>1.0</sbdh:HeaderVersion>\r\n              <sbdh:Sender>\r\n                  <sbdh:Identifier>${\r\n                    d.informationProviderID\r\n                  }</sbdh:Identifier><!-- Sending Entity -->\r\n                  <sbdh:ContactInformation>\r\n                      <sbdh:Contact>${\r\n                        d.informationProviderContact\r\n                      }</sbdh:Contact>\r\n                      <sbdh:EmailAddress>${\r\n                        d.informationProviderEmail\r\n                      }</sbdh:EmailAddress>\r\n                  </sbdh:ContactInformation>\r\n              </sbdh:Sender>\r\n              <sbdh:Receiver>\r\n                  <sbdh:Identifier>${\r\n                    d.informationReceiverID\r\n                  }</sbdh:Identifier>                <!-- Receiving Entity -->\r\n                  <sbdh:ContactInformation>\r\n                      <sbdh:Contact>${\r\n                        d.informationReceiverContact\r\n                      }</sbdh:Contact>\r\n                      <sbdh:EmailAddress>${\r\n                        d.informationReceiverEmail\r\n                      }</sbdh:EmailAddress>\r\n                  </sbdh:ContactInformation>\r\n              </sbdh:Receiver>\r\n              <sbdh:DocumentIdentification>\r\n                  <sbdh:Standard>GS1</sbdh:Standard>\r\n                  <sbdh:TypeVersion>3.0</sbdh:TypeVersion>\r\n                  <sbdh:InstanceIdentifier>9999</sbdh:InstanceIdentifier>\r\n                  <sbdh:Type>Seafood Traceability</sbdh:Type>\r\n                  <sbdh:MultipleType>false</sbdh:MultipleType>\r\n                  <sbdh:CreationDateAndTime>2016-12-15T11:11:52+08:00</sbdh:CreationDateAndTime>\r\n              </sbdh:DocumentIdentification>\r\n          </sbdh:StandardBusinessDocumentHeader>\r\n          <extension>\r\n              <EPCISMasterData>\r\n                  <VocabularyList>\r\n                      <Vocabulary type=\"urn:epcglobal:epcis:vtype:EPCClass\">\r\n                          <VocabularyElementList>\r\n                              <VocabularyElement id=\"${d.childEPC}\">\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#informationProvider\">${\r\n                                    d.informationProviderChild\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#speciesForFisheryStatisticsPurposesCode\">${\r\n                                    d.speciesCodeChild\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#speciesForFisheryStatisticsPurposesName\">${\r\n                                    d.speciesNameChild\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#descriptionShort\">${\r\n                                    d.descriptionShortChild\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#tradeItemConditionCode\">${\r\n                                    d.itemConditionCodeChild\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#tradeItemConditionCode\">${\r\n                                    d.itemConditionCodeParent\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#additionalTradeItemIdentification\">${\r\n                                    d.additionalTradeItemIdentificationParent\r\n                                  }</attribute>\r\n                              </VocabularyElement>\r\n                          </VocabularyElementList>\r\n                      </Vocabulary>\r\n                      <Vocabulary type=\"urn:epcglobal:epcis:vtype:Location\">\r\n                          <VocabularyElementList>\r\n                              <VocabularyElement id=\"${d.location}\">\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#informationProvider\">${\r\n                                    d.informationProvider\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#name\">${\r\n                                    d.name\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#partyIDTypeCode\">${\r\n                                    d.partyIDTypeCode\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#additionalPartyID\">${\r\n                                    d.additionalPartyID\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#streetAddressOne\">${\r\n                                    d.streetAddressOne\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#streetAddressTwo\">${\r\n                                    d.streetAddressTwo\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#city\">${\r\n                                    d.city\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#state\">${\r\n                                    d.state\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#postalCode\">${\r\n                                    d.postalCode\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#countryCode\">${\r\n                                    d.countryCode\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#latitude\">${\r\n                                    d.latitude\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#longitude\">${\r\n                                    d.longitude\r\n                                  }</attribute>\r\n                                  <attribute id=\"unr:epcglobal:cbv:mda#contact\">${\r\n                                    d.contact\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#telephone\">${\r\n                                    d.telephone\r\n                                  }</attribute>\r\n                                  <attribute id=\"urn:epcglobal:cbv:mda#email\">${\r\n                                    d.email\r\n                                  }</attribute>\r\n                              </VocabularyElement>\r\n  \r\n                          </VocabularyElementList>\r\n                      </Vocabulary>\r\n                  </VocabularyList>\r\n              </EPCISMasterData>\r\n          </extension>\r\n      </EPCISHeader>\r\n      <EPCISBody>\r\n          <EventList>\r\n            ${dList.map(createSingleAggregationDisaggregationEvent).join('\\n')}\r\n          </EventList>\r\n      </EPCISBody>\r\n</epcis:EPCISDocument>\r\n`\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { DateTime } from 'luxon'\r\n\r\nimport FileDrop from 'react-file-drop'\r\nimport { FillButton, Divider } from '../_theme'\r\n\r\nimport fileReaderStream from 'filereader-stream'\r\nimport neatCsv from 'neat-csv'\r\nimport {\r\n  csvAggregatedCatchProcessHeader,\r\n  csvAggregationDisaggregationHeader,\r\n  csvShipReceiveHeader\r\n} from '../api/csvToXml/csvHeader'\r\nimport {\r\n  createSingleCatchAndProcessXml,\r\n  createAggregatedCatchAndProcessXml\r\n} from '../api/csvToXml/catchAndProcessXml'\r\nimport { Accordion, AccordionPanel, Box, Heading } from 'grommet'\r\nimport { Grommet } from 'grommet'\r\nimport { grommet } from 'grommet/themes'\r\nimport api from '../api'\r\nimport { saveAs } from 'file-saver'\r\nimport { createAggregatedAggregationDisaggregationXml } from '../api/csvToXml/aggregationDisaggregationXml'\r\nimport { createShipReceiveXml } from '../api/csvToXml/shipReceiveXml'\r\n\r\ntype SentStateType = 'default' | 'sending' | 'sent'\r\n\r\nconst StyledGrommet = styled(Grommet)`\r\n  width: 100%;\r\n`\r\n\r\nconst DataContainer = styled.div`\r\n  max-height: 30vh;\r\n  overflow-y: auto;\r\n`\r\n\r\nexport const FileDropContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\n\r\nconst HiddenFileDropContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  .file-drop {\r\n    /* relatively position the container bc the contents are absolute */\r\n    position: relative;\r\n    height: 100px;\r\n    width: 100%;\r\n    border: 2px dashed;\r\n  }\r\n\r\n  .file-drop > .file-drop-target {\r\n    cursor: pointer;\r\n\r\n    /* basic styles */\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 2px;\r\n    /* --------------- */\r\n\r\n    /* horizontally and vertically center all content */\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    justify-content: center;\r\n    align-content: center;\r\n    text-align: center;\r\n    /* --------------- */\r\n  }\r\n\r\n  .file-drop > .file-drop-target.file-drop-dragging-over-frame {\r\n    /* overlay a black mask when dragging over the frame */\r\n    border: none;\r\n    background-color: ${p => p.theme.userFontColor};\r\n    box-shadow: none;\r\n    z-index: 50;\r\n    opacity: 1;\r\n    /* --------------- */\r\n\r\n    /* typography */\r\n    color: white;\r\n    /* --------------- */\r\n  }\r\n\r\n  .file-drop > .file-drop-target.file-drop-dragging-over-target {\r\n    /* turn stuff orange when we are dragging over the target */\r\n    color: ${p => p.theme.headerBgColor};\r\n    box-shadow: 0 0 13px 3px ${p => p.theme.headerBgColor};\r\n  }\r\n`\r\n\r\nconst HiddenFileInput = styled.div`\r\n  display: none;\r\n`\r\n\r\nconst FileDropText = styled.div`\r\n  padding: 1em;\r\n`\r\n\r\nconst AccordionContent = styled(Box)`\r\n  height: 20vh;\r\n  overflow-y: auto;\r\n`\r\n\r\nconst CodeContainer = styled.code`\r\n  white-space: pre-wrap;\r\n  font-size: smaller;\r\n`\r\n\r\nexport const XmlDownloadButton = ({\r\n  disabled = false,\r\n  fileLabel,\r\n  xml = '',\r\n  downloadText = 'Download Aggregated XML'\r\n}) => (\r\n  <FillButton\r\n    background={'limegreen'}\r\n    disabled={disabled}\r\n    onClick={() => {\r\n      const blob = new Blob([xml], {\r\n        type: 'application/xml;charet=ustf-8'\r\n      })\r\n      const dt = DateTime.local()\r\n\r\n      const creationDate = dt.toISO()\r\n\r\n      saveAs(blob, `GDST-EPCIS-${fileLabel}-${creationDate}.xml`)\r\n    }}>\r\n    {downloadText}\r\n  </FillButton>\r\n)\r\n\r\nconst AggregatedXmlDownload = ({\r\n  disabled,\r\n  fileLabel,\r\n  eventCount = 0,\r\n  aggregatedXml = null\r\n}) => {\r\n  return (\r\n    aggregatedXml && (\r\n      <>\r\n        <Accordion margin=\"small\">\r\n          <AccordionPanel label={`Total ${eventCount} EPCIS Events`}>\r\n            <AccordionContent>\r\n              <CodeContainer>{aggregatedXml}</CodeContainer>\r\n            </AccordionContent>\r\n          </AccordionPanel>\r\n        </Accordion>\r\n\r\n        <XmlDownloadButton\r\n          fileLabel={fileLabel}\r\n          xml={aggregatedXml}\r\n          disabled={disabled}\r\n        />\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nconst EpcisEventList = ({ epcisXmlList = [] }) => {\r\n  const [sent, setSent] = useState<SentStateType>('default')\r\n\r\n  const onSubmit = async () => {\r\n    setSent('sending')\r\n    await Promise.all(epcisXmlList.map(api.freepcis.sendCatchEvent))\r\n    setSent('sent')\r\n  }\r\n\r\n  return (\r\n    epcisXmlList.length > 0 && (\r\n      <>\r\n        <Heading size=\"small\" level={2}>\r\n          {epcisXmlList.length} event{epcisXmlList.length > 0 && 's'} found:\r\n        </Heading>\r\n        <DataContainer>\r\n          <Accordion multiple margin=\"small\">\r\n            {epcisXmlList.map((d, i) => (\r\n              <AccordionPanel key={i} label={`Event #${i + 1}`}>\r\n                <AccordionContent>\r\n                  <CodeContainer>{d}</CodeContainer>\r\n                </AccordionContent>\r\n              </AccordionPanel>\r\n            ))}\r\n          </Accordion>\r\n        </DataContainer>\r\n\r\n        <Divider />\r\n        <FillButton disabled={sent !== 'default'} onClick={onSubmit}>\r\n          {sent === 'sending'\r\n            ? 'Sending...'\r\n            : sent === 'sent'\r\n            ? 'Data sent!'\r\n            : 'Send to FreEPCIS'}\r\n        </FillButton>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport const CsvFileDrop = ({\r\n  processFile,\r\n  dropText = 'Drop your CSV file here, or tap the box to select a file.',\r\n  className=''\r\n}) => {\r\n  const fileInputRef = useRef(null)\r\n\r\n  return (\r\n    <HiddenFileDropContainer onClick={() => fileInputRef.current.click()} className={className}>\r\n      <FileDrop onDrop={processFile}>\r\n        <FileDropText>{dropText}</FileDropText>\r\n      </FileDrop>\r\n      <HiddenFileInput>\r\n        <input\r\n          ref={fileInputRef}\r\n          accept=\".csv\"\r\n          type=\"file\"\r\n          onChange={evt => {\r\n            processFile(evt.target.files)\r\n          }}\r\n        />\r\n      </HiddenFileInput>\r\n    </HiddenFileDropContainer>\r\n  )\r\n}\r\n\r\nexport const CsvFileInput = ({\r\n  triggerNextStep,\r\n  singleParser,\r\n  aggregatedParser,\r\n  fileLabel,\r\n  headers\r\n}: any) => {\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const [epcisXmlList, setEpcisXmlList] = useState([])\r\n\r\n  const [aggregatedXml, setAggregatedXml] = useState(null)\r\n\r\n  const [eventCount, setEventCount] = useState(0)\r\n\r\n  const processFile = async ([file]: any) => {\r\n    if (!file) return\r\n\r\n    if (file.name.split('.').pop() !== 'csv') {\r\n      return\r\n    }\r\n\r\n    const readerStream = fileReaderStream(file)\r\n    const [, ...csvRowList] = (await neatCsv(readerStream, {\r\n      headers\r\n    })) as any\r\n\r\n    console.log(csvRowList)\r\n    if (singleParser) {\r\n      setEpcisXmlList(await Promise.all(csvRowList.map(singleParser)))\r\n    }\r\n\r\n    if (aggregatedParser) {\r\n      setAggregatedXml(await aggregatedParser(csvRowList))\r\n      setEventCount(csvRowList.length)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FileDropContainer>\r\n      {!disabled && (\r\n        <>\r\n          <CsvFileDrop processFile={processFile} />\r\n          <StyledGrommet theme={grommet}>\r\n            <EpcisEventList epcisXmlList={epcisXmlList} />\r\n\r\n            <AggregatedXmlDownload\r\n              disabled={disabled}\r\n              fileLabel={fileLabel}\r\n              eventCount={eventCount}\r\n              aggregatedXml={aggregatedXml}\r\n            />\r\n          </StyledGrommet>\r\n        </>\r\n      )}\r\n\r\n      <FillButton\r\n        disabled={disabled}\r\n        onClick={() => {\r\n          setDisabled(true)\r\n          triggerNextStep()\r\n        }}>\r\n        Finalize\r\n      </FillButton>\r\n    </FileDropContainer>\r\n  )\r\n}\r\n\r\nexport const CatchAndProcessCsvInput = props => (\r\n  <CsvFileInput\r\n    singleParser={createSingleCatchAndProcessXml}\r\n    aggregatedParser={createAggregatedCatchAndProcessXml}\r\n    fileLabel=\"CatchAndProcess\"\r\n    headers={csvAggregatedCatchProcessHeader}\r\n    {...props}\r\n  />\r\n)\r\n\r\nexport const AggregationDisaggregationCsvInput = props => (\r\n  <CsvFileInput\r\n    aggregatedParser={createAggregatedAggregationDisaggregationXml}\r\n    fileLabel=\"AggregationDisaggregation\"\r\n    headers={csvAggregationDisaggregationHeader}\r\n    {...props}\r\n  />\r\n)\r\n\r\nexport const ShipReceiveCsvInput = props => (\r\n  <CsvFileInput\r\n    aggregatedParser={createShipReceiveXml}\r\n    fileLabel=\"ShipReceive\"\r\n    headers={csvShipReceiveHeader}\r\n    {...props}\r\n  />\r\n)\r\n","import React from \"react\";\r\nimport { createPromptArray } from \"../core/utils\";\r\nimport { CsvFileInput } from \"../components/CsvFileInput\";\r\n\r\nconst promptOrder = [\r\n  \"prompt_test\",\r\n\r\n  \"comp_test\",\r\n  \r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nconst promptStructure = {\r\n  comp_test: {\r\n    component: <CsvFileInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  }\r\n} as any;\r\n\r\nexport const createTestPrompt = () =>\r\n  createPromptArray(promptOrder, promptStructure);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nimport { RpcError } from \"eosjs\";\r\n\r\nimport {\r\n  StyledColumn,\r\n  StyledColumnForm,\r\n  LabeledInput,\r\n  FillButton,\r\n  Divider,\r\n  StyledLabel,\r\n} from \"../_theme\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { dappVault, claimCatchEvent } from \"../api/dapp\";\r\nimport { useIpfs } from \"../hooks/use-ipfs\";\r\nimport api from \"../api\";\r\n\r\n// const debug = require(\"debug\")(\"DappProducerReceiveInput\");\r\n\r\ninterface TestInputFields {\r\n  verifyId: string;\r\n  apiUrl: string;\r\n  txId: number;\r\n}\r\n\r\nconst Container = styled(StyledColumn)`\r\n  word-break: break-word;\r\n  margin: 0.5em;\r\n`;\r\n\r\nconst EpcisDataContainer = styled.div`\r\n  overflow: scroll;\r\n  height: 30vh;\r\n`;\r\n\r\nconst EpcisDataViewer = styled.code`\r\n  font-size: 10px;\r\n`;\r\n\r\nexport const DappProducerReceiveInput = ({\r\n  triggerNextStep,\r\n  previousStep\r\n}: any) => {\r\n  const { apiUrl } = dappVault;\r\n\r\n  const { ipfs, isIpfsReady, ipfsInitError } = useIpfs();\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [formState, { text }] = useFormState<TestInputFields>({\r\n    apiUrl\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const [epcisData, setEpcisData] = useState(\"\");\r\n  const [receiptId, setReceiptId] = useState(\"\");\r\n\r\n  const onFinish = async (event: any) => {\r\n    event.preventDefault();\r\n    setDisabled(true);\r\n    triggerNextStep();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {isIpfsReady && (\r\n        <StyledColumnForm\r\n          onSubmit={async event => {\r\n            event.preventDefault();\r\n\r\n            try {\r\n              const catchResult = await claimCatchEvent(formState.values, ipfs);\r\n\r\n              setReceiptId(catchResult.originId);\r\n              setEpcisData(catchResult.epcisData);\r\n\r\n              setSuccess(\"sent\");\r\n              // setSuccess(`IPFS URL: ${nemoTx.data.str}`);\r\n            } catch (err) {\r\n              console.error(err);\r\n              if (err instanceof RpcError) {\r\n                console.log(JSON.stringify(err.json, null, 2));\r\n              } \r\n              setError(err.message);\r\n            }\r\n          }}\r\n        >\r\n          <LabeledInput\r\n            label={\"API\"}\r\n            disabled={disabled}\r\n            required\r\n            {...text(\"apiUrl\")}\r\n            placeholder={\"find a p2p server . . .\"}\r\n          />\r\n\r\n          <LabeledInput\r\n            disabled={disabled}\r\n            label={\"ID\"}\r\n            required\r\n            {...text(\"txId\")}\r\n            placeholder={\"put ID from table here . . .\"}\r\n          />\r\n\r\n          {/* <LabeledInput\r\n            disabled={disabled}\r\n            label={\"CODE\"}\r\n            {...text(\"verifyId\")}\r\n            placeholder={\"(optional) Claim Code\"}\r\n          /> */}\r\n\r\n          <FillButton disabled={disabled}>Pay and Claim</FillButton>\r\n        </StyledColumnForm>\r\n      )}\r\n      <div style={{ color: \"red\" }}>\r\n        {error.length > 0 && <span>ERROR: {error}</span>}\r\n        {ipfsInitError && (\r\n          <span>ERROR: {ipfsInitError.message || ipfsInitError}</span>\r\n        )}\r\n      </div>\r\n      {success.length > 0 && (\r\n        <div>\r\n          <StyledLabel>\r\n            Paid and claimed. Will take ~3 minutes for it to register -\r\n          </StyledLabel>\r\n          <a\r\n            href=\"https://jungle.eosweb.net/account/nemoeosmark1\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\" \r\n          >\r\n            https://jungle.eosweb.net/account/nemoeosmark1\r\n          </a>\r\n          <Divider />\r\n          <StyledLabel> Check your balance here: </StyledLabel>\r\n          <a\r\n            href=\"https://jungle.eosweb.net/account/nemotestero4\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\" \r\n          >\r\n            https://jungle.eosweb.net/account/nemotestero4\r\n          </a>\r\n          <Divider />\r\n          <StyledLabel> Here is your Receipt ID: </StyledLabel>\r\n          <br />\r\n          {receiptId}\r\n          <br />\r\n          <FillButton onClick={() => copy(receiptId)}>\r\n            Click to Copy Receipt ID\r\n          </FillButton>\r\n          <Divider />\r\n          <StyledLabel> Here is the EPCIS data: </StyledLabel>\r\n\r\n          <EpcisDataContainer>\r\n            <EpcisDataViewer>{epcisData}</EpcisDataViewer>\r\n          </EpcisDataContainer>\r\n\r\n          <FillButton onClick={() => copy(epcisData)}>\r\n            Click to Copy EPCIS\r\n          </FillButton>\r\n          <FillButton\r\n            disabled={disabled}\r\n            onClick={async e => {\r\n              e.preventDefault();\r\n              setDisabled(true);\r\n              await api.freepcis.sendCatchEvent(epcisData);\r\n              triggerNextStep();\r\n            }}\r\n          >\r\n            Send to FreEPCIS\r\n          </FillButton>\r\n        </div>\r\n      )}\r\n      <FillButton\r\n        background=\"red\"\r\n        disabled={disabled}\r\n        onClick={onFinish}\r\n      >\r\n        Finalize/Cancel\r\n      </FillButton>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { createPromptArray } from \"../core/utils\";\r\nimport { DappProducerReceiveInput } from \"../components/DappProducerReceiveInput\";\r\n\r\nconst promptOrder = [\r\n  \"prompt_receive\",\r\n\r\n  \"form_dappProducerReceiveInput\",\r\n\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nconst promptStructure = {\r\n  \"form_dappProducerReceiveInput\": {\r\n    component: <DappProducerReceiveInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  }\r\n} as any;\r\n\r\nexport const createReceivePrompt = () =>\r\n  createPromptArray(promptOrder, promptStructure);\r\n","import neatCsv from 'neat-csv'\r\nimport { createCsvFileReaderStream, parseUom } from '.'\r\nimport {\r\n  csvBusinessDocumentHeader,\r\n  csvEpcClassHeader,\r\n  csvLocationHeader,\r\n  csvObjectEventHeader,\r\n  csvTransformationEventHeader,\r\n  csvAggregationEventHeader\r\n} from './csvHeader'\r\nimport { DateTime } from 'luxon'\r\n\r\nconst withIgnoreError = async fx => {\r\n  try {\r\n    return fx()\r\n  } catch (error) {\r\n    console.error(error)\r\n    return ''\r\n  }\r\n}\r\n\r\nconst parseCsvColumnList = ({ csvData, index, indexKey, itemKeyList }) => {\r\n  const dataList = []\r\n\r\n  const currentData = csvData[index]\r\n\r\n  if (itemKeyList.filter(k => !!currentData[k]).length === 0) return dataList\r\n\r\n  if (index < csvData.length - 1) {\r\n    let j = 0\r\n    do {\r\n      const nextItem = csvData[index + j]\r\n      if (\r\n        itemKeyList.filter((k: string | number) => !!nextItem[k]).length > 0\r\n      ) {\r\n        const newItem = {}\r\n\r\n        itemKeyList.forEach((k: string | number) => {\r\n          newItem[k] = nextItem[k] || currentData[k]\r\n        })\r\n\r\n        dataList.push(newItem)\r\n      }\r\n      j++\r\n    } while (csvData[index + j] && !csvData[index + j][indexKey])\r\n  }\r\n  return dataList\r\n}\r\n\r\nexport const createAggregationEventXml = file =>\r\n  withIgnoreError(async () => {\r\n    const readerStream = createCsvFileReaderStream(file)\r\n    const parsedData = (await neatCsv(readerStream, {\r\n      headers: csvAggregationEventHeader,\r\n      skipLines: 5\r\n    })) as any\r\n    return parsedData\r\n      .map(\r\n        (\r\n          {\r\n            action,\r\n            bizStep,\r\n            informationProvider,\r\n            productOwner,\r\n            parentID,\r\n            eventTime,\r\n            eventTimeZoneOffset,\r\n            visibilityEvent,\r\n            disposition,\r\n            readPoint_id,\r\n            bizLocation_id,\r\n            ...rest\r\n          },\r\n          index\r\n        ) => {\r\n          if (!action || !bizStep || !eventTime || !informationProvider)\r\n            return ''\r\n\r\n          const epcItemsXml = parseCsvColumnList({\r\n            csvData: parsedData,\r\n            index,\r\n            indexKey: 'informationProvider',\r\n            itemKeyList: ['childEPCs_epc']\r\n          })\r\n            .map(d => `<epc>${d.childEPCs_epc}</epc>`)\r\n            .join('\\n')\r\n\r\n          const childEPCsXml = !!epcItemsXml\r\n            ? `<childEPCs>${epcItemsXml}</childEPCs>`\r\n            : ''\r\n\r\n          const childQuantityListItem = parseCsvColumnList({\r\n            csvData: parsedData,\r\n            index,\r\n            indexKey: 'informationProvider',\r\n            itemKeyList: [\r\n              'extension_childQuantityList_quantityElement_epcClass',\r\n              'extension_childQuantityList_quantityElement_quantity',\r\n              'extension_childQuantityList_quantityElement_uom'\r\n            ]\r\n          })\r\n            .map(\r\n              d => `<quantityElement><epcClass>${d.extension_childQuantityList_quantityElement_epcClass}</epcClass>\r\n    <quantity>${d.extension_childQuantityList_quantityElement_quantity}</quantity>\r\n    <uom>${d.extension_childQuantityList_quantityElement_uom}</uom>\r\n  </quantityElement>`\r\n            )\r\n            .join('\\n')\r\n\r\n          const childQuantityListXml = !!childQuantityListItem\r\n            ? `<childQuantityList>${childQuantityListItem}</childQuantityList>`\r\n            : ''\r\n\r\n          const extensionItemsXml = [childQuantityListXml].join('\\n')\r\n\r\n          const extensionXml = !!extensionItemsXml\r\n            ? `<extension>${extensionItemsXml}</extension>`\r\n            : ''\r\n\r\n          return `<AggregationEvent>\r\n  <eventTime>${eventTime}</eventTime> \r\n  <eventTimeZoneOffset>${eventTimeZoneOffset}</eventTimeZoneOffset>\r\n  <action>${action}</action>\r\n  <bizStep>urn:epcglobal:cbv:bizstep:${bizStep}</bizStep>\r\n  <disposition>urn:epcglobal:cbv:disp:${disposition}</disposition>\r\n  <disposition>urn:epcglobal:cbv:disp:${disposition}</disposition>\r\n  <parentID>${parentID}</parentID> <!--  Pallet ID -->\r\n\r\n  <gdst:visibilityEvent>${visibilityEvent}</gdst:visibilityEvent>\r\n  <gdst:productOwner>${productOwner}</gdst:productOwner>\r\n  <cbvmda:informationProvider>${informationProvider}</cbvmda:informationProvider> \r\n  \r\n  <readPoint><id>${readPoint_id}</id></readPoint>\r\n  <bizLocation><id>${bizLocation_id}</id></bizLocation>\r\n  ${childEPCsXml}\r\n  ${extensionXml}\r\n</AggregationEvent>`\r\n        }\r\n      )\r\n      .filter(t => !!t)\r\n      .join('\\n')\r\n  })\r\nexport const createTransformationEventXml = file =>\r\n  withIgnoreError(async () => {\r\n    const readerStream = createCsvFileReaderStream(file)\r\n    const parsedData = (await neatCsv(readerStream, {\r\n      headers: csvTransformationEventHeader,\r\n      skipLines: 4\r\n    })) as any\r\n    return parsedData\r\n      .map(\r\n        (\r\n          {\r\n            bizStep,\r\n            informationProvider,\r\n            productOwner,\r\n            eventTime,\r\n            eventTimeZoneOffset,\r\n            visibilityEvent,\r\n            disposition,\r\n            readPoint_id,\r\n            bizLocation_id,\r\n            ...rest\r\n          },\r\n          index\r\n        ) => {\r\n          if (!bizStep || !eventTime || !informationProvider) return ''\r\n\r\n          const inputQuantityItemXml = parseCsvColumnList({\r\n            csvData: parsedData,\r\n            index,\r\n            indexKey: 'informationProvider',\r\n            itemKeyList: [\r\n              'inputQuantityList_quantityElement_epcClass',\r\n              'inputQuantityList_quantityElement_quantity',\r\n              'inputQuantityList_quantityElement_uom'\r\n            ]\r\n          })\r\n            .map(\r\n              d =>\r\n                `<quantityElement> \r\n  <epcClass>${d.inputQuantityList_quantityElement_epcClass}</epcClass>\r\n  <quantity>${d.inputQuantityList_quantityElement_quantity}</quantity>\r\n  ${\r\n    d.inputQuantityList_quantityElement_uom\r\n      ? `<uom>${d.inputQuantityList_quantityElement_uom}</uom>`\r\n      : ''\r\n  }\r\n</quantityElement>`\r\n            )\r\n            .join('\\n')\r\n\r\n          const inputQuantityListXml = !!inputQuantityItemXml\r\n            ? `<inputQuantityList>${inputQuantityItemXml}</inputQuantityList>`\r\n            : ''\r\n\r\n          const outputQuantityItemXml = parseCsvColumnList({\r\n            csvData: parsedData,\r\n            index,\r\n            indexKey: 'informationProvider',\r\n            itemKeyList: [\r\n              'outputQuantityList_quantityElement_epcClass',\r\n              'outputQuantityList_quantityElement_quantity',\r\n              'outputQuantityList_quantityElement_uom'\r\n            ]\r\n          })\r\n            .map(\r\n              d =>\r\n                `<quantityElement> \r\n    <epcClass>${d.outputQuantityList_quantityElement_epcClass}</epcClass>\r\n    <quantity>${d.outputQuantityList_quantityElement_quantity}</quantity>\r\n    ${\r\n      d.outputQuantityList_quantityElement_uom\r\n        ? `<uom>${d.outputQuantityList_quantityElement_uom}</uom>`\r\n        : ''\r\n    }\r\n  </quantityElement>`\r\n            )\r\n            .join('\\n')\r\n\r\n          const outputQuantityListXml = !!outputQuantityItemXml\r\n            ? `<inputQuantityList>${outputQuantityItemXml}</inputQuantityList>`\r\n            : ''\r\n\r\n          const ilmdCbvmdaItemsXml = [\r\n            'lotNumber',\r\n            'productionDate',\r\n            'bestBeforeDate',\r\n            'preservationTechniqueCode'\r\n          ]\r\n            .filter(k => !!rest[`ilmd_${k}`])\r\n            .map(k => `<cbvmda:${k}>${rest[`ilmd_${k}`]}</cbvmda:${k}>`)\r\n            .join('\\n')\r\n\r\n          const ilmdCertificationItemsXml = parseCsvColumnList({\r\n            csvData: parsedData,\r\n            index,\r\n            indexKey: 'informationProvider',\r\n            itemKeyList: [\r\n              'ilmd_certificationList_certification_certificationAgency',\r\n              'ilmd_certificationList_certification_certificationIdentification',\r\n              'ilmd_certificationList_certification_certificationStandard',\r\n              'ilmd_certificationList_certification_certificationValue'\r\n            ]\r\n          })\r\n            .map(\r\n              d => `<certification>\r\n  <certificationStandard>${d.ilmd_certificationList_certification_certificationStandard}</certificationStandard> \r\n  <certificationAgency>${d.ilmd_certificationList_certification_certificationAgency}</certificationAgency>\r\n  <certificationValue>${d.ilmd_certificationList_certification_certificationValue}</certificationValue>\r\n  <certificationIdentification>${d.ilmd_certificationList_certification_certificationIdentification}</certificationIdentification>\r\n</certification>`\r\n            )\r\n            .join('\\n')\r\n            .trim()\r\n\r\n          const ilmdCertificationXml = !!ilmdCertificationItemsXml\r\n            ? `<cbvmda:certificationList>${ilmdCertificationItemsXml}</cbvmda:certificationList>`\r\n            : ''\r\n          const ilmdItemsXml = [ilmdCbvmdaItemsXml, ilmdCertificationXml]\r\n            .join('\\n')\r\n            .trim()\r\n\r\n          const ilmdXml = !!ilmdItemsXml\r\n            ? `<ilmd>\r\n                ${ilmdItemsXml}\r\n              </ilmd>`\r\n            : ''\r\n\r\n          return `<extension>\r\n<TransformationEvent>\r\n  <eventTime>${eventTime}</eventTime> \r\n  <eventTimeZoneOffset>${eventTimeZoneOffset}</eventTimeZoneOffset>\r\n  <bizStep>urn:epcglobal:cbv:bizstep:${bizStep}</bizStep>\r\n  <disposition>urn:epcglobal:cbv:disp:${disposition}</disposition>\r\n  \r\n  <gdst:visibilityEvent>${visibilityEvent}</gdst:visibilityEvent>\r\n  <gdst:productOwner>${productOwner}</gdst:productOwner> \r\n  <cbvmda:informationProvider>${informationProvider}</cbvmda:informationProvider>   \r\n  \r\n  <readPoint><id>${readPoint_id}</id></readPoint>\r\n  <bizLocation><id>${bizLocation_id}</id></bizLocation>\r\n\r\n  ${inputQuantityListXml}\r\n  ${outputQuantityListXml}\r\n  ${ilmdXml}\r\n</TransformationEvent>\r\n</extension>`\r\n        }\r\n      )\r\n      .filter(t => !!t)\r\n      .join('\\n')\r\n  })\r\n\r\nexport const createObjectEventXml = file =>\r\n  withIgnoreError(async () => {\r\n    const readerStream = createCsvFileReaderStream(file)\r\n    const parsedData = (await neatCsv(readerStream, {\r\n      headers: csvObjectEventHeader,\r\n      skipLines: 5\r\n    })) as any\r\n\r\n    return parsedData\r\n      .map(\r\n        (\r\n          {\r\n            action,\r\n            bizStep,\r\n            informationProvider,\r\n            productOwner,\r\n            eventTime,\r\n            eventTimeZoneOffset,\r\n            visibilityEvent,\r\n            disposition,\r\n            readPoint_id,\r\n            bizLocation_id,\r\n            ...rest\r\n          },\r\n          index\r\n        ) => {\r\n          if (!action || !eventTime || !informationProvider) return ''\r\n\r\n          //#region parse basic lists\r\n          const epcItemsXml = parseCsvColumnList({\r\n            csvData: parsedData,\r\n            index,\r\n            indexKey: 'informationProvider',\r\n            itemKeyList: ['epcList_epc']\r\n          })\r\n            .map(d => `<epc>${d.epcList_epc}</epc>`)\r\n            .join('\\n')\r\n\r\n          const epcListXml = !!epcItemsXml\r\n            ? `<epcList>${epcItemsXml}</epcList>`\r\n            : ''\r\n\r\n          const bizTransactionItem = parseCsvColumnList({\r\n            csvData: parsedData,\r\n            index,\r\n            indexKey: 'informationProvider',\r\n            itemKeyList: [\r\n              'bizTransactionList_bizTransaction_type',\r\n              'bizTransactionList_bizTransaction_value'\r\n            ]\r\n          })\r\n            .map(\r\n              d =>\r\n                `<bizTransaction type=\"urn:epcglobal:cbv:btt:${d.bizTransactionList_bizTransaction_type}\">${d.bizTransactionList_bizTransaction_value}</bizTransaction>`\r\n            )\r\n            .join('\\n')\r\n\r\n          const bizTransactionListXml = !!bizTransactionItem\r\n            ? `<bizTransactionList>${bizTransactionItem}</bizTransactionList>`\r\n            : ''\r\n\r\n          const sourceListItem = parseCsvColumnList({\r\n            csvData: parsedData,\r\n            index,\r\n            indexKey: 'informationProvider',\r\n            itemKeyList: [\r\n              'extension_sourceList_source_type',\r\n              'extension_sourceList_source_value'\r\n            ]\r\n          })\r\n            .map(\r\n              d =>\r\n                `<source type=\"urn:epcglobal:cbv:sdt:${d.extension_sourceList_source_type}\">${d.extension_sourceList_source_value}</source>`\r\n            )\r\n            .join('\\n')\r\n\r\n          const sourceListXml = !!sourceListItem\r\n            ? `<sourceList>${sourceListItem}</sourceList>`\r\n            : ''\r\n\r\n          const destinationListItem = parseCsvColumnList({\r\n            csvData: parsedData,\r\n            index,\r\n            indexKey: 'informationProvider',\r\n            itemKeyList: [\r\n              'extension_destinationList_destination_type',\r\n              'extension_destinationList_destination_value'\r\n            ]\r\n          })\r\n            .map(\r\n              d =>\r\n                `<destination type=\"urn:epcglobal:cbv:sdt:${d.extension_destinationList_destination_type}\">${d.extension_destinationList_destination_value}</destination>`\r\n            )\r\n            .join('\\n')\r\n\r\n          const destinationListXml = !!destinationListItem\r\n            ? `<destinationList>${destinationListItem}</destinationList>`\r\n            : ''\r\n\r\n          const quantityListItem = parseCsvColumnList({\r\n            csvData: parsedData,\r\n            index,\r\n            indexKey: 'informationProvider',\r\n            itemKeyList: [\r\n              'extension_quantityList_quantityElement_epcClass',\r\n              'extension_quantityList_quantityElement_quantity',\r\n              'extension_quantityList_quantityElement_uom'\r\n            ]\r\n          })\r\n            .map(\r\n              d => `<quantityElement><epcClass>${d.extension_quantityList_quantityElement_epcClass}</epcClass>\r\n  <quantity>${d.extension_quantityList_quantityElement_quantity}</quantity>\r\n  <uom>${d.extension_quantityList_quantityElement_uom}</uom>\r\n</quantityElement>`\r\n            )\r\n            .join('\\n')\r\n\r\n          const quantityListXml = !!quantityListItem\r\n            ? `<quantityList>${quantityListItem}</quantityList>`\r\n            : ''\r\n          //#endregion\r\n\r\n          //#region parse ilmd\r\n          const ilmdCbvmdaItemsXml = [\r\n            'productionMethodCode',\r\n            'harvestEndDate',\r\n            'harvestStartDate',\r\n            'unloadingPort'\r\n          ]\r\n            .filter(k => !!rest[`extension_ilmd_${k}`])\r\n            .map(\r\n              k => `<cbvmda:${k}>${rest[`extension_ilmd_${k}`]}</cbvmda:${k}>`\r\n            )\r\n            .join('\\n')\r\n\r\n          const ilmdGdstItemsXml = [\r\n            'FIP',\r\n            'harvestCertification',\r\n            'harvestCertificationCoC',\r\n            'ISSF',\r\n            'landingDateEnd',\r\n            'landingDateStart',\r\n            'ratingsScheme',\r\n            'ratingsScore',\r\n            'vesselRegistryLink',\r\n            'vesselTransponder'\r\n          ]\r\n            .filter(k => !!rest[`extension_ilmd_${k}`])\r\n            .map(k => `<gdst:${k}>${rest[`extension_ilmd_${k}`]}</gdst:${k}>`)\r\n            .join('\\n')\r\n\r\n          const ilmdCertificationItemsXml = parseCsvColumnList({\r\n            csvData: parsedData,\r\n            index,\r\n            indexKey: 'informationProvider',\r\n            itemKeyList: [\r\n              'extension_ilmd_certificationList_certification_certificationAgency',\r\n              'extension_ilmd_certificationList_certification_certificationIdentification',\r\n              'extension_ilmd_certificationList_certification_certificationStandard',\r\n              'extension_ilmd_certificationList_certification_certificationValue'\r\n            ]\r\n          })\r\n            .map(\r\n              d => `<certification>\r\n  <certificationStandard>${d.extension_ilmd_certificationList_certification_certificationStandard}</certificationStandard> \r\n  <certificationAgency>${d.extension_ilmd_certificationList_certification_certificationAgency}</certificationAgency>\r\n  <certificationValue>${d.extension_ilmd_certificationList_certification_certificationValue}</certificationValue>\r\n  <certificationIdentification>${d.extension_ilmd_certificationList_certification_certificationIdentification}</certificationIdentification>\r\n</certification>`\r\n            )\r\n            .join('\\n')\r\n            .trim()\r\n\r\n          const ilmdCertificationXml = !!ilmdCertificationItemsXml\r\n            ? `<cbvmda:certificationList>${ilmdCertificationItemsXml}</cbvmda:certificationList>`\r\n            : ''\r\n\r\n          const ilmdItemsXml = [\r\n            ilmdCbvmdaItemsXml,\r\n            ilmdGdstItemsXml,\r\n            ilmdCertificationXml\r\n          ]\r\n            .join('\\n')\r\n            .trim()\r\n\r\n          const ilmdXml = !!ilmdItemsXml\r\n            ? `<ilmd>\r\n              ${ilmdItemsXml}\r\n            </ilmd>`\r\n            : ''\r\n\r\n          //#endregion\r\n\r\n          const extensionItemsXml = [\r\n            sourceListXml,\r\n            destinationListXml,\r\n            quantityListXml,\r\n            ilmdXml\r\n          ].join('\\n')\r\n\r\n          const extensionXml = !!extensionItemsXml\r\n            ? `<extension>${extensionItemsXml}</extension>`\r\n            : ''\r\n\r\n          return `<ObjectEvent>\r\n    <eventTime>${eventTime}</eventTime> \r\n    <eventTimeZoneOffset>${eventTimeZoneOffset}</eventTimeZoneOffset>\r\n    <action>${action}</action>\r\n    <bizStep>urn:epcglobal:cbv:bizstep:${bizStep}</bizStep>\r\n    <disposition>urn:epcglobal:cbv:disp:${disposition}</disposition>\r\n    <readPoint><id>${readPoint_id}</id></readPoint>\r\n    <bizLocation><id>${bizLocation_id}</id></bizLocation>\r\n    \r\n    <gdst:visibilityEvent>${visibilityEvent}</gdst:visibilityEvent>\r\n    <gdst:productOwner>${productOwner}</gdst:productOwner>\r\n    <cbvmda:informationProvider>${informationProvider}</cbvmda:informationProvider> \r\n    ${epcListXml}\r\n    ${bizTransactionListXml}\r\n    ${extensionXml}\r\n</ObjectEvent>`\r\n        }\r\n      )\r\n      .filter(t => !!t)\r\n      .join('\\n')\r\n  })\r\n\r\nexport const createLocationXml = file =>\r\n  withIgnoreError(async () => {\r\n    const readerStream = createCsvFileReaderStream(file)\r\n    const parsedData = (await neatCsv(readerStream, {\r\n      headers: csvLocationHeader,\r\n      skipLines: 3\r\n    })) as any\r\n\r\n    const vocabArrayKeyList = [\r\n      'geofencePolygonPolygonPointSeq',\r\n      'geofencePolygonPolygonPointValue'\r\n    ]\r\n\r\n    const vocabElementListItems = parsedData\r\n      .map(\r\n        (\r\n          {\r\n            id,\r\n            informationProvider,\r\n\r\n            ...optionalAttributeMap\r\n          },\r\n          index\r\n        ) => {\r\n          if (!id) return ''\r\n          const optionalAttributeItems = Object.entries(optionalAttributeMap)\r\n            .filter(([k, v]) => !!v && !vocabArrayKeyList.includes(k))\r\n            .map(\r\n              ([k, v]) =>\r\n                `<attribute id=\"urn:epcglobal:cbv:mda#${k}\">${v}</attribute>`\r\n            )\r\n            .join('\\n')\r\n\r\n          const polygonItemsXml = parseCsvColumnList({\r\n            csvData: parsedData,\r\n            index,\r\n            indexKey: 'id',\r\n            itemKeyList: vocabArrayKeyList\r\n          })\r\n            .map(\r\n              d =>\r\n                `<polygonPoint seq=\"${d.geofencePolygonPolygonPointSeq}\">${d.geofencePolygonPolygonPointValue}</polygonPoint>`\r\n            )\r\n            .join('\\n')\r\n            .trim()\r\n\r\n          const geofanceXml = !!polygonItemsXml\r\n            ? `<attribute id=\"urn:epcglobal:cbv:tr#geofencePolygon\">${polygonItemsXml}</attribute>`\r\n            : ''\r\n\r\n          return `<VocabularyElement id=\"${id}\">\r\n  <attribute id=\"urn:epcglobal:cbv:mda#informationProvider\">${informationProvider}</attribute>\r\n  ${optionalAttributeItems}\r\n  ${geofanceXml}\r\n</VocabularyElement>`\r\n        }\r\n      )\r\n      .join('\\n')\r\n\r\n    return `<Vocabulary type=\"urn:epcglobal:epcis:vtype:Location\">\r\n  <VocabularyElementList>\r\n    ${vocabElementListItems}\r\n  </VocabularyElementList>\r\n</Vocabulary>`\r\n  })\r\n\r\nexport const createEpcClassXml = file =>\r\n  withIgnoreError(async () => {\r\n    const readerStream = createCsvFileReaderStream(file)\r\n    const parsedData = (await neatCsv(readerStream, {\r\n      headers: csvEpcClassHeader,\r\n      skipLines: 3\r\n    })) as any\r\n\r\n    const vocabArrayKeyList = [\r\n      'grossWeightMeasurementValue',\r\n      'grossWeightMeasurementUnitCode'\r\n    ]\r\n\r\n    const vocabElementListItems = parsedData\r\n      .map(\r\n        (\r\n          {\r\n            id,\r\n            informationProvider,\r\n            speciesForFisheryStatisticsPurposesCode,\r\n\r\n            ...optionalAttributeMap\r\n          },\r\n          index\r\n        ) => {\r\n          if (!id) return ''\r\n          const optionalAttributeItems = Object.entries(optionalAttributeMap)\r\n            .filter(([k, v]) => !!v && !vocabArrayKeyList.includes(k))\r\n            .map(\r\n              ([k, v]) =>\r\n                `<attribute id=\"urn:epcglobal:cbv:mda#${k}\">${v}</attribute>`\r\n            )\r\n            .join('\\n')\r\n\r\n          const grossWeightDataList = parseCsvColumnList({\r\n            csvData: parsedData,\r\n            index,\r\n            indexKey: 'id',\r\n            itemKeyList: vocabArrayKeyList\r\n          })\r\n\r\n          const grossWeightItemsXml = grossWeightDataList\r\n            .map(\r\n              ({\r\n                grossWeightMeasurementUnitCode,\r\n                grossWeightMeasurementValue\r\n              }) =>\r\n                `<measurement measurementUnitCode=\"${parseUom(\r\n                  grossWeightMeasurementUnitCode\r\n                )}\">${grossWeightMeasurementValue}</measurement>`\r\n            )\r\n            .join('\\n')\r\n            .trim()\r\n\r\n          const grossWeightXml = !!grossWeightItemsXml\r\n            ? `<attribute id=\"urn:epcglobal:cbv:mda#grossWeight\">${grossWeightItemsXml}</attribute>`\r\n            : ''\r\n\r\n          return `<VocabularyElement id=\"${id}\">\r\n  <attribute id=\"urn:epcglobal:cbv:mda#informationProvider\">${informationProvider}</attribute>\r\n  <attribute id=\"urn:epcglobal:cbv:mda#speciesForFisheryStatisticsPurposesCode\">${speciesForFisheryStatisticsPurposesCode}</attribute>\r\n  ${optionalAttributeItems}\r\n  ${grossWeightXml}\r\n</VocabularyElement>`\r\n        }\r\n      )\r\n      .join('\\n')\r\n\r\n    return `<Vocabulary type=\"urn:epcglobal:epcis:vtype:EPCClass\">\r\n    <VocabularyElementList>\r\n      ${vocabElementListItems}\r\n    </VocabularyElementList>\r\n</Vocabulary>`\r\n  })\r\n\r\nexport const createBusinessDocumentHeaderXml = file =>\r\n  withIgnoreError(async () => {\r\n    const readerStream = createCsvFileReaderStream(file)\r\n    const [, data] = (await neatCsv(readerStream, {\r\n      headers: csvBusinessDocumentHeader\r\n    })) as any\r\n\r\n    const {\r\n      senderId,\r\n      senderName,\r\n      senderEmail,\r\n      receiverId,\r\n      receiverName,\r\n      receiverEmail\r\n    } = data\r\n\r\n    if (\r\n      !senderId ||\r\n      !senderName ||\r\n      !senderEmail ||\r\n      !receiverId ||\r\n      !receiverName ||\r\n      !receiverEmail\r\n    ) {\r\n      throw new Error('wrong format')\r\n    }\r\n\r\n    const dt = DateTime.local()\r\n    const creationDate = dt.toISO()\r\n\r\n    return `<sbdh:StandardBusinessDocumentHeader>\r\n    <sbdh:HeaderVersion>1.0</sbdh:HeaderVersion>\r\n    <sbdh:Sender>\r\n        <sbdh:Identifier>${senderId}</sbdh:Identifier>\r\n        <sbdh:ContactInformation>\r\n            <sbdh:Contact>${senderName}</sbdh:Contact>\r\n            <sbdh:EmailAddress>${senderEmail}</sbdh:EmailAddress>\r\n        </sbdh:ContactInformation>\r\n    </sbdh:Sender>\r\n    <sbdh:Receiver>\r\n        <sbdh:Identifier>${receiverId}</sbdh:Identifier>\r\n        <sbdh:ContactInformation>\r\n            <sbdh:Contact>${receiverName}</sbdh:Contact>\r\n            <sbdh:EmailAddress>${receiverEmail}</sbdh:EmailAddress>\r\n        </sbdh:ContactInformation>\r\n    </sbdh:Receiver>\r\n    <sbdh:DocumentIdentification>\r\n        <sbdh:Standard>GS1</sbdh:Standard>\r\n        <sbdh:TypeVersion>3.0</sbdh:TypeVersion>\r\n        <sbdh:InstanceIdentifier>9999</sbdh:InstanceIdentifier>\r\n        <sbdh:Type>Seafood Traceability</sbdh:Type>\r\n        <sbdh:MultipleType>false</sbdh:MultipleType>\r\n        <sbdh:CreationDateAndTime>${creationDate}</sbdh:CreationDateAndTime>\r\n    </sbdh:DocumentIdentification>\r\n</sbdh:StandardBusinessDocumentHeader>`\r\n  })\r\n\r\nexport const createBoltonXml = ({\r\n  bdhXml,\r\n  epcClassXml,\r\n  locationXml,\r\n  objectEventXml,\r\n  transformationEventXml,\r\n  aggregationEventXml\r\n}) => {\r\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:1\" \r\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n  xmlns:sbdh=\"http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader\" \r\n  schemaVersion=\"0\" \r\n  creationDate=\"2001-12-17T09:30:47Z\" \r\n  xsi:schemaLocation=\"urn:epcglobal:epcis:xsd:1  http://www.gs1si.org/BMS/epcis/1_2/EPCglobal-epcis-1_2.xsd\" \r\n  xmlns:cbvmda=\"urn:epcglobal:cbv:mda\" \r\n  xmlns:gdst=\"https://traceability-dialogue.org/epcis\">\r\n  <EPCISHeader>\r\n       ${bdhXml}\r\n    <extension>\r\n      <EPCISMasterData>\r\n        <VocabularyList> \r\n          ${epcClassXml}\r\n          ${locationXml}\r\n        </VocabularyList>\r\n      </EPCISMasterData>\r\n    </extension>\r\n  </EPCISHeader>\r\n  <EPCISBody>\r\n    <EventList>\r\n      ${objectEventXml}\r\n      ${aggregationEventXml}\r\n      ${transformationEventXml}\r\n    </EventList>\r\n  </EPCISBody>\r\n</epcis:EPCISDocument>`\r\n}\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport {\r\n  FileDropContainer,\r\n  CsvFileDrop,\r\n  XmlDownloadButton\r\n} from './CsvFileInput'\r\n\r\nimport { FillButton } from '../_theme'\r\nimport {\r\n  createBoltonXml,\r\n  createBusinessDocumentHeaderXml as createBDHXml,\r\n  createEpcClassXml,\r\n  createLocationXml,\r\n  createObjectEventXml,\r\n  createTransformationEventXml,\r\n  createAggregationEventXml\r\n} from '../api/csvToXml/boltonCsvToXml'\r\n\r\ntype FileDropProps = {\r\n  fileValid?: boolean\r\n}\r\n\r\nconst StyledCsvFileDrop = styled(CsvFileDrop)<FileDropProps>`\r\n  margin-bottom: 0.5em;\r\n  width: 30%;\r\n  min-width: 250px;\r\n  .file-drop {\r\n    height: 50px;\r\n    color: ${p =>\r\n      p.fileValid ? p.theme.headerBgColor : p.theme.userFontColor};\r\n  }\r\n`\r\n\r\nconst DropContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  flex-flow: wrap;\r\n  justify-content: space-around;\r\n`\r\n\r\nexport const BoltonEpcisToolsInput = ({ triggerNextStep }: any) => {\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [bdhXml, setBdhXml] = useState('')\r\n  const [bdhFileName, setBdhFileName] = useState('')\r\n\r\n  const [epcClassXml, setEpcClassXml] = useState('')\r\n  const [epcClassFileName, setEpcClassFileName] = useState('')\r\n\r\n  const [locationXml, setLocationXml] = useState('')\r\n  const [locationFileName, setLocationFileName] = useState('')\r\n\r\n  const [objectEventXml, setObjectEventXml] = useState('')\r\n  const [objectEventFileName, setObjectEventFileName] = useState('')\r\n\r\n  const [transformationEventXml, setTransformationEventXml] = useState('')\r\n  const [\r\n    transformationEventFileName,\r\n    setTransformationEventFileName\r\n  ] = useState('')\r\n\r\n  const [aggregationEventXml, setAggregationEventXml] = useState('')\r\n  const [aggregationEventFileName, setAggregationEventFileName] = useState('')\r\n\r\n  const isAllXmlValid = () =>\r\n    !!bdhXml &&\r\n    !!epcClassXml &&\r\n    !!locationXml &&\r\n    !!objectEventXml &&\r\n    !!transformationEventXml &&\r\n    !!aggregationEventXml\r\n\r\n  return (\r\n    <FileDropContainer>\r\n      <DropContainer>\r\n        <StyledCsvFileDrop\r\n          fileValid={!!bdhXml}\r\n          dropText={!!bdhXml ? bdhFileName : 'BusinessDocumentHeader'}\r\n          processFile={async ([file]) => {\r\n            const newXml = await createBDHXml(file)\r\n            if (!newXml) return\r\n\r\n            setBdhXml(newXml)\r\n            setBdhFileName(file.name)\r\n          }}\r\n        />\r\n        <StyledCsvFileDrop\r\n          fileValid={!!epcClassXml}\r\n          dropText={!!epcClassXml ? epcClassFileName : 'EPCClass'}\r\n          processFile={async ([file]) => {\r\n            const newXml = await createEpcClassXml(file)\r\n            if (!newXml) return\r\n\r\n            setEpcClassXml(newXml)\r\n            setEpcClassFileName(file.name)\r\n          }}\r\n        />\r\n        <StyledCsvFileDrop\r\n          fileValid={!!locationXml}\r\n          dropText={!!locationXml ? locationFileName : 'Location'}\r\n          processFile={async ([file]) => {\r\n            const newXml = await createLocationXml(file)\r\n            if (!newXml) return\r\n\r\n            setLocationXml(newXml)\r\n            setLocationFileName(file.name)\r\n          }}\r\n        />\r\n        <StyledCsvFileDrop\r\n          fileValid={!!objectEventXml}\r\n          dropText={!!objectEventXml ? objectEventFileName : 'ObjectEvent'}\r\n          processFile={async ([file]) => {\r\n            const newXml = await createObjectEventXml(file)\r\n            if (!newXml) return\r\n\r\n            setObjectEventXml(newXml)\r\n            setObjectEventFileName(file.name)\r\n          }}\r\n        />\r\n        <StyledCsvFileDrop\r\n          fileValid={!!transformationEventXml}\r\n          dropText={\r\n            !!transformationEventXml\r\n              ? transformationEventFileName\r\n              : 'TransformationEvent'\r\n          }\r\n          processFile={async ([file]) => {\r\n            const newXml = await createTransformationEventXml(file)\r\n            if (!newXml) return\r\n            console.log(newXml)\r\n\r\n            setTransformationEventXml(newXml)\r\n            setTransformationEventFileName(file.name)\r\n          }}\r\n        />\r\n        <StyledCsvFileDrop\r\n          fileValid={!!aggregationEventXml}\r\n          dropText={\r\n            !!aggregationEventXml\r\n              ? aggregationEventFileName\r\n              : 'AggregationEvent'\r\n          }\r\n          processFile={async ([file]) => {\r\n            const newXml = await createAggregationEventXml(file)\r\n            console.log(newXml)\r\n\r\n            if (!newXml) return\r\n            setAggregationEventXml(newXml)\r\n            setAggregationEventFileName(file.name)\r\n          }}\r\n        />\r\n      </DropContainer>\r\n\r\n      <XmlDownloadButton\r\n        disabled={!isAllXmlValid()}\r\n        fileLabel=\"Bolton\"\r\n        xml={createBoltonXml({\r\n          bdhXml,\r\n          epcClassXml,\r\n          locationXml,\r\n          objectEventXml,\r\n          transformationEventXml,\r\n          aggregationEventXml\r\n        })}\r\n      />\r\n\r\n      <FillButton\r\n        disabled={disabled}\r\n        onClick={() => {\r\n          setDisabled(true)\r\n          triggerNextStep()\r\n        }}>\r\n        Finalize\r\n      </FillButton>\r\n    </FileDropContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { createPromptArray, createOptionLabel } from '../core/utils'\r\nimport {\r\n  CatchAndProcessCsvInput,\r\n  AggregationDisaggregationCsvInput\r\n} from '../components/CsvFileInput'\r\nimport { BoltonEpcisToolsInput } from '../components/BoltonEpcisToolsInput'\r\n\r\nconst promptOrder = [\r\n  'prompt_csv',\r\n  'add_csvType',\r\n  'comp_catchProcess',\r\n  'comp_aggregationDisaggregation',\r\n  'comp_boltonEpcisTools',\r\n  'prompt_anotherOne'\r\n]\r\n\r\nconst promptStructure = {\r\n  add_csvType: {\r\n    hideInput: true,\r\n    options: [\r\n      'csv_catchProcess',\r\n      'csv_aggregationDisaggregation',\r\n      'csv_boltonEpcisTools'\r\n    ].map(createOptionLabel),\r\n    triggers: [\r\n      'comp_catchProcess',\r\n      'comp_aggregationDisaggregation',\r\n      'comp_boltonEpcisTools'\r\n    ]\r\n  },\r\n  comp_catchProcess: {\r\n    component: <CatchAndProcessCsvInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true,\r\n    trigger: 'prompt_anotherOne'\r\n  },\r\n  comp_aggregationDisaggregation: {\r\n    component: <AggregationDisaggregationCsvInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true,\r\n    trigger: 'prompt_anotherOne'\r\n  },\r\n\r\n  comp_boltonEpcisTools: {\r\n    component: <BoltonEpcisToolsInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true,\r\n    trigger: 'prompt_anotherOne'\r\n  }\r\n} as any\r\n\r\nexport const createCsvPrompt = () =>\r\n  createPromptArray(promptOrder, promptStructure)\r\n","import { strings } from \"./i18n\";\r\nimport { createCatchPrompt } from \"./data/catchPrompt\";\r\nimport { createLandingPrompt } from \"./data/landingPrompt\";\r\nimport { createSalePrompt } from \"./data/salePrompt\";\r\nimport { createSetupCaptainProfilePrompt } from \"./data/setupCaptainProfilePrompt\";\r\nimport createPersistedState from \"use-persisted-state\";\r\nimport { createSelectOptionList } from \"./core/utils\";\r\nimport { createTestPrompt } from \"./data/testPrompt\";\r\nimport { createReceivePrompt } from \"./data/receivePrompt\";\r\nimport { createCsvPrompt } from \"./data/csvPrompt\";\r\n\r\nconst isDebug = localStorage.getItem(\"debug\");\r\n\r\n// import { IDialogue } from \"./react-app-env\";\r\n\r\n// https://github.com/Semantic-Org/Semantic-UI-React/blob/master/docs/src/examples/modules/Dropdown/common.js\r\n\r\nexport const fishes = [\r\n  \"atlanticCod\",\r\n  \"blueCrab\",\r\n  \"dolphinFish\",\r\n  \"grouper\",\r\n  \"kingCrab\",\r\n  \"pacificCod\",\r\n  \"redSnapper\",\r\n  \"seaCucumber\",\r\n  \"shark\",\r\n  \"swordfish\",\r\n  \"albacoreTuna\",\r\n  \"bigeyeTuna\",\r\n  \"skipjackTuna\",\r\n  \"yellowfinTuna\",\r\n  \"bluefinTuna\"\r\n];\r\n\r\nexport const fishOptionList = createSelectOptionList(fishes);\r\n\r\nexport const shipIDTypeList = [\"imo\", \"mmsi\"];\r\n\r\nexport const durationList = [\"days\", \"weeks\", \"months\"];\r\n\r\nexport const durationMultiplier = {\r\n  days: 24 * 60 * 60 * 1000,\r\n  weeks: 7 * 24 * 60 * 60 * 1000,\r\n  months: 30 * 7 * 24 * 60 * 60 * 1000\r\n};\r\n\r\nexport const shipIDTypeOptionList = createSelectOptionList(shipIDTypeList);\r\n\r\nexport const uomMap: any = {\r\n  kilogram: \"KGM\",\r\n  pound: \"LBR\"\r\n};\r\n\r\nexport const productionMethodCodeMap = {\r\n  aquaculture: \"AQUACULTURE\",\r\n  inlandFishery: \"INLAND_FISHERY\",\r\n  marineFishery: \"MARINE_FISHERY\"\r\n} as any;\r\n\r\nexport const fao3AMap: any = {\r\n  atlanticCod: \"LPS\",\r\n  blueCrab: \"CRB\",\r\n  dolphinFish: \"DOL\",\r\n  grouper: \"EWL\",\r\n  kingCrab: \"KCD\",\r\n  pacificCod: \"PCO\",\r\n  redSnapper: \"RES\",\r\n  seaCucumber: \"EHV\",\r\n  shark: \"HXC\",\r\n  swordfish: \"SWO\",\r\n  albacoreTuna: \"ALB\",\r\n  bigeyeTuna: \"BET\",\r\n  skipjackTuna: \"SKJ\",\r\n  yellowfinTuna: \"YFT\",\r\n  bluefinTuna: \"PBF\"\r\n};\r\n\r\nexport const localStorageKey = {\r\n  savedLanguage: \"NEMO_LANGUAGE\",\r\n  captainProfile: \"NEMO_CAPTAIN_PROFILE_TEMP\",\r\n  profile: \"NEMO_PROFILE\",\r\n  chatCache: \"NEMO_CHAT_CACHE\",\r\n  catchCache: \"NEMO_CATCH_CACHE\"\r\n};\r\n\r\nexport const useCaptainProfileState = createPersistedState(\r\n  localStorageKey.captainProfile\r\n);\r\nexport const useLanguageState = createPersistedState(\r\n  localStorageKey.savedLanguage\r\n);\r\nexport const useProfileState = createPersistedState(localStorageKey.profile);\r\n\r\nexport const useCatchCacheState = createPersistedState(\r\n  localStorageKey.catchCache\r\n);\r\n\r\nexport const createSteps = (isProfileSetup: boolean) => [\r\n  ...(isProfileSetup\r\n    ? [\r\n        {\r\n          id: \"prompt_welcome\",\r\n          hideInput: true,\r\n          message: () => strings.prompt_welcome,\r\n          trigger: \"prompt_initial\"\r\n        }\r\n      ]\r\n    : []),\r\n  ...createSetupCaptainProfilePrompt(),\r\n  {\r\n    id: \"prompt_initial\",\r\n    hideInput: true,\r\n    message: () => strings.prompt_initial,\r\n    trigger: \"prompt_events\"\r\n  },\r\n  {\r\n    id: `prompt_anotherOne`,\r\n    hideInput: true,\r\n    message: () => strings.prompt_anotherOne,\r\n    trigger: \"prompt_events\"\r\n  },\r\n  {\r\n    id: `prompt_nothing`,\r\n    hideInput: true,\r\n    message: () => strings.prompt_nothing,\r\n    trigger: \"prompt_end\"\r\n  },\r\n  {\r\n    id: \"prompt_events\",\r\n    hideInput: true,\r\n    options: [\r\n      ...(isDebug ? [\"test\"] : []),\r\n      \"csv\",\r\n      \"receive\",\r\n      \"catch\",\r\n      \"landing\",\r\n      \"sale\",\r\n      \"transport\",\r\n      \"nothing\"\r\n    ].map(value => ({\r\n      value,\r\n      label: `${strings[value]}`,\r\n      trigger: `prompt_${value}`\r\n    }))\r\n  },\r\n  ...[\"transport\"].map(value => ({\r\n    id: `prompt_${value}`,\r\n    message: () => strings.prompt_unavailable,\r\n    trigger: \"prompt_end\"\r\n  })),\r\n  {\r\n    id: \"prompt_end\",\r\n    hideInput: true,\r\n    message: () => strings.prompt_end,\r\n    end: true\r\n  },\r\n  ...createCsvPrompt(),\r\n  ...createReceivePrompt(),\r\n  ...createSalePrompt(),\r\n  ...createCatchPrompt(),\r\n  ...createLandingPrompt(),\r\n  ...(isDebug ? createTestPrompt() : [])\r\n];\r\n","import React, { useState, useRef } from 'react'\r\nimport { useSpring, useChain, config, animated } from 'react-spring'\r\nimport styled from 'styled-components'\r\n\r\nimport { Close } from 'styled-icons/material/Close'\r\nimport { useProfileState, localStorageKey } from '../_data'\r\nimport { useFormState } from 'react-use-form-state'\r\nimport {\r\n  StyledSubmitButton,\r\n  StyledColumnForm,\r\n  StyledButton,\r\n  RowDiv,\r\n  ReviewInput\r\n} from '../_theme'\r\n\r\nexport const CaptainProfileIcon = () => {\r\n  return <div>Profile Icon</div>\r\n}\r\n\r\nconst Container = styled(animated.div)`\r\n  position: absolute;\r\n\r\n  border-radius: 5px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-content: center;\r\n\r\n  background: white;\r\n\r\n  cursor: pointer;\r\n\r\n  will-change: width, height, opacity;\r\n  z-index: 1001;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst ProfileIcon = styled(animated.div)`\r\n  border-radius: 100%;\r\n\r\n  position: relative;\r\n  width: 36px;\r\n  height: 36px;\r\n  background: pink;\r\n\r\n  cursor: pointer;\r\n\r\n  z-index: 1000;\r\n`\r\n\r\nconst CloseProfileModalButton = styled(ProfileIcon)`\r\n  background: white;\r\n  z-index: 1002;\r\n  position: absolute;\r\n  right: 1em;\r\n  top: 1em;\r\n  box-shadow: 0 2px 25px rgba(255, 0, 130, 0.2);\r\n  svg {\r\n    fill: #ff0081;\r\n  }\r\n`\r\n\r\nconst ItemContainer = styled(animated.div)`\r\n  margin: 3em 3em;\r\n`\r\n\r\nconst StyledForm = styled(StyledColumnForm)`\r\n  margin-top: 1em;\r\n`\r\n\r\nexport const CaptainProfile = () => {\r\n  const [open, setOpen] = useState(false)\r\n  const [profile, setProfile] = useProfileState({})\r\n\r\n  const { completed, ...profileFormRest } = profile\r\n\r\n  const [formState, { text }] = useFormState<CaptainProfileReviewFormFields>({\r\n    ...profileFormRest\r\n  })\r\n\r\n  const springRef = useRef(null)\r\n  const { size, ...rest } = useSpring({\r\n    ref: springRef,\r\n    // config: config.stiff,\r\n    from: {\r\n      size: '2%',\r\n      opacity: 0\r\n    },\r\n    to: {\r\n      size: open ? '100%' : '2%',\r\n      opacity: open ? 1 : 0\r\n    }\r\n  }) as any\r\n\r\n  const transRef = useRef(null)\r\n\r\n  const closeButtonRef = useRef(null)\r\n\r\n  const closeButtonPopin = useSpring({\r\n    ref: closeButtonRef,\r\n    config: config.stiff,\r\n    from: { opacity: 0, transform: 'scale(0)' },\r\n    to: { opacity: open ? 1 : 0, transform: open ? 'scale(1)' : 'scale(0)' }\r\n  })\r\n\r\n  useChain(\r\n    open\r\n      ? [springRef, closeButtonRef, transRef]\r\n      : [closeButtonRef, transRef, springRef],\r\n    [0, open ? 0.1 : 0.6]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <ProfileIcon onClick={() => setOpen(true)} />\r\n      <Container style={{ ...rest, width: size, height: size }}>\r\n        <CloseProfileModalButton\r\n          style={closeButtonPopin}\r\n          onClick={() => setOpen(false)}>\r\n          <Close />\r\n        </CloseProfileModalButton>\r\n        <ItemContainer>\r\n          {/* {transitions.map(({ item, key, props }) => (\r\n            <Item key={key} style={{ ...props, background: item.css }}>\r\n\r\n            </Item>\r\n          ))} */}\r\n\r\n          <StyledForm\r\n            onSubmit={e => {\r\n              e.preventDefault()\r\n\r\n              setProfile({\r\n                ...formState.values,\r\n                completed: true\r\n              })\r\n\r\n              setOpen(false)\r\n            }}>\r\n            {Object.keys(formState.values).map(k => (\r\n              <ReviewInput key={k} label={k} {...text(k as any)} />\r\n            ))}\r\n\r\n            <RowDiv>\r\n              <StyledButton\r\n                onClick={e => {\r\n                  e.preventDefault()\r\n                  localStorage.removeItem(localStorageKey.chatCache)\r\n                  window.location.reload()\r\n                }}>\r\n                Clear chat cache\r\n              </StyledButton>\r\n              <StyledSubmitButton />\r\n            </RowDiv>\r\n          </StyledForm>\r\n        </ItemContainer>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Flag from \"react-country-flag\";\r\n\r\nimport Select from \"react-styled-select\";\r\nimport { languages } from \"../i18n\";\r\n\r\nimport {CaptainProfile} from './CaptainProfile'\r\n\r\nconst HeaderContainer = styled.div`\r\n  height: 3.6em;\r\n  background: ${p => p.theme.headerBgColor};\r\n  color: ${p => p.theme.headerFontColor};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-direction: row;\r\n\r\n  padding-right: 1em;\r\n  padding-left: 1em;\r\n\r\n  h1 {\r\n    font-size: 1.8em;\r\n  }\r\n`;\r\n\r\nconst StyledSelect = styled(Select)`\r\n  width: 9em;\r\n  margin-left: 1em;\r\n  margin-right: 1em;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n\r\n  .select-label {\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nexport const Header = ({ language, onLanguageChanged }: any) => {\r\n  return (\r\n    <HeaderContainer>\r\n      <h1>Nemo</h1>\r\n\r\n      <StyledSelect\r\n        value={language}\r\n        options={languages}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n        valueRenderer={({ value, label }: any) => (\r\n          <div>\r\n            <Flag code={value} svg />{\" \"}\r\n            <span className=\"select-label\">{label}</span>\r\n          </div>\r\n        )}\r\n        onChange={(lang: string) => {\r\n          onLanguageChanged(lang);\r\n        }}\r\n      />\r\n\r\n      <CaptainProfile/>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n","import React, { useState } from 'react'\r\n\r\nimport ChatBot from 'react-simple-chatbot'\r\n\r\nimport styled, { ThemeProvider } from 'styled-components'\r\n\r\nimport { Header } from './components/Header'\r\n\r\nimport { theme, RefreshButton } from './_theme'\r\nimport {\r\n  localStorageKey,\r\n  createSteps,\r\n  useLanguageState,\r\n  useProfileState\r\n} from './_data'\r\nimport { strings, languages } from './i18n'\r\n\r\nimport { version, repository } from '../package.json'\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledChatBot = styled(ChatBot)`\r\n  width: 90%;\r\n  height: 90%;\r\n\r\n  .rsc-container {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .rsc-content {\r\n    max-height: 50%;\r\n  }\r\n\r\n  .rsc-os-options {\r\n    display: flex;\r\n    flex-flow: wrap;\r\n    flex-direction: row-reverse;\r\n  }\r\n\r\n  .rsc-os-option-element {\r\n    display: flex;\r\n    height: 3em;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst VersionContainer = styled.a`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  font-size: 10px;\r\n  opacity: 0.7;\r\n`\r\n\r\nexport const App = ({ props }: any) => {\r\n  const [hasEnded, setHasEnded] = useState(false)\r\n\r\n  const [language, setLanguage] = useLanguageState(languages[0].value)\r\n\r\n  const [profile] = useProfileState({ completed: false })\r\n  const isProfileSetup = !!profile.completed\r\n\r\n  strings.setLanguage(language)\r\n\r\n  const steps = createSteps(isProfileSetup)\r\n\r\n  const handleLanguageChanged = (newLanguage: string) => {\r\n    if (language === newLanguage) return\r\n\r\n    setLanguage(newLanguage)\r\n\r\n    localStorage.removeItem(localStorageKey.chatCache)\r\n\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        {hasEnded && <RefreshButton />}\r\n        <VersionContainer\r\n          href={repository}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\">\r\n          nemo@{version}\r\n        </VersionContainer>\r\n        <StyledChatBot\r\n          {...props}\r\n          headerComponent={\r\n            <Header\r\n              key={language}\r\n              language={language}\r\n              onLanguageChanged={handleLanguageChanged}\r\n            />\r\n          }\r\n          enableMobileAutoFocus\r\n          botAvatar={'assets/avatar.png'}\r\n          hideUserAvatar\r\n          cache={isProfileSetup}\r\n          cacheName={localStorageKey.chatCache}\r\n          userAvatar={'assets/captain.png'}\r\n          placeholder={strings.placeholder}\r\n          userDelay={0}\r\n          steps={steps}\r\n          handleEnd={() => setHasEnded(true)}\r\n        />\r\n      </Container>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { App } from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { Api, JsonRpc } from \"eosjs\";\r\nimport { JsSignatureProvider } from \"eosjs/dist/eosjs-jssig\";\r\n\r\nconst debug = require(\"debug\")(\"api.dapp\");\r\n\r\n// Jungle testnet keys\r\nexport const dappVault = {\r\n  ipfsRepo: '/nemo',\r\n  apiUrl: \"https://api.jungle.alohaeos.com:443\",\r\n  keys: [\r\n    \"5JjfJTnv7auXdk3QskJ79SiXo3dfJHhkH785AF7P7KedhyHkbLG\",\r\n    \"5J74G7maytuLsujt5Bn14b3ifbHbgVtxVBU6aDBkpXsobdw4g3w\",\r\n    \"5JdVxGhEgV481QDMS1PMDjhoQRdyuBssFnqjRnVWurpjgDeRb5z\",\r\n    \"5JWmbWCHjMD59QUnwrmvCxTeYgc7PxVRVf4dYNtj7Zs7BjM2XnA\"\r\n  ],\r\n  table: 'nemotablemk2',\r\n  account: {\r\n    eosiotoken: \"eosio.token\",\r\n    contract: \"nemoeosmark1\",\r\n    captain: \"nemotestero3\",\r\n    producer: \"nemotestero4\"\r\n  }\r\n}\r\n\r\nexport const encodeNemoTXValue = (id: string, blockNum: any) => `${id}.NEMOTX.${blockNum}`\r\n\r\nexport const decodeNemoTXValue = (tx: string) => tx.split('.NEMOTX.')\r\n\r\nexport const claimCatchEvent = async ({ txId, apiUrl }: any, ipfs: any) => {\r\n\r\n  // debug()\r\n  const { account, table, keys } = dappVault;\r\n\r\n  const signatureProvider = new JsSignatureProvider(keys);\r\n\r\n  const rpc = new JsonRpc(apiUrl);\r\n\r\n  const api = new Api({ rpc, signatureProvider });\r\n\r\n  const tableData = await rpc.get_table_rows({\r\n    json: true,                 // Get the response as json\r\n    code: account.contract,           // Contract that we target\r\n    scope: account.contract,           // Account that owns the data\r\n    table,          // Table name\r\n    lower_bound: txId,      // Table primary key value\r\n    limit: 1,                   // Here we limit to 1 to get only the\r\n    show_payer: false,         // Optional: Show ram payer\r\n  })\r\n\r\n  debug(tableData);\r\n  // result.trx.trx.actions;\r\n\r\n  const [{\r\n    buyer,\r\n    seller,\r\n    price,\r\n    tax,\r\n    value\r\n  }] = tableData.rows\r\n\r\n  if (buyer.length > 0) {\r\n    throw new Error('Record is already claimed')\r\n  }\r\n\r\n  const result = await api.transact(\r\n    {\r\n      actions: [\r\n        {\r\n          account: account.eosiotoken,\r\n          name: \"transfer\",\r\n          authorization: [\r\n            {\r\n              actor: account.producer,\r\n              permission: \"active\"\r\n            }\r\n          ],\r\n          data: {\r\n            from: account.producer,\r\n            to: seller,\r\n            quantity: price,\r\n            memo: `payment for ${value}`\r\n          }\r\n        },\r\n        {\r\n          account: account.eosiotoken,\r\n          name: \"transfer\",\r\n          authorization: [\r\n            {\r\n              actor: account.producer,\r\n              permission: \"active\"\r\n            }\r\n          ],\r\n          data: {\r\n            from: account.producer,\r\n            to: account.contract,\r\n            quantity: tax,\r\n            memo: `tax for ${value}`\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      blocksBehind: 3,\r\n      expireSeconds: 30\r\n    }\r\n  );\r\n\r\n  const receipt = encodeNemoTXValue(result.transaction_id, result.processed.block_num)\r\n\r\n  const claimResult = await api.transact(\r\n    {\r\n      actions: [\r\n        {\r\n          account: account.contract,\r\n          name: \"claim\",\r\n          authorization: [\r\n            {\r\n              actor: account.producer,\r\n              permission: \"active\"\r\n            }\r\n          ],\r\n          data: {\r\n            buyer: account.producer,\r\n            id: txId,\r\n            receipt\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      blocksBehind: 3,\r\n      expireSeconds: 30\r\n    }\r\n  );\r\n\r\n  const epcisDataBuffer = await ipfs.cat(value)\r\n\r\n  return {\r\n    epcisData: epcisDataBuffer.toString('utf8'),\r\n    originId: encodeNemoTXValue(claimResult.transaction_id, claimResult.processed.block_num)\r\n  }\r\n}\r\n\r\nexport const sendCatchEvent = async ({\r\n  apiUrl,\r\n  price\r\n}: any, ipfs: any, body: any) => {\r\n\r\n  const { account, keys } = dappVault;\r\n\r\n  const content = Buffer.from(body);\r\n  const results = await ipfs.add(content);\r\n\r\n  const { hash } = results[0];\r\n\r\n  const signatureProvider = new JsSignatureProvider(keys);\r\n\r\n  const rpc = new JsonRpc(apiUrl);\r\n\r\n  const api = new Api({ rpc, signatureProvider });\r\n\r\n  const result = await api.transact(\r\n    {\r\n      actions: [\r\n        {\r\n          account: account.contract,\r\n          name: \"submit\",\r\n          authorization: [\r\n            {\r\n              actor: account.captain,\r\n              permission: \"active\"\r\n            }\r\n          ],\r\n          data: {\r\n            seller: account.captain,\r\n            value: hash,\r\n            price,\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      blocksBehind: 3,\r\n      expireSeconds: 30\r\n    }\r\n  );\r\n\r\n  return {\r\n    ipfsHash: hash,\r\n    originId: encodeNemoTXValue(result.transaction_id, result.processed.block_num)\r\n  }\r\n};\r\n"],"sourceRoot":""}