{"version":3,"sources":["i18n/index.ts","i18n/en.ts","i18n/vn.ts","i18n/rs.ts","_theme.tsx","components/CatchFishTypeInput.tsx","core/utils.ts","components/CatchQuantityInput.tsx","components/CatchDurationInput.tsx","api/freepcis.ts","api/index.ts","api/catch.ts","hooks/use-ipfs.ts","components/CatchReview.tsx","data/catchPrompt.tsx","components/FishDataConfirm.tsx","components/LandingDataCard.tsx","data/landingPrompt.tsx","components/SaleFishSelectInput.tsx","data/salePrompt.tsx","components/VesselCaptainNameInput.tsx","components/VesselIDInput.tsx","data/gear.tsx","components/FishingGearInput.tsx","components/CaptainProfileReview.tsx","components/VesselCertificationInput.tsx","data/setupCaptainProfilePrompt.tsx","data/csvConfig.tsx","api/csvDemo1.ts","components/CsvFileInput.tsx","data/testPrompt.tsx","components/DappProducerReceiveInput.tsx","data/receivePrompt.tsx","data/csvPrompt.tsx","_data.tsx","components/CaptainProfile.tsx","components/Header.tsx","App.tsx","serviceWorker.ts","index.tsx","api/dapp.ts"],"names":["strings","LocalizedStrings","en","input_placeholder","atlanticCod","blueCrab","dolphinFish","grouper","kingCrab","pacificCod","redSnapper","seaCucumber","shark","swordfish","albacoreTuna","bigeyeTuna","skipjackTuna","yellowfinTuna","bluefinTuna","prompt_welcomeNew","prompt_introduceNemo","prompt_vesselCaptainName","captain","prompt_vesselName","prompt_vesselID","imo","mmsi","prompt_fishingGearTypeCode","selectGearBase","selectGearSubtype","selectGearOptionalType","prompt_productionMethod","aquaculture","inlandFishery","marineFishery","prompt_ownership","prompt_vesselOwnerName","prompt_organization","prompt_organizationName","prompt_certificationHolder","certification","form_certificationAgencyLabel","form_certificationValueLabel","form_certificationIdentificationLabel","form_certificationAgencyPlaceholder","form_certificationValuePlaceholder","form_certificationIdentificationPlaceholder","form_firstNamePlaceholder","form_lastNamePlaceholder","form_middleNamePlaceholder","prompt_certificationStandard","prompt_unitOfMeasurement","prompt_setupProfileCompleted","prompt_profileDone","kilogram","pound","prompt_welcome","prompt_end","prompt_anotherOne","prompt_unavailable","prompt_initial","yes","no","days","weeks","months","addNew","csv","receive","catch","transport","landing","sale","test","nothing","prompt_csv","prompt_nothing","prompt_test","prompt_receive","prompt_catch","prompt_catchFishType","prompt_catchDuration","prompt_catchHarvestStartDate","prompt_catchHarvestEndDate","prompt_catchArea","prompt_catchQuantity","prompt_catchQuantityListDone","prompt_catchReview","prompt_catchCongrat","prompt_preservation","add_quantityPlaceholder","chilled","salted","fresh","prompt_sale","prompt_size","prompt_weight","prompt_value","prompt_saleConfirmation","prompt_landing","prompt_landingConfirm","inprogress","finished","prompt_confirmData","dataIsAccurate","dataIsInaccurate","prompt_errorReported","date","time","timeZone","container","geoLocation","surroundingNet","withPurseLines","oneBoatOperated","twoBoatsOperated","withoutPurseLines","seineNets","beachSeines","vesselSeines","danishSeines","scottishSeines","pairSeines","seineNetsNotSpecified","trawls","bottomTrawls","beamTrawls","otterTrawls","pairTrawls","nephropsTrawls","shrimpTrawls","bottomTrawlsNotSpecified","midwaterTrawls","midwaterTrawlsNotSpecified","otterTwinTrawls","otterTrawlsNotSpecified","pairTrawlsNotSpecified","otherTrawlsNotSpecified","dredges","boatDredges","handDredges","liftNets","portableLiftNets","boatOperatedLiftNets","shoreOperatedStationaryLiftNets","liftNetsNotSpecified","fallingGear","castNets","fallingGearNotSpecified","gillnetsAndEntanglingNets","setGillnetsAnchored","driftnets","encirclingGillnets","fixedGillnetsOnStakes","trammelNets","combinedGillnetsTrammelNets","gillnetsAndEntanglingNetsNotSpecified","gillnetsNotSpecified","traps","stationaryUncoveredPoundNets","pots","fykeNets","stowNets","barriersFencesWeirsEtc","aerialTraps","trapsNotSpecified","hooksAndLines","handlinesAndPoleLinesHandOperated","handlinesAndPoleLinesMechanized","setLonglines","driftingLonglines","longlinesNotSpecified","trollingLines","hooksAndLinesNotSpecified","grapplingAndWounding","harpoons","harvestingMachines","pumps","mechanizedDredges","harvestingMachinesNotSpecified","miscellaneousGear","recreationalFishingGear","gearNotKnowOrNotSpecified","vn","rs","prompt_quantity","languages","key","value","flag","label","theme","background","headerBgColor","headerFontColor","botBubbleColor","botFontColor","userBubbleColor","userFontColor","dangerColor","CircleButton","styled","button","_templateObject","prop","StyledColumn","div","_templateObject2","RefreshButton","react_default","a","createElement","Refresh_esm","onClick","window","location","reload","StyledInput","input","_templateObject3","LabeledInput","_ref","className","rest","Object","objectWithoutProperties","_templateObject4","Divider","hr","_templateObject5","ReviewInput","_templateObject6","StyledButton","_templateObject7","p","FillButton","_templateObject8","StyledSubmitButton","props","Check_esm","_templateObject9","StyledColumnForm","form","_templateObject10","StyledRowForm","_templateObject11","RowDiv","_templateObject12","StyledSelect","Select","_templateObject13","StyledLabel","_templateObject14","CatchFishTypeInput_templateObject","StyledForm","CatchFishTypeInput_templateObject2","createSelectOptionList","list","map","concat","numberValidator","isNaN","appendTrigger","i","order","trigger","options","o","j","triggers","hideInput","waitAction","message","id","createOptionLabel","createPromptArray","structure","reduce","acc","src","length","push","objectSpread","AmountInput","CatchQuantityInput_templateObject","QRScanButton","CatchQuantityInput_templateObject2","QRCodeDiv","CatchQuantityInput_templateObject3","QRCodeContainer","CatchQuantityInput_templateObject4","DurationTypeSelect","CatchDurationInput_templateObject","DurationValueInput","CatchDurationInput_templateObject2","freepcisVault","capture","uri","auth","username","password","sendCatchEvent","asyncToGenerator","regenerator_default","mark","_callee","body","headers","_freepcisVault$captur","response","wrap","_context","prev","next","Headers","set","btoa","fetch","method","sent","console","log","stop","_x","apply","this","arguments","api","dapp","freepcis","generateQuantityElementList","fishCode","undefined","epcClass","quantity","uom","join","generateNonEmptyElement","element","createCatchPayload","_ref3","_ref2","catchArea","harvestEndDate","harvestStartDate","quantityList","firstName","lastName","fishingGearType","organizationName","productionMethod","language","vesselIdType","vesselIdString","vesselName","vesselOwnerName","vesselCertificationAgency","vesselCertificationIdentification","vesselCertificationStandard","vesselCertificationValue","dt","creationDate","eventTimeZoneOffset","_ref4","latitude","longitude","quantityElementList","vesselCaptainName","productionMethodCode","vesselID","vesselFlagState","DateTime","local","toISO","toFormat","Promise","resolve","fallback","navigator","geolocation","getCurrentPosition","position","coords","upper","productionMethodCodeMap","abrupt","debug","require","Ipfs","w","ipfs","repo","dappVault","ipfsRepo","silent","once","ipfsReady","initIpfs","reject","err","useIpfs","opts","_useState","useState","_useState2","slicedToArray","isIpfsReady","setIpfsReady","_useState3","_useState4","ipfsInitError","setIpfsInitError","_startIpfs","t0","error","useEffect","startIpfs","Container","animated","CatchReview_templateObject","QuantityItem","CatchReview_templateObject2","promptOrder","promptStructure","add_catchFishType","component","triggerNextStep","fishOptionList","disabled","setDisabled","setValue","_useCatchCacheState","useCatchCacheState","setCatchCache","onSubmit","e","preventDefault","fishKey","CatchFishTypeInput_StyledSelect","onChange","classes","selectControl","selectInput","replace","add_catchDuration","durationList","_useFormState","useFormState","durationType","_useFormState2","formState","_useFormState2$","number","select","_useCatchCacheState2","catchCache","endDate","startDate","minus","defineProperty","values","durationValue","toISODate","assign","required","target","add_catchQuantity","_useProfileState","steps","useProfileState","unitOfMeasurement","profile","qrCode","setQRCode","amount","uomMap","code","uuid","Qrcode_esm","size","add_catchArea","add_catchQuantityDone","add_catchReview","apiUrl","_useIpfs","_useLanguageState","useLanguageState","sendMethod","setSendMethod","_useState5","_useState7","_useState8","success","setSuccess","_useState9","setOriginId","_useState11","_useState12","ipfsHash","setIpfsHash","catchCacheRest","text","_useFormState3","price","_useFormState4","dappFormState","dappInput","_callee2","epcisDoc","sendToEOS","sendPromise","_context2","fao3AMap","catchResult","originId","all","keys","k","readOnly","placeholder","Fragment","style","color","href","rel","add_preservation","done","setDone","build_default","ref","rewardMe","type","config","emoji","LandingDataTable","role","aria-label","landingPromptOrder","SaleFishSelectInput_templateObject","SaleFishSelectInput","fishStore","JSON","parse","localStorage","getItem","catches","fish","setFish","SaleFishSelectInput_StyledSelect","setTimeout","removeItem","localStorageKey","chatCache","salePromptOrder","VesselCaptainNameInput_templateObject","StyledMiddleNameInput","VesselCaptainNameInput_templateObject2","VesselCaptainNameInput_templateObject3","StyledCaptainLabel","span","VesselCaptainNameInput_templateObject4","IDTypeSelect","VesselIDInput_templateObject","IDInput","VesselIDInput_templateObject2","isGearValid","partOne","partTwo","partThree","gearAbbreviationMap","partOneTwo","partOneTwoThree","gearTree","gearBaseList","surroundingNet_withPurseLines","surroundingNet_withPurseLines_oneBoatOperated","surroundingNet_withPurseLines_twoBoatsOperated","surroundingNet_withoutPurseLines","seineNets_beachSeines","seineNets_vesselSeines","seineNets_vesselSeines_danishSeines","seineNets_vesselSeines_scottishSeines","seineNets_vesselSeines_pairSeines","seineNets_seineNetsNotSpecified","trawls_bottomTrawls_beamTrawls","trawls_bottomTrawls_otterTrawls","trawls_bottomTrawls_pairTrawls","trawls_bottomTrawls_nephropsTrawls","trawls_bottomTrawls_shrimpTrawls","trawls_bottomTrawls_bottomTrawlsNotSpecified","trawls_midwaterTrawls_otterTrawls","trawls_midwaterTrawls_pairTrawls","trawls_midwaterTrawls_shrimpTrawls","trawls_midwaterTrawls_midwaterTrawlsNotSpecified","trawls_otterTwinTrawls","trawls_otterTrawlsNotSpecified","trawls_pairTrawlsNotSpecified","trawls_otherTrawlsNotSpecified","dredges_boatDredges","dredges_handDredges","liftNets_portableLiftNets","liftNets_boatOperatedLiftNets","liftNets_shoreOperatedStationaryLiftNets","liftNets_liftNetsNotSpecified","fallingGear_castNets","fallingGear_fallingGearNotSpecified","gillnetsAndEntanglingNets_setGillnetsAnchored","gillnetsAndEntanglingNets_driftnets","gillnetsAndEntanglingNets_encirclingGillnets","gillnetsAndEntanglingNets_fixedGillnetsOnStakes","gillnetsAndEntanglingNets_trammelNets","gillnetsAndEntanglingNets_combinedGillnetsTrammelNets","gillnetsAndEntanglingNets_gillnetsAndEntanglingNetsNotSpecified","gillnetsAndEntanglingNets_gillnetsNotSpecified","traps_stationaryUncoveredPoundNets","traps_pots","traps_fykeNets","traps_stowNets","traps_barriersFencesWeirsEtc","traps_aerialTraps","traps_trapsNotSpecified","hooksAndLines_handlinesAndPoleLinesHandOperated","hooksAndLines_handlinesAndPoleLinesMechanized","hooksAndLines_setLonglines","hooksAndLines_driftingLonglines","hooksAndLines_longlinesNotSpecified","hooksAndLines_trollingLines","hooksAndLines_hooksAndLinesNotSpecified","grapplingAndWounding_harpoons","harvestingMachines_pumps","harvestingMachines_mechanizedDredges","harvestingMachines_harvestingMachinesNotSpecified","FishingGearInput_templateObject","FishingGearInput_templateObject2","getGearKeyList","gearTreeNode","CaptainProfileReview_templateObject","CaptainProfileReview_templateObject2","VesselCertificationInput_templateObject","VesselCertificationInput_templateObject2","StyledHeaderLabel","VesselCertificationInput_templateObject3","CertificationInput","VesselCertificationInput_templateObject4","add_vesselCaptainName","_useCaptainProfileSta","useCaptainProfileState","_useCaptainProfileSta2","setProfile","VesselCaptainNameInput_Container","VesselCaptainNameInput_StyledForm","_formState$values","middleName","formName","maxLength","add_vesselName","user","add_vesselID","shipIDTypeOptionList","idType","vessel","name","add_fishingGearTypeCode","setPartOne","setPartTwo","_useState6","setPartThree","partOneOptions","partTwoOptions","setPartTwoOptions","_useState10","partThreeOptions","setPartThreeOptions","FishingGearInput_StyledForm","gearId","getGearId","fishingGearTypeCode","FishingGearInput_StyledSelect","clearable","onInputClear","add_productionMethod","add_ownership","add_vesselOwnerName","add_organization","add_organizationName","add_unitOfMeasurement","add_certificationHolder","add_certificationStandard","VesselCertificationInput_Container","VesselCertificationInput_StyledForm","vesselCertification","standard","prompt_profileReview","captainProfile","idString","agency","identification","CaptainProfileReview_Container","CaptainProfileReview_StyledForm","completed","csvDemo1Header","createSender","informationProviderID","informationProviderContactName","informationProviderEmail","createReceiver","destinationID","destinationContactName","destinationEmail","createFishVocab","seafoodID","speciesCode","speciesScientificName","tradeItemDescription","tradeItemConditionCode","createVocabEl","createOutputProductVocab","data","outputProductID","informationProvider","descriptionShort","outputProductName","createLocationVocab","processorID","processorOwnerName","streetAddressOne","processorAddress1","streetAddressTwo","processorAddress2","city","processorCity","state","processorState","postalCode","processorPostalCode","countryCode","processorCountryCode","contact","processorContactName","email","processorContactEmail","createFishCatchEvent","eventDateV1","eventTimeZoneOffsetV1","readPointV1","bizLocationV1","seafoodQuantity","seafoodUOM","vesselOperator","vesselRegistration","catchAreaFAO","mscCertification","landingAuthority","landingAuthorization","visibilityEvent","productOwnerV1","createProcessEvent","eventDateV2","eventTimeZoneOffsetV2","inputSeafoodID","inputSeafoodQuantity","inputSeafoodUOM","outputQuantity","outputUOM","readPointV2","bizLocationV2","lotNumber","productionDate","bestBeforeDate","storageStateCode","firstFreezeDate","transformationVisibilityEvent","productOwnerV3","createAggregatedXmlDemo","_ref5","dataList","_dataList$","fishIdSet","fishVocabList","outputProductIdSet","outputProductVocabList","locationIdSet","locationVocabList","Set","filter","_ref6","has","add","_ref7","_ref8","createCsvDemo1Payload","_ref9","_x2","StyledGrommet","Grommet","CsvFileInput_templateObject","DataContainer","CsvFileInput_templateObject2","FileDropContainer","CsvFileInput_templateObject3","HiddenContainer","CsvFileInput_templateObject4","HiddenFileInput","CsvFileInput_templateObject5","FileDropText","CsvFileInput_templateObject6","AccordionContent","Box","CsvFileInput_templateObject7","CodeContainer","CsvFileInput_templateObject8","CsvFileInput","fileInputRef","useRef","setSent","epcisXmlList","setEpcisXmlList","aggregatedXml","setAggregatedXml","processFile","file","readerStream","csvRowList","parsedData","split","pop","fileReaderStream","neatCsv","toArray","slice","t1","current","click","FileDrop","onDrop","accept","evt","files","grommet","Heading","level","Accordion","multiple","margin","d","AccordionPanel","blob","Blob","saveAs","comp_test","CsvFileInput_CsvFileInput","DappProducerReceiveInput_templateObject","EpcisDataContainer","DappProducerReceiveInput_templateObject2","EpcisDataViewer","DappProducerReceiveInput_templateObject3","form_dappProducerReceiveInput","previousStep","setError","epcisData","setEpcisData","receiptId","setReceiptId","onFinish","event","DappProducerReceiveInput_Container","claimCatchEvent","RpcError","stringify","json","copy","_callee3","_context3","_x3","comp_csvInput","isDebug","savedLanguage","createPersistedState","createSteps","isProfileSetup","toConsumableArray","end","SaleFishSelectInput_SaleFishSelectInput","validator","LandingDataCard_LandingDataTable","previousValue","CaptainProfile_templateObject","ProfileIcon","CaptainProfile_templateObject2","CloseProfileModalButton","CaptainProfile_templateObject3","ItemContainer","CaptainProfile_templateObject4","CaptainProfile_templateObject5","CaptainProfile","open","setOpen","_useProfileState2","profileFormRest","springRef","useSpring","from","opacity","to","transRef","closeButtonRef","closeButtonPopin","stiff","transform","useChain","CaptainProfile_Container","width","height","Close_esm","CaptainProfile_StyledForm","HeaderContainer","Header_templateObject","Header_templateObject2","Header","onLanguageChanged","Header_StyledSelect","valueRenderer","index_es","svg","lang","CaptainProfile_CaptainProfile","App_templateObject","StyledChatBot","ChatBot","App_templateObject2","Boolean","hostname","match","ReactDOM","render","hasEnded","setHasEnded","_useLanguageState2","setLanguage","styled_components_browser_esm","App_Container","_theme_RefreshButton","headerComponent","Header_Header","newLanguage","enableMobileAutoFocus","botAvatar","hideUserAvatar","cache","cacheName","userAvatar","userDelay","handleEnd","document","getElementById","serviceWorker","ready","then","registration","unregister","table","account","eosiotoken","contract","producer","encodeNemoTXValue","blockNum","decodeNemoTXValue","tx","D_Project_Github_nemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","D_Project_Github_nemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","txId","signatureProvider","rpc","tableData","_tableData$rows","_tableData$rows$","buyer","seller","tax","result","receipt","claimResult","epcisDataBuffer","JsSignatureProvider","JsonRpc","Api","get_table_rows","scope","lower_bound","limit","show_payer","D_Project_Github_nemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","rows","Error","transact","actions","authorization","actor","permission","memo","blocksBehind","expireSeconds","transaction_id","processed","block_num","cat","toString","content","results","hash","Buffer","_x4","_x5"],"mappings":"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","file":"static/js/main.b0a37d27.chunk.js","sourcesContent":["import LocalizedStrings from \"react-localization\";\r\n\r\nimport { en } from \"./en\";\r\nimport { vn } from \"./vn\";\r\nimport { rs } from \"./rs\";\r\n\r\nexport const strings: any = new LocalizedStrings({\r\n  en,\r\n  vn,\r\n  rs\r\n});\r\n\r\nexport const languages = [\r\n    { key: \"us\", value: \"us\", flag: \"us\", label: \"United States\" },\r\n    { key: \"vn\", value: \"vn\", flag: \"vn\", label: \"Vietnam\" },\r\n    { key: \"rs\", value: \"rs\", flag: \"rs\", label: \"Serbia\" }\r\n  ];","export const en = {\r\n  input_placeholder: \"Type your answer . . .\",\r\n\r\n  atlanticCod: \"Atlantic Cod\",\r\n  blueCrab: \"Blue Crab (Atlantic)\",\r\n  dolphinFish: \"Dolphinfish (Mahi Mahi)\",\r\n  grouper: \"Potato Grouper\",\r\n  kingCrab: \"King Crab (red)\",\r\n  pacificCod: \"Pacific Cod\",\r\n  redSnapper: \"Red Snapper\",\r\n  seaCucumber: \"Black Spotted Sea Cucumber\",\r\n  shark: \"Frilled Shark\",\r\n  swordfish: \"Swordfish\",\r\n  albacoreTuna: \"Albacore Tuna\",\r\n  bigeyeTuna: \"Bigeye Tuna\",\r\n  skipjackTuna: \"Skipjack Tuna\",\r\n  yellowfinTuna: \"Yellowfin Tuna\",\r\n  bluefinTuna: \"Bluefin Tuna\",\r\n\r\n  prompt_welcomeNew: \"Welcome aboard Captain 🎉🎉🎉\",\r\n  prompt_introduceNemo:\r\n    \"My name is Nemo and I am here to replace your paper and pencil logbook (as long as your phone is charged 🔋 . . . )\",\r\n  prompt_vesselCaptainName: \"How may I address you?\",\r\n  // Answer with Custom Component: Call me Captain FIRSTNAME LASTNAME\r\n\r\n  captain: \"Captain\",\r\n  prompt_vesselName:\r\n    \"Very well Captain {previousValue}. What is the name of your ship?\",\r\n  prompt_vesselID: \"And what is {previousValue}'s IMO or MMSI?\",\r\n  imo: \"IMO\",\r\n  mmsi: \"MMSI\",\r\n  // Answer with custom component: a selector with Name, IMO, or MMSI next to a text input\r\n  prompt_fishingGearTypeCode: \"What fishing gear is on the ship?\",\r\n  // Answer with 3 subsequence styled select\r\n  // prompt_\r\n\r\n  selectGearBase: \"Select Base Gear . . .\",\r\n  selectGearSubtype: \"Select Sub-type . . .\",\r\n  selectGearOptionalType: \"Optional type . . .\",\r\n\r\n  prompt_productionMethod: \"How will you be fishing?\",\r\n  // Answer with 3 choices: Aquaculture, Inland Fishery, Marine Fishery\r\n\r\n  aquaculture: \"Aquaculture\",\r\n  inlandFishery: \"Inland Fishery\",\r\n  marineFishery: \"Marine Fishery\",\r\n\r\n  prompt_ownership: \"Are you the ship's owner?\",\r\n  prompt_vesselOwnerName: \"Who is the owner of this ship?\",\r\n\r\n  // <input-name> NO.disabled\r\n  //              YES\r\n\r\n  prompt_organization: \"Do you belong to a larger organization?\",\r\n  // <input-name> YES.disabled\r\n  //              NO\r\n\r\n  prompt_organizationName: \"What is the name of this organization/company?\",\r\n\r\n  prompt_certificationHolder: \"Is your vessel covered by the MSC?\",\r\n  // <input-name> YES.disabled\r\n  //              NO\r\n  certification: \"Certification\",\r\n\r\n  form_certificationAgencyLabel: \"Agency\",\r\n  form_certificationValueLabel: \"Cert. #\",\r\n  form_certificationIdentificationLabel: \"Cert. ID\",\r\n\r\n  form_certificationAgencyPlaceholder: \"Agency 101\",\r\n  form_certificationValuePlaceholder: \"999\",\r\n  form_certificationIdentificationPlaceholder: \"M12554-12486-FC-GFF-1Y\",\r\n  \r\n  form_firstNamePlaceholder: \"First\",\r\n  form_lastNamePlaceholder: \"Last\",\r\n  form_middleNamePlaceholder: \"M\",\r\n  \r\n  prompt_certificationStandard: \"Please provide your certification information:\",\r\n\r\n  prompt_unitOfMeasurement: \"Lastly, what's your prefered unit of measurement?\",\r\n  // 2 choices\r\n\r\n  prompt_setupProfileCompleted: \"Please review your information below:\",\r\n  prompt_profileDone: \"You are all set Captain! NOTE: You can change your information anytime! Simply open your profile via the button in the top right corner.\",\r\n\r\n  kilogram: \"Kilogram (kg)\",\r\n  pound: \"Pound (lb)\",\r\n\r\n  prompt_welcome: \"Welcome back Captain!\",\r\n  prompt_end: \"See you soon Captain!\",\r\n  prompt_anotherOne: \"What else can I add for you Captain?\",\r\n  prompt_unavailable: \"I'm sorry Captain, I'm afraid I can't do that . . .\",\r\n\r\n  prompt_initial: \"What would you like to add?\",\r\n\r\n  yes: \"✅ YES\",\r\n  no: \"❎ NO\",\r\n\r\n  days: \"Day\",\r\n  weeks: \"Week\",\r\n  months: \"Month\",\r\n\r\n  addNew: \"Add new\",\r\n\r\n  csv: \"Upload csv 📁\",\r\n  receive: \"Buy ⭐\",\r\n  catch: \"Catch 🐟\",\r\n  transport: \"Transport 🚢\",\r\n  landing: \"Landing ⚓\",\r\n  sale: \"Sell 💰\",\r\n\r\n  test: \"TEST 🙉\",\r\n  \r\n  nothing: \"I'm good 😁\",\r\n\r\n  prompt_csv: \"Let's get this done!\",\r\n\r\n  prompt_nothing: \"Smooth sailing 💨\",\r\n\r\n  prompt_test: \"WELCOME TO THE TESTING FLOW . . .\",\r\n\r\n  prompt_receive: \"Let's buy that data record 🌐\",\r\n\r\n  prompt_catch: \"Let's get this done ⚡\",\r\n\r\n  prompt_catchFishType: \"What have you caught?\",\r\n  prompt_catchDuration: \"How long was the journey?\",\r\n\r\n  prompt_catchHarvestStartDate: \"When did you start this catch?\",\r\n  // Show option to pick a time range?\r\n  prompt_catchHarvestEndDate: \"When did you finish this catch?\",\r\n  // Show option to manually input date, or simply say now.\r\n  \r\n  prompt_catchArea: \"Which FAO catch area did you fish?\",\r\n\r\n  prompt_catchQuantity: \"Please scan the container QR code and provide the quantity:\",\r\n  prompt_catchQuantityListDone: \"Is that the last container?\",\r\n  \r\n  prompt_catchReview: \"Please review the catch data:\",\r\n\r\n  prompt_catchCongrat: \"🐟 Congratulations on the catch! 🐟\",\r\n  \r\n  prompt_preservation: \"How are you preserving them?\",\r\n\r\n  add_quantityPlaceholder: \"Enter quantity in \",\r\n\r\n  chilled: \"Frozen ❄\",\r\n  salted: \"Dried ♨\",\r\n  fresh: \"Fresh ✨\",\r\n\r\n  prompt_sale: \"What would you like to sell?\",\r\n  prompt_size: \"Dimension of this sell? (in cubic meter)\",\r\n  prompt_weight: \"Total weight? (in Kilo TONS)\",\r\n  prompt_value: \"How much does it cost? (in USD $)\",\r\n  prompt_saleConfirmation: \"Your order has been sent.\",\r\n\r\n  prompt_landing: \"Have you finished unpacking?\",\r\n  // prompt_cargoLoad: \"How heavy \"\r\n  prompt_landingConfirm:\r\n    \"⚓ Your time, container, and geolocation has been automatically recorded! Please review the data for accuracy:\",\r\n  inprogress: \"In-progress ⏳\",\r\n  finished: \"Finished 🏁\",\r\n\r\n  prompt_confirmData: \"Does the data seem accurate?\",\r\n\r\n  dataIsAccurate: \"Yes\",\r\n  dataIsInaccurate: \"No\",\r\n\r\n  prompt_errorReported:\r\n    \"I have reported this error to our engineers. TODO: Continue this flow to add self-input data\",\r\n\r\n  date: \"Date\",\r\n  time: \"Time\",\r\n  timeZone: \"Time Zone\",\r\n  container: \"Container\",\r\n  geoLocation: \"Location\",\r\n\r\n  // Gears:\r\n\r\n  surroundingNet: \"Surrounding net\",\r\n  withPurseLines: \"With purse lines\",\r\n  oneBoatOperated: \"One boat operated\",\r\n  twoBoatsOperated: \"Two boats operated\",\r\n  withoutPurseLines: \"Without purse lines (lampara)\",\r\n  seineNets: \"Seine nets\",\r\n  beachSeines: \"Beach seines\",\r\n  vesselSeines: \"Vessel seines\",\r\n  danishSeines: \"Danish seines\",\r\n  scottishSeines: \"Scottish seines\",\r\n  pairSeines: \"Pair seines\",\r\n  seineNetsNotSpecified: \"Seine nets (not specified)\",\r\n  trawls: \"Trawls\",\r\n  bottomTrawls: \"Bottom trawls\",\r\n  beamTrawls: \"Beam trawls\",\r\n  otterTrawls: \"Otter trawls\",\r\n  pairTrawls: \"Pair trawls\",\r\n  nephropsTrawls: \"Nephrops trawls\",\r\n  shrimpTrawls: \"Shrimp trawls\",\r\n  bottomTrawlsNotSpecified: \"Bottom trawls (not specified)\",\r\n  midwaterTrawls: \"Midwater trawls\",\r\n  midwaterTrawlsNotSpecified: \"Midwater trawls (not specified)\",\r\n  otterTwinTrawls: \"Otter twin trawls\",\r\n  otterTrawlsNotSpecified: \"Otter trawls (not specified)\",\r\n  pairTrawlsNotSpecified: \"Pair trawls (not specified)\",\r\n  otherTrawlsNotSpecified: \"Other trawls (not specified)\",\r\n  dredges: \"Dredges\",\r\n  boatDredges: \"Boat dredges\",\r\n  handDredges: \"Hand dredges\",\r\n  liftNets: \"Lift nets\",\r\n  portableLiftNets: \"Portable lift nets\",\r\n  boatOperatedLiftNets: \"Boat operated lift nets\",\r\n  shoreOperatedStationaryLiftNets: \"Shore operated stationary lift nets\",\r\n  liftNetsNotSpecified: \"Lift nets (not specified)\",\r\n  fallingGear: \"Falling gear\",\r\n  castNets: \"Cast nets\",\r\n  fallingGearNotSpecified: \"Falling gear (not specified)\",\r\n  gillnetsAndEntanglingNets: \"Gillnets and entangling nets\",\r\n  setGillnetsAnchored: \"Set gillnets (anchored)\",\r\n  driftnets: \"Driftnets\",\r\n  encirclingGillnets: \"Encircling gillnets\",\r\n  fixedGillnetsOnStakes: \"Fixed gillnets (on stakes)\",\r\n  trammelNets: \"Trammel nets\",\r\n  combinedGillnetsTrammelNets: \"Combined gillnets trammel nets\",\r\n  gillnetsAndEntanglingNetsNotSpecified:\r\n    \"Gillnets and entangling nets (not specified)\",\r\n  gillnetsNotSpecified: \"Gillnets (not specified)\",\r\n  traps: \"Traps\",\r\n  stationaryUncoveredPoundNets: \"Stationary uncovered pound nets\",\r\n  pots: \"Pots\",\r\n  fykeNets: \"Fyke nets\",\r\n  stowNets: \"Stow nets\",\r\n  barriersFencesWeirsEtc: \"Barriers, fences, weirs, etc\",\r\n  aerialTraps: \"Aerial traps\",\r\n  trapsNotSpecified: \"Traps (not specified)\",\r\n  hooksAndLines: \"Hooks and lines\",\r\n  handlinesAndPoleLinesHandOperated: \"Handlines and pole lines (hand-operated)\",\r\n  handlinesAndPoleLinesMechanized: \"Handlines and pole lines (mechanized)\",\r\n  setLonglines: \"Set longlines\",\r\n  driftingLonglines: \"Drifting longlines\",\r\n  longlinesNotSpecified: \"Longlines (not specified)\",\r\n  trollingLines: \"Trolling lines\",\r\n  hooksAndLinesNotSpecified: \"Hooks and lines (not specified)\",\r\n  grapplingAndWounding: \"Grappling and wounding\",\r\n  harpoons: \"Harpoons\",\r\n  harvestingMachines: \"Harvesting machines\",\r\n  pumps: \"Pumps\",\r\n  mechanizedDredges: \"Mechanized dredges\",\r\n  harvestingMachinesNotSpecified: \"Harvesting machines (not specified)\",\r\n  miscellaneousGear: \"Miscellaneous gear\",\r\n  recreationalFishingGear: \"Recreational fishing gear\",\r\n  gearNotKnowOrNotSpecified: \"Gear not know or (not specified)\"\r\n};\r\n","export const vn = {\r\n  input_placeholder: \"Xin giao nhập thông tin\",\r\n\r\n  atlanticCod: \"Cá tuyết Đại Tây Dương\",\r\n  blueCrab: \"Cua xanh (Đại Tây Dương)\",\r\n  dolphinFish: \"Cá heo (Mahi Mahi)\",\r\n  grouper: \"Cá mú\",\r\n  kingCrab: \"Cua Vua\",\r\n  pacificCod: \"Cod Thái Bình Dương\",\r\n  redSnapper: \"Cá hồng\",\r\n  seaCucumber: \"Dưa chuột biển\",\r\n  shark: \"Cá mập\",\r\n  swordfish: \"Cá kiếm\",\r\n  albacoreTuna: \"Cá ngừ\",\r\n  bigeyeTuna: \"Cá ngừ mắt to\",\r\n  skipjackTuna: \"Cá ngừ vằn\",\r\n  yellowfinTuna: \"Cá ngừ vây vàng\",\r\n  bluefinTuna: \"Cá ngừ vây xanh\",\r\n\r\n  prompt_welcome: \"Chào mừng trở lại thuyền trưởng!\",\r\n  prompt_end: \"Hẹn gặp lại thuyền trưởng!\",\r\n  prompt_unavailable:\r\n    \"Xin lỗi Thuyền trưởng, phần mềm chưa được cài đặt  . . .\",\r\n\r\n  prompt_initial: \"Thuyền trưởng muốn làm gì??\",\r\n\r\n  addNew: \"Thêm mới\",\r\n  catch: \"Bắt 🐟\",\r\n  transport: \"Di chuyển 🚢\",\r\n  landing: \"Hạ cánh ⚓\",\r\n  sale: \"Giao bán 💰\",\r\n  nothing: \"Gọi đùa thôi 😁\",\r\n\r\n  prompt_catch: \"Loại bắt nào?\"\r\n}","export const rs = {\r\n  input_placeholder: \"Реците капетане! Ахои!\",\r\n  prompt_welcome: \"Добродошли назад капетане!\",\r\n  prompt_end: \"Видимо се ускоро капетане!\",\r\n  prompt_unavailable:\r\n    \"Жао ми је капетане, Нажалост то не могу да урадим . . .\",\r\n  prompt_quantity: \"Колико {previousValue} сте уловили?\",\r\n  prompt_preservation: \"Како их чувате?\",\r\n  prompt_catchCongrat: \"🐟 Браво мајсторе! 🐟\",\r\n\r\n  chilled: \"Замрзнуто ❄\",\r\n  salted: \"Сушено ♨\",\r\n  fresh: \"Свеже ✨\",\r\n\r\n  atlanticCod: \"Атлански бакалар\",\r\n  blueCrab: \"Плави рак (Атлантик)\",\r\n  dolphinFish: \"Долпхинфисх (Махи Махи)\",\r\n  grouper: \"Групер\",\r\n  kingCrab: \"Краљевска краба\",\r\n  pacificCod: \"Пацифички koбакалар\",\r\n  redSnapper: \"Црвени снапер\",\r\n  seaCucumber: \"Морски краставац\",\r\n  shark: \"Ајкула\",\r\n  swordfish: \"Сабљарка\",\r\n  albacoreTuna: \"Дугоперајна туна\",\r\n  bigeyeTuna: \"Велика ока туна\",\r\n  skipjackTuna: \"Пругаста туна\",\r\n  yellowfinTuna: \"Жутоперајна туна\",\r\n  bluefinTuna: \"Плавоперајна туна\",\r\n\r\n  prompt_initial: \"Шта желите да радите?\",\r\n\r\n  addNew: \"Додај ново\",\r\n  catch: \"Улова 🐟\",\r\n  prompt_catch: \"Каква врста уловe?\",\r\n  transport: \"Транспорт 🚢\",\r\n  landing: \"Пристајање ⚓\",\r\n  sale: \"Продаја  💰\",\r\n  nothing: \"Нисшта за сад 😁\",\r\n\r\n  prompt_landing: \"Јесте ли завршили распакирање?\",\r\n  prompt_landingConfirm:\r\n    \"⚓ Ваше време, контејнер и геолокација су аутоматски прејављени! Молимо вас да прегледате податке за тачност\",\r\n  inprogress: \"У току. ⏳\",\r\n  finished: \"Завршено 🏁\",\r\n\r\n  prompt_confirmData: \"Да ли подаци изгледају тачни?\",\r\n\r\n  dataIsAccurate: \"Како да не\",\r\n  dataIsInaccurate: \"Ма какви\",\r\n\r\n  prompt_errorReported:\r\n    \"I have reported this error to our engineers. TODO: Continue this flow to add self-input data\",\r\n\r\n  date: \"Датум\",\r\n  time: \"Време\",\r\n  timeZone: \"Временска Зона\",\r\n  container: \"Контејнер\",\r\n  geoLocation: \"Локација\"\r\n}","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Select from \"react-styled-select\";\r\nimport { Refresh } from \"styled-icons/material/Refresh\";\r\nimport { Check } from \"styled-icons/material/Check\";\r\n\r\nexport const theme = {\r\n  background: \"#f5f8fb\",\r\n  // fontFamily: \"Helvetica Neue\",\r\n  headerBgColor: \"#00b0ff\",\r\n  headerFontColor: \"#fff\",\r\n  botBubbleColor: \"#00b0ff\",\r\n  botFontColor: \"#fff\",\r\n  userBubbleColor: \"#fff\",\r\n  userFontColor: \"#4a4a4a\",\r\n  dangerColor: \"red\"\r\n};\r\n\r\nconst CircleButton = styled.button`\r\n  width: 4em;\r\n  height: 4em;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  border: none;\r\n  bottom: 5em;\r\n  z-index: 1000;\r\n  background: ${prop => prop.theme.headerBgColor};\r\n  color: ${prop => prop.theme.headerFontColor};\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const StyledColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\n\r\nexport const RefreshButton = () => (\r\n  <CircleButton>\r\n    <Refresh onClick={() => window.location.reload()} />\r\n  </CircleButton>\r\n);\r\n\r\nexport const StyledInput = styled.input`\r\n  width: 80px;\r\n  display: inline-flex;\r\n  font-weight: bold;\r\n  border: none;\r\n  font-size: 1em;\r\n  border-bottom: 1px black solid;\r\n  outline: none;\r\n`;\r\n\r\nexport const LabeledInput = styled(({ className, label, ...rest }: any) => (\r\n  <div className={className}>\r\n    <label>{label}</label>\r\n    <StyledInput {...rest} />\r\n  </div>\r\n))`\r\n  display: inline-flex;\r\n  width: 100%;\r\n  label {\r\n    width: 25%;\r\n  }\r\n  input {\r\n    width: 75%;\r\n    :disabled {\r\n      cursor: not-allowed;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Divider = styled.hr`\r\n  width: 80%;\r\n`\r\n\r\nexport const ReviewInput = styled(LabeledInput)`\r\n  width: 100%;\r\n  margin-bottom: 0.5em;\r\n\r\n  label {\r\n    color: black;\r\n    width: 50%;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n  }\r\n  input {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\ninterface BackgroundButtonProps {\r\n  readonly background?: string;\r\n};\r\n\r\nexport const StyledButton = styled.button<BackgroundButtonProps>`\r\n  cursor: pointer;\r\n  border: none;\r\n  background: ${p => p.background || p.theme.botBubbleColor};\r\n  color: ${p => p.theme.botFontColor};\r\n  height: 30px;\r\n\r\n  :hover {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  :disabled {\r\n    background: ${p => p.theme.userFontColor};\r\n  }\r\n\r\n  :disabled:hover {\r\n    cursor: not-allowed;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const FillButton = styled(StyledButton)`\r\n  margin-top: 1em;\r\n  width: 100%;\r\n`\r\n\r\nexport const StyledSubmitButton = styled((props: any) => (\r\n  <StyledButton {...props}>\r\n    <Check />\r\n  </StyledButton>\r\n))`\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  svg {\r\n    fill: ${p => p.theme.botFontColor};\r\n  }\r\n`;\r\n\r\nexport const StyledColumnForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledRowForm = styled(StyledColumnForm)`\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const RowDiv = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledSelect = styled(Select)`\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nexport const StyledLabel = styled.label`\r\n  font-weight: 700;\r\n`\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Select from \"react-styled-select\";\r\nimport { fishOptionList, useCatchCacheState } from \"../_data\";\r\nimport { StyledSubmitButton } from \"../_theme\";\r\n\r\nconst StyledSelect = styled(Select)`\r\n  width: 85%;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  align-items: center;\r\n`;\r\n\r\n\r\nexport const CatchFishTypeInput = ({ triggerNextStep } : any) => {\r\n  const options = fishOptionList;\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [value, setValue] = useState(options[0].value);\r\n  const [, setCatchCache] = useCatchCacheState({})\r\n  \r\n  return (\r\n    <StyledForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        // console.log(steps);\r\n        // console.log(formState.values);\r\n\r\n        setDisabled(true);\r\n\r\n        setCatchCache({\r\n          fishKey: value\r\n        })\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n    <StyledSelect\r\n      value={value}\r\n      disabled={disabled}\r\n      options={options}\r\n      onChange={setValue}\r\n      classes={{\r\n        selectControl: \"select-control\",\r\n        selectInput: \"select-input\"\r\n      }}\r\n    />\r\n\r\n    <StyledSubmitButton disabled={disabled} />\r\n  </StyledForm>\r\n  );\r\n};\r\n","import { strings } from \"../i18n\";\r\n\r\nexport const createSelectOptionList = (list: Array<string>) =>\r\n  list.map(value => ({\r\n    value,\r\n    label: `${strings[value]}`\r\n  }));\r\n\r\nexport const numberValidator = (value: number) => {\r\n  if (isNaN(value) || value <= 0) {\r\n    return \"It should be a number greater than 0!\";\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const appendTrigger = (p: any, i: number, order: Array<string>) => {\r\n  const trigger = order[i + 1];\r\n\r\n  if (!p.options) {\r\n    p.trigger = trigger;\r\n    if (p.hideInput && !p.waitAction && !p.message) {\r\n      p.message = strings[p.id];\r\n    }\r\n  } else {\r\n    p.options = p.options.map((o: any, j: number) => {\r\n      if (p.triggers) {\r\n        o.trigger = p.triggers[j]\r\n      } else {\r\n        o.trigger = trigger;\r\n      }\r\n      return o;\r\n    });\r\n  }\r\n  delete p.triggers;\r\n  return p;\r\n};\r\n\r\nexport const createOptionLabel = (value: string) => ({\r\n  value,\r\n  label: strings[value] || value\r\n});\r\n\r\nexport const createPromptArray = (order: Array<string>, structure: any) =>\r\n  order.reduce((acc, id: string, i, src) => {\r\n    if (i < src.length - 1) {\r\n      acc.push(appendTrigger(\r\n        {\r\n          id,\r\n          ...(structure[id] || { hideInput: true })\r\n        },\r\n        i,\r\n        order\r\n      ) as never);\r\n    }\r\n    return acc;\r\n  }, []);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { StyledInput, StyledSubmitButton, StyledColumnForm, RowDiv, StyledButton } from \"../_theme\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { useProfileState, useCatchCacheState, uomMap } from \"../_data\";\r\nimport { strings } from \"../i18n\";\r\n\r\nimport {Qrcode} from 'styled-icons/icomoon/Qrcode'\r\n\r\nimport uuid from 'uuid/v4'\r\n\r\ninterface CatchQuantityFormFields {\r\n  amount: number;\r\n}\r\n\r\nconst AmountInput = styled(StyledInput)`\r\n  width: 50%;\r\n  text-align: right;\r\n`;\r\n\r\nconst QRScanButton = styled(StyledButton)`\r\n  width: 30%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`\r\nconst QRCodeDiv = styled.div`\r\n  width: 60%;\r\n`\r\n\r\nconst QRCodeContainer = styled(RowDiv)`\r\n  height: 3em;\r\n`\r\n\r\nexport const CatchQuantityInput = ({ triggerNextStep, steps }: any) => {\r\n  const [profile] = useProfileState({\r\n    unitOfMeasurement: \"kilogram\"\r\n  });\r\n\r\n  const [catchCache, setCatchCache] = useCatchCacheState({\r\n    quantityList: []\r\n  });\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const [formState, { number }] = useFormState<CatchQuantityFormFields>();\r\n\r\n  const [qrCode, setQRCode] = useState(\"\")\r\n\r\n  return (\r\n    <StyledColumnForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        // console.log(steps);\r\n        // console.log(formState.values);\r\n\r\n        setDisabled(true);\r\n\r\n        const quantityList = catchCache.quantityList || []\r\n\r\n        quantityList.push({\r\n          epcClass: qrCode,\r\n          quantity: formState.values.amount,\r\n          uom: uomMap[profile.unitOfMeasurement]\r\n        })\r\n\r\n        setCatchCache({\r\n            ...catchCache,\r\n            quantityList\r\n        });\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n      <QRCodeContainer>\r\n        <QRCodeDiv>\r\n          {qrCode}\r\n        </QRCodeDiv>\r\n        <QRScanButton onClick={(e)=>{\r\n          e.preventDefault()\r\n\r\n          const code = uuid()\r\n\r\n          setQRCode(code)\r\n        }}>\r\n          Scan QR {\" \"}\r\n          <Qrcode size=\"15\"/>\r\n        </QRScanButton>\r\n      </QRCodeContainer>\r\n      \r\n      <RowDiv>\r\n        <AmountInput required disabled={disabled} {...number('amount')}/>\r\n        <div>\r\n          {strings[profile.unitOfMeasurement]}\r\n        </div>\r\n        <StyledSubmitButton disabled={disabled || !qrCode} />\r\n      </RowDiv>\r\n    </StyledColumnForm>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { durationList, useCatchCacheState } from \"../_data\";\r\nimport {\r\n  StyledInput,\r\n  StyledSubmitButton,\r\n  StyledSelect,\r\n  StyledRowForm\r\n} from \"../_theme\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { createSelectOptionList } from \"../core/utils\";\r\nimport { DateTime } from \"luxon\";\r\n\r\ninterface CatchDurationFormFields {\r\n  durationValue: number;\r\n  durationType: string;\r\n}\r\n\r\nconst DurationTypeSelect = styled(StyledSelect)`\r\n  width: 30%;\r\n`;\r\n\r\nconst DurationValueInput = styled(StyledInput)`\r\n  width: 50%;\r\n  text-align: right;\r\n`;\r\n\r\nexport const CatchDurationInput = ({ triggerNextStep }: any) => {\r\n  const options = createSelectOptionList(durationList);\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const [formState, { number, select }] = useFormState<\r\n    CatchDurationFormFields\r\n  >({\r\n    durationType: durationList[0]\r\n  });\r\n\r\n  const [catchCache, setCatchCache] = useCatchCacheState({});\r\n\r\n  return (\r\n    <StyledRowForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n\r\n        setDisabled(true);\r\n\r\n        const endDate = DateTime.local();\r\n        const startDate = endDate.minus({\r\n          [formState.values.durationType]: formState.values.durationValue\r\n        });\r\n\r\n        const harvestEndDate = endDate.toISODate();\r\n        const harvestStartDate = startDate.toISODate();\r\n\r\n        setCatchCache({\r\n          ...catchCache,\r\n          harvestStartDate,\r\n          harvestEndDate\r\n        });\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n      <DurationValueInput required disabled={disabled} {...number(\"durationValue\")} />\r\n\r\n      <DurationTypeSelect\r\n        onChange={(value: string) =>\r\n          select(\"durationType\").onChange({ target: { value } })\r\n        }\r\n        value={select(\"durationType\").value}\r\n        disabled={disabled}\r\n        options={options}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n\r\n      <StyledSubmitButton disabled={disabled} />\r\n    </StyledRowForm>\r\n  );\r\n};\r\n","const freeEpcisUrl = 'http://www.freepcis.com/server/nemo/capture'\r\n\r\nexport const freepcisVault = {\r\n  capture: {\r\n    uri: 'https://cors-anywhere.herokuapp.com/'+ freeEpcisUrl,\r\n    auth: {\r\n      username: 'nemo',\r\n      password: 'test001'\r\n    }\r\n  }\r\n}\r\n\r\nexport const sendCatchEvent = async (body : any) => {\r\n\r\n  const headers = new Headers()\r\n\r\n  const {uri, auth} = freepcisVault.capture;\r\n  \r\n  headers.set('Authorization', 'Basic ' + btoa(auth.username + \":\" + auth.password));\r\n  headers.set('Content-Type', 'text/xml');\r\n  \r\n  const response = await fetch(uri,{\r\n    method: 'POST',\r\n    headers,\r\n    body\r\n  })\r\n\r\n  console.log(response)\r\n};\r\n","import * as dapp from './dapp'\r\nimport * as freepcis from './freepcis'\r\n\r\nexport default {\r\n  dapp,\r\n  freepcis\r\n}","import { DateTime } from \"luxon\";\r\nimport { upper } from \"case\";\r\nimport { productionMethodCodeMap } from \"../_data\";\r\n\r\nconst getCoordinate = () =>\r\n  new Promise(resolve => {\r\n    const fallback = {\r\n      latitude: 0.886256,\r\n      longitude: 148.445297\r\n    };\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        position => {\r\n          resolve(position.coords);\r\n        },\r\n        () => resolve(fallback)\r\n      );\r\n    } else {\r\n      resolve(fallback);\r\n    }\r\n  });\r\n\r\nconst generateQuantityElementList = (fishCode = \"\", quantityList = []) =>\r\n  quantityList\r\n    .map(\r\n      ({ epcClass, quantity, uom }: any) => `\r\n    <quantityElement>\r\n      <epcClass>http://epcis.nemo.com/user/vocab/obj/${fishCode}.${epcClass}</epcClass>\r\n      <quantity>${quantity}</quantity>\r\n      <uom>${uom}</uom>\r\n    </quantityElement>`\r\n    )\r\n    .join(\"\\n\");\r\n\r\nconst generateNonEmptyElement = (element: string, value: string) =>\r\n  value ? `<${element}>${value}</${element}>` : \"\";\r\n\r\nexport const createCatchPayload = async ({\r\n  catchArea,\r\n  fishCode,\r\n  harvestEndDate,\r\n  harvestStartDate,\r\n  quantityList,\r\n\r\n  firstName,\r\n  lastName,\r\n\r\n  fishingGearType,\r\n  organizationName,\r\n  productionMethod,\r\n\r\n  language,\r\n\r\n  vesselIdType,\r\n  vesselIdString,\r\n  vesselName,\r\n  vesselOwnerName,\r\n\r\n  vesselCertificationAgency,\r\n  vesselCertificationIdentification,\r\n  vesselCertificationStandard,\r\n  vesselCertificationValue\r\n}: any) => {\r\n  const dt = DateTime.local();\r\n\r\n  const creationDate = dt.toISO();\r\n  const eventTimeZoneOffset = dt.toFormat(\"ZZ\");\r\n\r\n  const { latitude, longitude } = (await getCoordinate()) as any;\r\n\r\n  const quantityElementList = generateQuantityElementList(\r\n    fishCode,\r\n    quantityList\r\n  );\r\n\r\n  const vesselCaptainName = upper(`${lastName}_${firstName}`, \",\");\r\n\r\n  const productionMethodCode = productionMethodCodeMap[productionMethod];\r\n\r\n  const vesselID = upper(vesselIdType) + \".\" + vesselIdString;\r\n\r\n  const vesselFlagState = upper(language);\r\n\r\n  return `\r\n  <epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:1\" \r\n    schemaVersion=\"1.1\" \r\n    creationDate=\"2001-12-17T09:30:47Z\" \r\n    xmlns:eecc=\"http://ns.eecc.info/epcis\"\r\n    xmlns:sbdh=\"http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n    xsi:schemaLocation=\"urn:epcglobal:epcis:xsd:1 http://www.gs1si.org/BMS/epcis/1_2/EPCglobal-epcis-1_2.xsd\" \r\n    xmlns:cbvmda=\"urn:epcglobal:cbv:mda\">\r\n      <EPCISBody>\r\n        <EventList>\r\n            <ObjectEvent> <!-- V1 CREATE THE CATCH EVENT ID WITH GDST KDEs-->\r\n                <eventTime>${creationDate}</eventTime>\r\n                <eventTimeZoneOffset>${eventTimeZoneOffset}</eventTimeZoneOffset>\r\n                <epcList>\r\n                </epcList>\r\n                <action>ADD</action>\r\n                <bizStep>urn:epcglobal:cbv:bizstep:commissioning</bizStep>\r\n                <disposition>urn:epcglobal:cbv:disp:active</disposition>\r\n                <readPoint>\r\n                    <id>geo:${latitude},${longitude}</id> <!-- Point where catch was recorded -->\r\n                </readPoint>\r\n                <extension>\r\n                    <quantityList>\r\n                      ${quantityElementList}\r\n                    </quantityList>\r\n                    <ilmd>\r\n                        <cbvmda:vesselCatchInformationList> <!--  Attach GDST KDEs to unique Catch Event -->\r\n                            <vesselCatchInformation>\r\n                                <vesselID>${vesselID}</vesselID> <!-- #2 & 3 GDST KDE Vessel ID -->\r\n                                <vesselName>${vesselName}</vesselName> <!-- #1 GDST KDE Vessel Name  -->\r\n\r\n                                <!-- A1 GDST KDE Vessel Ownership -->\r\n                                ${generateNonEmptyElement('vesselOwnerName',vesselOwnerName)}\r\n                                ${generateNonEmptyElement('organizationName',organizationName)}\r\n\r\n                                <vesselCaptainName>${vesselCaptainName}</vesselCaptainName>\r\n                                <vesselFlagState>${vesselFlagState}</vesselFlagState> <!-- #4 Vessel Flag State -->\r\n                                <catchArea>FAO.${catchArea}</catchArea> <!-- #7 GDST KDE Catch Area -->\r\n                                <fishingGearTypeCode>${fishingGearType}</fishingGearTypeCode> <!-- #5 Gear Type -->\r\n                            </vesselCatchInformation>\r\n                        </cbvmda:vesselCatchInformationList>\r\n                        <cbvmda:productionMethodCode>${productionMethodCode}</cbvmda:productionMethodCode> <!-- #19 GDST KDE Production Method -->\r\n                        <cbvmda:harvestStartDate>${harvestStartDate}</cbvmda:harvestStartDate> <!-- #8 & 9 GDST KDE Date of Capture -->\r\n                        <cbvmda:harvestEndDate>${harvestEndDate}</cbvmda:harvestEndDate> <!-- #8 & 9 GDST KDE Date of Capture -->\r\n                        ${\r\n                          vesselCertificationStandard ? \r\n                          `\r\n                            <cbvmda:certificationList> <!-- #6 GDST KDE Fishing Authorization / Organization License, Certs (Aqua) -->\r\n                              <certification>\r\n                                  <certificationStandard>${vesselCertificationStandard}</certificationStandard>\r\n                                  <certificationAgency>${vesselCertificationAgency}</certificationAgency>\r\n                                  <certificationValue>${vesselCertificationValue}</certificationValue>\r\n                                  <certificationIdentification>${vesselCertificationIdentification}</certificationIdentification>\r\n                              </certification>\r\n                          </cbvmda:certificationList>\r\n                          `: ''\r\n                        }\r\n                    </ilmd>\r\n                </extension>\r\n            </ObjectEvent>    \r\n        </EventList>\r\n    </EPCISBody>\r\n  </epcis:EPCISDocument>\r\n`;\r\n};\r\n","import { useState, useEffect } from 'react'\r\nimport api from \"../api\";\r\n\r\nconst debug = require(\"debug\")(\"use-ipfs\");\r\n\r\nconst { Ipfs } = window as any\r\n\r\nconst w = window as any\r\n\r\nconst ipfs = new Ipfs({\r\n  repo: api.dapp.dappVault.ipfsRepo,\r\n  silent: true\r\n})\r\n\r\nipfs.once('ready', () => {\r\n  w.ipfsReady = true\r\n})\r\n\r\nconst initIpfs = (ipfs: any) => new Promise((resolve, reject) => {\r\n  if (w.ipfsReady) {\r\n    resolve()\r\n  }\r\n\r\n  ipfs.once('ready', () => {\r\n    w.ipfsReady = true\r\n    resolve()\r\n  })\r\n\r\n  ipfs.once('error', (err: any) => reject(err))\r\n})\r\n\r\nexport function useIpfs(opts?: any) {\r\n\r\n  const [isIpfsReady, setIpfsReady] = useState(false)\r\n  const [ipfsInitError, setIpfsInitError] = useState(null as any)\r\n\r\n  useEffect(() => {\r\n    startIpfs()\r\n    return function cleanup() {\r\n      if (ipfs && ipfs.stop) {\r\n        debug('Stopping IPFS')\r\n        ipfs.stop()\r\n        setIpfsReady(false)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  async function startIpfs() {\r\n    try {\r\n      await initIpfs(ipfs)\r\n      setIpfsReady(true)\r\n    } catch (error) {\r\n      console.error('IPFS init error:', error)\r\n      setIpfsInitError(error)\r\n      setIpfsReady(false)\r\n    }\r\n  }\r\n\r\n  debug(ipfs)\r\n\r\n  return { ipfs, isIpfsReady, ipfsInitError }\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { animated } from \"react-spring\";\r\n\r\nimport {\r\n  useCatchCacheState,\r\n  fao3AMap,\r\n  useProfileState,\r\n  useLanguageState\r\n} from \"../_data\";\r\n\r\nimport {\r\n  LabeledInput,\r\n  StyledColumnForm,\r\n  ReviewInput,\r\n  Divider,\r\n  FillButton,\r\n  StyledLabel\r\n} from \"../_theme\";\r\nimport api from \"../api\";\r\nimport { createCatchPayload } from \"../api/catch\";\r\nimport { useIpfs } from \"../hooks/use-ipfs\";\r\n\r\n// const debug = require(\"debug\")(\"DappSendInput\");\r\n\r\nconst Container = styled(animated.div)`\r\n  width: 100%;\r\n  word-break: break-word;\r\n`;\r\n\r\nconst QuantityItem = styled(ReviewInput)`\r\n  label {\r\n  }\r\n`;\r\n\r\nexport const CatchReview = ({ triggerNextStep, steps }: any) => {\r\n  const { add_catchArea } = steps;\r\n\r\n  const { apiUrl } = api.dapp.dappVault;\r\n\r\n  const { ipfs, isIpfsReady, ipfsInitError } = useIpfs();\r\n\r\n  const [catchCache, setCatchCache] = useCatchCacheState();\r\n\r\n  const [profile] = useProfileState();\r\n\r\n  const [language] = useLanguageState();\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const [sendMethod, setSendMethod] = useState(\"\");\r\n\r\n  const [error] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [, setOriginId] = useState(\"\");\r\n  const [ipfsHash, setIpfsHash] = useState(\"\");\r\n\r\n  const { quantityList, ...catchCacheRest } = catchCache;\r\n\r\n  const [formState, { text }] = useFormState({\r\n    ...catchCacheRest,\r\n    catchArea: add_catchArea.value\r\n  });\r\n\r\n  const [dappFormState, dappInput] = useFormState({\r\n    apiUrl,\r\n    price: \"0.0200 EOS\"\r\n  });\r\n  // console.log(formState.values)\r\n\r\n  // console.log(Object.keys(formState.values))\r\n\r\n  if (!quantityList) {\r\n    return <div>Cache Cleaned . . .</div>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <StyledColumnForm\r\n        onSubmit={async e => {\r\n          e.preventDefault();\r\n          setDisabled(true);\r\n\r\n          const fishCode = fao3AMap[catchCache.fishKey];\r\n\r\n          const epcisDoc = await createCatchPayload({\r\n            ...profile,\r\n            ...catchCache,\r\n            catchArea: add_catchArea.value,\r\n            language,\r\n            fishCode\r\n          });\r\n\r\n          const sendToEOS = async () => {\r\n            // Take the epcisDoc and send it to IPFS, grab the resulting hash\r\n\r\n            // Take the hash and send it to the EOS table\r\n\r\n            // Get the blockhash and blockid, combine and Output the hash to the user\r\n            const catchResult = await api.dapp.sendCatchEvent(\r\n              dappFormState.values,\r\n              ipfs,\r\n              epcisDoc\r\n            );\r\n\r\n            setIpfsHash(catchResult.ipfsHash);\r\n            setOriginId(catchResult.originId);\r\n\r\n            setSuccess(\"sent\");\r\n          };\r\n\r\n          const sendPromise = []\r\n\r\n          switch (sendMethod) {\r\n            case \"both\":\r\n              sendPromise.push(sendToEOS())\r\n              sendPromise.push(api.freepcis.sendCatchEvent(epcisDoc))\r\n              break;\r\n            case \"ipfs-eos\":\r\n              sendPromise.push(sendToEOS())\r\n              break;\r\n            default:\r\n            case \"freepcis\":\r\n              sendPromise.push(api.freepcis.sendCatchEvent(epcisDoc))\r\n              break;\r\n          }\r\n\r\n          await Promise.all(sendPromise)\r\n\r\n          setCatchCache({\r\n            ...catchCache,\r\n            sent: true\r\n          });\r\n\r\n          triggerNextStep();\r\n        }}\r\n      >\r\n        {Object.keys(formState.values).map(k => (\r\n          <ReviewInput\r\n            key={k}\r\n            disabled={disabled}\r\n            label={k}\r\n            {...text(k as any)}\r\n          />\r\n        ))}\r\n\r\n        <Divider />\r\n\r\n        {quantityList.map(({ epcClass, quantity, uom }: any, i: number) => (\r\n          <QuantityItem\r\n            readOnly\r\n            key={epcClass}\r\n            disabled={disabled}\r\n            label={epcClass}\r\n            value={`${quantity} ${uom}`}\r\n          />\r\n        ))}\r\n\r\n        <Divider />\r\n\r\n        <FillButton\r\n          disabled={disabled || catchCache.sent}\r\n          onClick={() => setSendMethod(\"freepcis\")}\r\n        >\r\n          Send to FreEPCIS\r\n        </FillButton>\r\n\r\n        <br />\r\n\r\n        <LabeledInput\r\n          label={\"API\"}\r\n          disabled={disabled}\r\n          required\r\n          {...dappInput.text(\"apiUrl\")}\r\n          placeholder={\"find an eos api . . .\"}\r\n        />\r\n\r\n        <LabeledInput\r\n          label={\"PRICE\"}\r\n          disabled={disabled}\r\n          required\r\n          {...dappInput.text(\"price\")}\r\n          placeholder={\"selling price . . .\"}\r\n        />\r\n\r\n        {isIpfsReady && (\r\n          <>\r\n            <FillButton\r\n              background={'sandybrown'}\r\n              disabled={disabled || catchCache.sent}\r\n              onClick={() => setSendMethod(\"ipfs-eos\")}\r\n            >\r\n              Send to EOS\r\n            </FillButton>\r\n            <FillButton\r\n              background={'darkorchid'}\r\n              disabled={disabled || catchCache.sent}\r\n              onClick={() => setSendMethod(\"both\")}\r\n            >\r\n              Send to FreEPCIS and EOS\r\n            </FillButton>\r\n          </>\r\n        )}\r\n      </StyledColumnForm>\r\n\r\n      <div style={{ color: \"red\" }}>\r\n        {error.length > 0 && <span>ERROR: {error}</span>}\r\n        {ipfsInitError && (\r\n          <span>ERROR: {ipfsInitError.message || ipfsInitError}</span>\r\n        )}\r\n      </div>\r\n      {success.length > 0 && (\r\n        <div>\r\n          Catch event posted. Will take ~3 minutes for it to register -\r\n          <a\r\n            href=\"https://jungle.eosweb.net/account/nemoeosmark1\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            https://jungle.eosweb.net/account/nemoeosmark1\r\n          </a>\r\n          <Divider />\r\n          <StyledLabel>\r\n            {\" \"}\r\n            You can check the epcis data on IPFS here -{\" \"}\r\n          </StyledLabel>\r\n          <a href={`https://ipfs.io/ipfs/${ipfsHash}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {`https://ipfs.io/ipfs/${ipfsHash}`}\r\n          </a>\r\n          {/* \r\n            <StyledLabel> Give this Claim Code to the producer: </StyledLabel>\r\n            <br />\r\n            {originId}\r\n            <FillButton onClick={() => copy(originId)}>\r\n              Click to Copy Claim Code\r\n            </FillButton> \r\n          */}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { CatchFishTypeInput } from \"../components/CatchFishTypeInput\";\r\nimport { createOptionLabel, createPromptArray } from \"../core/utils\";\r\nimport { FishDataConfirm } from \"../components/FishDataConfirm\";\r\n\r\nimport { CatchQuantityInput } from \"../components/CatchQuantityInput\";\r\nimport { CatchDurationInput } from \"../components/CatchDurationInput\";\r\nimport { CatchReview } from \"../components/CatchReview\";\r\n\r\nconst promptOrder = [\r\n  \"prompt_catch\",\r\n\r\n  \"prompt_catchFishType\",\r\n  \"add_catchFishType\",\r\n\r\n  \"prompt_catchArea\",\r\n  \"add_catchArea\",\r\n\r\n  \"prompt_catchDuration\",\r\n  \"add_catchDuration\",\r\n\r\n  \"prompt_catchQuantity\",\r\n  \"add_catchQuantity\",\r\n\r\n  \"prompt_catchQuantityListDone\",\r\n  \"add_catchQuantityDone\",\r\n\r\n  // \"prompt_preservation\",\r\n  // \"add_preservation\",\r\n  \"prompt_catchReview\",\r\n  \"add_catchReview\",\r\n\r\n  \"prompt_catchCongrat\",\r\n\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nconst promptStructure = {\r\n  add_catchFishType: {\r\n    component: <CatchFishTypeInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_catchDuration: {\r\n    component: <CatchDurationInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_catchQuantity: {\r\n    component: <CatchQuantityInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_catchArea: {\r\n    hideInput: true,\r\n    options: [\"61\", \"71\", \"67\", \"77\"].map(createOptionLabel)\r\n  },\r\n\r\n  add_catchQuantityDone: {\r\n    hideInput: true,\r\n    options: [\"yes\", \"no\"].map(createOptionLabel),\r\n    triggers: [\"prompt_catchReview\", \"add_catchQuantity\"]\r\n  },\r\n\r\n  add_catchReview: {\r\n    component: <CatchReview />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_preservation: {\r\n    hideInput: true,\r\n    options: [\"chilled\", \"salted\", \"fresh\"].map(createOptionLabel)\r\n  },\r\n\r\n  prompt_catchCongrat: {\r\n    component: <FishDataConfirm />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  }\r\n} as any;\r\n\r\nexport const createCatchPrompt = () =>\r\n  createPromptArray(promptOrder, promptStructure);\r\n","import React, { useState } from \"react\";\r\nimport Reward from \"react-rewards\";\r\n\r\nimport { strings } from \"../i18n\";\r\n\r\nexport const FishDataConfirm = ({ triggerNextStep }: any) => {\r\n  const [done, setDone] = useState(false);\r\n\r\n  return (\r\n    <Reward\r\n      ref={(ref: any) => {\r\n        if (ref && !done) {\r\n          ref.rewardMe();\r\n          setDone(true);\r\n\r\n          triggerNextStep();\r\n        }\r\n      }}\r\n      type=\"emoji\"\r\n      config={{\r\n        emoji: [\"🐟\", \"🦐\", \"🐙\", \"🦀\", \"🐳\", \"🐋\", \"🐬\", \"🦑\", \"🐡\", \"🦈\"]\r\n      }}\r\n    >\r\n      <div>{strings.prompt_catchCongrat}</div>\r\n    </Reward>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { strings } from \"../i18n\";\r\n\r\nexport const LandingDataTable = () => (\r\n  <div>\r\n    {strings.prompt_landingConfirm}\r\n    <hr />\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <td><span role=\"img\" aria-label=\"date\">📅</span></td>\r\n          <td>{strings.date}</td>\r\n          <td>2016-12-14</td>\r\n        </tr>\r\n        <tr>\r\n          <td><span role=\"img\" aria-label=\"time\">⌚</span></td>\r\n          <td>{strings.time}</td>\r\n          <td>11:33:00.125+08:00</td>\r\n        </tr>\r\n        <tr>\r\n          <td><span role=\"img\" aria-label=\"container\">🚢</span></td>\r\n          <td> {strings.container}</td>\r\n          <td>f5c5ab8f-8bcf-446a-8dea-4cb625316ffd</td>\r\n        </tr>\r\n        <tr>\r\n          <td><span role=\"img\" aria-label=\"location\">📍</span></td>\r\n          <td>{strings.geoLocation}</td>\r\n          <td>geo:22.58425,120.31815</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n","import React from 'react'\r\nimport { createOptionLabel, appendTrigger } from \"../core/utils\";\r\nimport { LandingDataTable } from \"../components/LandingDataCard\";\r\nimport { strings } from \"../i18n\";\r\n\r\nexport const landingPromptOrder = [\r\n  \"prompt_landing\",\r\n  \"add_landingDisposition\",\r\n  \"prompt_landingConfirm\",\r\n  \"prompt_confirmData\",\r\n  \"add_confirmData\",\r\n  \"prompt_checkConfirm\",\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nexport const createLandingPrompt = () =>\r\n  [\r\n    {\r\n      id: `prompt_landing`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_landingDisposition`,\r\n      options: [\"inprogress\", \"finished\"].map(createOptionLabel)\r\n    },\r\n    // { // TODO: Stretch, ask cargo load\r\n    //   id: `prompt_cargoLoad`,\r\n    //   hideInput: true,\r\n    //   message: ({ previousValue }: any) =>\r\n    //     previousValue === \"finished\"\r\n    //       ? strings.prompt_cargoLoad\r\n    //       : \"✔\"\r\n    // },\r\n    {\r\n      id: `prompt_landingConfirm`,\r\n      component: <LandingDataTable />\r\n    },\r\n    {\r\n      id: `prompt_confirmData`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_confirmData`,\r\n      hideInput: true,\r\n      options: [\"dataIsAccurate\", \"dataIsInaccurate\"].map(createOptionLabel)\r\n    },\r\n    {\r\n      id: `prompt_checkConfirm`,\r\n      hideInput: true,\r\n      message: ({ previousValue }: any) =>\r\n        previousValue === \"dataIsInaccurate\"\r\n          ? strings.prompt_errorReported\r\n          : \"✔\"\r\n    }\r\n  ].map((p: any, i) => appendTrigger(p, i, landingPromptOrder));\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Select from \"react-styled-select\";\r\nimport { localStorageKey } from \"../_data\";\r\n\r\nconst StyledSelect = styled(Select)`\r\n  width: 100%;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nexport const SaleFishSelectInput = ({ triggerNextStep } : any) => {\r\n\r\n  const fishStore = JSON.parse(localStorage.getItem(\"FISH_STORE\") as any) || { catches: [] };\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [fish, setFish] = useState(fishStore.catches[0] ? fishStore.catches[0].value : null);\r\n\r\n  if(!fishStore.catches[0]) {\r\n    setTimeout(()=>{\r\n      localStorage.removeItem(localStorageKey.chatCache);\r\n      window.location.reload();\r\n    }, 3000)\r\n    return (\r\n      <div>\r\n        <b>\r\n          ⚠ No Fish Available ⚠ \r\n        </b>\r\n        <br/>\r\n        <i>You need to report your catch first</i>\r\n        <br/>\r\n        Auto Refresh in 3... 2... 1...\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <StyledSelect\r\n      value={fish}\r\n      disabled={disabled}\r\n      options={fishStore.catches}\r\n      classes={{\r\n        selectControl: \"select-control\",\r\n        selectInput: \"select-input\"\r\n      }}\r\n      onChange={(fish: string) => {\r\n        setFish(fish);\r\n        setDisabled(true);\r\n        triggerNextStep({\r\n          value: fish\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { SaleFishSelectInput } from \"../components/SaleFishSelectInput\";\r\nimport { numberValidator, appendTrigger } from \"../core/utils\";\r\n\r\nconst salePromptOrder = [\r\n  \"prompt_sale\",\r\n  \"add_species\",\r\n  \"prompt_size\",\r\n\r\n  \"add_size\",\r\n  \"prompt_weight\",\r\n  \r\n  \"add_weight\",\r\n  \"prompt_value\",\r\n\r\n  \"add_value\",\r\n  \"prompt_saleConfirmation\",\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nexport const createSalePrompt = () =>\r\n  [\r\n    {\r\n      id: `prompt_sale`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_species`,\r\n      hideInput: true,\r\n      waitAction: true,\r\n      component: <SaleFishSelectInput />\r\n    },\r\n    {\r\n      id: `prompt_size`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_size`,\r\n      user: true,\r\n      validator: numberValidator\r\n    },\r\n    {\r\n      id: `prompt_weight`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_weight`,\r\n      user: true\r\n    },\r\n    {\r\n      id: `prompt_value`,\r\n      hideInput: true\r\n    },\r\n    {\r\n      id: `add_value`,\r\n      user: true\r\n    },\r\n    {\r\n      id: `prompt_saleConfirmation`,\r\n      hideInput: true,\r\n      // component: <SaleDetail />\r\n    }\r\n  ].map((p: any, i) => appendTrigger(p, i, salePromptOrder));\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { animated } from \"react-spring\";\r\n\r\nimport { upper } from 'case'\r\n\r\nimport { useCaptainProfileState } from \"../_data\";\r\nimport { strings } from \"../i18n\";\r\n\r\nimport { StyledInput, StyledSubmitButton } from \"../_theme\";\r\n\r\ninterface CaptainNameFormFields {\r\n  firstName: string;\r\n  middleName: string;\r\n  lastName: string;\r\n}\r\n\r\nconst Container = styled(animated.div)`\r\n  width: 100%;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nconst StyledMiddleNameInput = styled(StyledInput)`\r\n  width: 20px;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  margin-top: 0.5em;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst StyledCaptainLabel = styled.span`\r\n  color: ${p => p.theme.botBubbleColor};\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const VesselCaptainNameInput = ({ triggerNextStep, steps }: any) => {\r\n  const [profile, setProfile] = useCaptainProfileState({})\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n  \r\n  const [formState, { text }] = useFormState<CaptainNameFormFields>();\r\n\r\n  return (\r\n    <Container>\r\n      <StyledCaptainLabel>{strings.captain}</StyledCaptainLabel>\r\n\r\n      <StyledForm\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          const { lastName, firstName, middleName } = formState.values;\r\n\r\n          setDisabled(true);\r\n\r\n          setProfile({\r\n            ...profile,\r\n            captain: {\r\n              firstName,\r\n              middleName,\r\n              lastName,\r\n              formName: upper(`${lastName}_${firstName}`,',')\r\n            },\r\n          })\r\n\r\n          triggerNextStep({\r\n            value: lastName,\r\n          })\r\n        }}\r\n      >\r\n        <StyledInput\r\n          disabled={disabled}\r\n          required\r\n          placeholder={strings.form_lastNamePlaceholder}\r\n          {...text(\"lastName\")}\r\n        />\r\n        {\", \"}\r\n        <StyledInput\r\n          disabled={disabled}\r\n          required\r\n          placeholder={strings.form_firstNamePlaceholder}\r\n          {...text(\"firstName\")}\r\n        />\r\n        <StyledMiddleNameInput\r\n          disabled={disabled}\r\n          placeholder={strings.form_middleNamePlaceholder}\r\n          {...text(\"middleName\")}\r\n          maxLength={1}\r\n        />\r\n        {\".\"}\r\n\r\n        <StyledSubmitButton disabled={disabled} />\r\n      </StyledForm>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { shipIDTypeOptionList, useCaptainProfileState } from \"../_data\";\r\nimport { StyledInput, StyledSubmitButton, StyledSelect, StyledRowForm } from \"../_theme\";\r\nimport { useFormState } from \"react-use-form-state\";\r\n\r\ninterface VesselIDFormFields {\r\n  idType: \"imo\" | \"mmsi\";\r\n  idString: string;\r\n}\r\n\r\nconst IDTypeSelect = styled(StyledSelect)`\r\n  width: 4em;\r\n`\r\n\r\nconst IDInput = styled(StyledInput)`\r\n  width: 10em;\r\n`;\r\n\r\nexport const VesselIDInput = ({ triggerNextStep, steps }: any) => {\r\n  const [profile, setProfile] = useCaptainProfileState({});\r\n\r\n  const options = shipIDTypeOptionList;\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const [formState, { text, select }] = useFormState<VesselIDFormFields>({\r\n    idType: \"imo\"\r\n  });\r\n\r\n  return (\r\n    <StyledRowForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        // console.log(steps);\r\n        // console.log(formState.values);\r\n\r\n        setDisabled(true);\r\n\r\n        setProfile({\r\n            ...profile,\r\n            vessel: {\r\n              name: steps.add_vesselName.value,\r\n              ...formState.values\r\n            }\r\n        });\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n      <IDTypeSelect\r\n        onChange={(value:string) => select(\"idType\").onChange({target:{value}})}\r\n        value={select(\"idType\").value}\r\n        disabled={disabled}\r\n        options={options}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n\r\n      <IDInput disabled={disabled} {...text('idString')}/>\r\n      <StyledSubmitButton disabled={disabled} />\r\n    </StyledRowForm>\r\n  );\r\n};\r\n","export const getGearId =(partOne: string, partTwo?: string, partThree?: string) => {\r\n  if(!!partThree) {\r\n    return `${partOne}_${partTwo}_${partThree}`;\r\n  }\r\n\r\n  if (!!partTwo) {\r\n    return `${partOne}_${partTwo}`;\r\n  }\r\n\r\n  if(!!partOne) {\r\n    return partOne\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport const isGearValid = (partOne: string, partTwo?: string, partThree?: string) => {\r\n  if (!!gearAbbreviationMap[partOne]) {\r\n    return true;\r\n  }\r\n\r\n  if(!partTwo) {\r\n    return false;\r\n  }\r\n\r\n  const partOneTwo = `${partOne}_${partTwo}`\r\n\r\n  if(!!gearAbbreviationMap[partOneTwo]) {\r\n    return true;\r\n  }\r\n\r\n  if(!partThree) {\r\n    return false;\r\n  }\r\n\r\n  const partOneTwoThree = `${partOneTwo}_${partThree}`\r\n\r\n  if(!!gearAbbreviationMap[partOneTwoThree]) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport const gearTree = {\r\n  surroundingNet: {\r\n    // 01.0.0\r\n    withPurseLines: {\r\n      // 01.1.0\r\n      oneBoatOperated: null, // 01.1.1\r\n      twoBoatsOperated: null // 01.1.2\r\n    },\r\n    withoutPurseLines: null // 01.2.0\r\n  },\r\n  seineNets: {\r\n    // 02.0.0\r\n    beachSeines: null, // 02.1.0\r\n    vesselSeines: {\r\n      // 02.2.0\r\n      danishSeines: null, // 02.2.1\r\n      scottishSeines: null,\r\n      pairSeines: null\r\n    },\r\n    seineNetsNotSpecified: null // 02.9.90\r\n  },\r\n  trawls: {\r\n    bottomTrawls: {\r\n      beamTrawls: null,\r\n      otterTrawls: null,\r\n      pairTrawls: null,\r\n      nephropsTrawls: null,\r\n      shrimpTrawls: null,\r\n      bottomTrawlsNotSpecified: null\r\n    },\r\n    midwaterTrawls: {\r\n      otterTrawls: null,\r\n      pairTrawls: null,\r\n      shrimpTrawls: null,\r\n      midwaterTrawlsNotSpecified: null\r\n    },\r\n    otterTwinTrawls: null,\r\n    otterTrawlsNotSpecified: null,\r\n    pairTrawlsNotSpecified: null,\r\n    otherTrawlsNotSpecified: null\r\n  },\r\n  dredges: {\r\n    boatDredges: null,\r\n    handDredges: null\r\n  },\r\n  liftNets: {\r\n    portableLiftNets: null,\r\n    boatOperatedLiftNets: null,\r\n    shoreOperatedStationaryLiftNets: null,\r\n    liftNetsNotSpecified: null\r\n  },\r\n  fallingGear: {\r\n    castNets: null,\r\n    fallingGearNotSpecified: null\r\n  },\r\n  gillnetsAndEntanglingNets: {\r\n    setGillnetsAnchored: null,\r\n    driftnets: null,\r\n    encirclingGillnets: null,\r\n    fixedGillnetsOnStakes: null,\r\n    trammelNets: null,\r\n    combinedGillnetsTrammelNets: null,\r\n    gillnetsAndEntanglingNetsNotSpecified: null,\r\n    gillnetsNotSpecified: null\r\n  },\r\n  traps: {\r\n    stationaryUncoveredPoundNets: null,\r\n    pots: null,\r\n    fykeNets: null,\r\n    stowNets: null,\r\n    barriersFencesWeirsEtc: null,\r\n    aerialTraps: null,\r\n    trapsNotSpecified: null\r\n  },\r\n  hooksAndLines: {\r\n    handlinesAndPoleLinesHandOperated: null,\r\n    handlinesAndPoleLinesMechanized: null,\r\n    setLonglines: null,\r\n    driftingLonglines: null,\r\n    longlinesNotSpecified: null,\r\n    trollingLines: null,\r\n    hooksAndLinesNotSpecified: null\r\n  },\r\n  grapplingAndWounding: {\r\n    harpoons: null\r\n  },\r\n  harvestingMachines: {\r\n    pumps: null,\r\n    mechanizedDredges: null,\r\n    harvestingMachinesNotSpecified: null\r\n  },\r\n  miscellaneousGear: null,\r\n  recreationalFishingGear: null,\r\n  gearNotKnowOrNotSpecified: null\r\n} as any;\r\n\r\nexport const gearBaseList = Object.keys(gearTree)\r\n\r\nexport const gearISSCFGMap = {\r\n  surroundingNet: \"01.0.0\",\r\n  surroundingNet_withPurseLines: \"01.1.0\",\r\n  surroundingNet_withPurseLines_oneBoatOperated: \"01.1.1\",\r\n  surroundingNet_withPurseLines_twoBoatsOperated: \"01.1.2\",\r\n  surroundingNet_withoutPurseLines: \"01.2.0\",\r\n  seineNets: \"02.0.0\",\r\n  seineNets_beachSeines: \"02.1.0\",\r\n  seineNets_vesselSeines: \"02.2.0\",\r\n  seineNets_vesselSeines_danishSeines: \"02.2.1\",\r\n  seineNets_vesselSeines_scottishSeines: \"02.2.2\",\r\n  seineNets_vesselSeines_pairSeines: \"02.2.3\",\r\n  seineNets_seineNetsNotSpecified: \"02.9.0\",\r\n  trawls: \"03.0.0\",\r\n  trawls_bottomTrawls: \"03.1.0\",\r\n  trawls_bottomTrawls_beamTrawls: \"03.1.1\",\r\n  trawls_bottomTrawls_otterTrawls: \"03.1.2\",\r\n  trawls_bottomTrawls_pairTrawls: \"03.1.3\",\r\n  trawls_bottomTrawls_nephropsTrawls: \"03.1.4\",\r\n  trawls_bottomTrawls_shrimpTrawls: \"03.1.5\",\r\n  trawls_bottomTrawls_bottomTrawlsNotSpecified: \"03.1.9\",\r\n  trawls_midwaterTrawls: \"03.2.0\",\r\n  trawls_midwaterTrawls_otterTrawls: \"03.2.1\",\r\n  trawls_midwaterTrawls_pairTrawls: \"03.2.2\",\r\n  trawls_midwaterTrawls_shrimpTrawls: \"03.2.3\",\r\n  trawls_midwaterTrawls_midwaterTrawlsNotSpecified: \"03.2.9\",\r\n  trawls_otterTwinTrawls: \"03.3.0\",\r\n  trawls_otterTrawlsNotSpecified: \"03.4.9\",\r\n  trawls_pairTrawlsNotSpecified: \"03.5.9\",\r\n  trawls_otherTrawlsNotSpecified: \"03.9.0\",\r\n  dredges: \"04.0.0\",\r\n  dredges_boatDredges: \"04.1.0\",\r\n  dredges_handDredges: \"04.2.0\",\r\n  liftNets: \"05.0.0\",\r\n  liftNets_portableLiftNets: \"05.1.0\",\r\n  liftNets_boatOperatedLiftNets: \"05.2.0\",\r\n  liftNets_shoreOperatedStationaryLiftNets: \"05.3.0\",\r\n  liftNets_liftNetsNotSpecified: \"05.9.0\",\r\n  fallingGear: \"06.0.0\",\r\n  fallingGear_castNets: \"06.1.0\",\r\n  fallingGear_fallingGearNotSpecified: \"06.9.0\",\r\n  gillnetsAndEntanglingNets: \"07.0.0\",\r\n  gillnetsAndEntanglingNets_setGillnetsAnchored: \"07.1.0\",\r\n  gillnetsAndEntanglingNets_driftnets: \"07.2.0\",\r\n  gillnetsAndEntanglingNets_encirclingGillnets: \"07.3.0\",\r\n  gillnetsAndEntanglingNets_fixedGillnetsOnStakes: \"07.4.0\",\r\n  gillnetsAndEntanglingNets_trammelNets: \"07.5.0\",\r\n  gillnetsAndEntanglingNets_combinedGillnetsTrammelNets: \"07.6.0\",\r\n  gillnetsAndEntanglingNets_gillnetsAndEntanglingNetsNotSpecified: \"07.9.0\",\r\n  gillnetsAndEntanglingNets_gillnetsNotSpecified: \"07.9.1\",\r\n  traps: \"08.0.0\",\r\n  traps_stationaryUncoveredPoundNets: \"08.1.0\",\r\n  traps_pots: \"08.2.0\",\r\n  traps_fykeNets: \"08.3.0\",\r\n  traps_stowNets: \"08.4.0\",\r\n  traps_barriersFencesWeirsEtc: \"08.5.0\",\r\n  traps_aerialTraps: \"08.6.0\",\r\n  traps_trapsNotSpecified: \"08.9.0\",\r\n  hooksAndLines: \"09.0.0\",\r\n  hooksAndLines_handlinesAndPoleLinesHandOperated: \"09.1.0\",\r\n  hooksAndLines_handlinesAndPoleLinesMechanized: \"09.2.0\",\r\n  hooksAndLines_setLonglines: \"09.3.0\",\r\n  hooksAndLines_driftingLonglines: \"09.4.0\",\r\n  hooksAndLines_longlinesNotSpecified: \"09.5.0\",\r\n  hooksAndLines_trollingLines: \"09.6.0\",\r\n  hooksAndLines_hooksAndLinesNotSpecified: \"09.9.0\",\r\n  grapplingAndWounding: \"10.0.0\",\r\n  grapplingAndWounding_harpoons: \"10.1.0\",\r\n  harvestingMachines: \"11.0.0\",\r\n  harvestingMachines_pumps: \"11.1.0\",\r\n  harvestingMachines_mechanizedDredges: \"11.2.0\",\r\n  harvestingMachines_harvestingMachinesNotSpecified: \"11.9.0\",\r\n  miscellaneousGear: \"20.0.0\",\r\n  recreationalFishingGear: \"25.0.0\",\r\n  gearNotKnowOrNotSpecified: \"99.0.0\"\r\n} as any;\r\n\r\nexport const gearAbbreviationMap = {\r\n  surroundingNet_withPurseLines: \"PS\",\r\n  surroundingNet_withPurseLines_oneBoatOperated: \"PS1\",\r\n  surroundingNet_withPurseLines_twoBoatsOperated: \"PS2\",\r\n  surroundingNet_withoutPurseLines: \"LA\",\r\n\r\n  seineNets_beachSeines: \"SB\",\r\n  seineNets_vesselSeines: \"SV\",\r\n  seineNets_vesselSeines_danishSeines: \"SDN\",\r\n  seineNets_vesselSeines_scottishSeines: \"SSC\",\r\n  seineNets_vesselSeines_pairSeines: \"SPR\",\r\n  seineNets_seineNetsNotSpecified: \"SX\",\r\n\r\n  trawls_bottomTrawls_beamTrawls: \"TTB\",\r\n  trawls_bottomTrawls_otterTrawls: \"OTB\",\r\n  trawls_bottomTrawls_pairTrawls: \"PTB\",\r\n  trawls_bottomTrawls_nephropsTrawls: \"TBN\",\r\n  trawls_bottomTrawls_shrimpTrawls: \"TBS\",\r\n  trawls_bottomTrawls_bottomTrawlsNotSpecified: \"TB\",\r\n\r\n  trawls_midwaterTrawls_otterTrawls: \"OTM\",\r\n  trawls_midwaterTrawls_pairTrawls: \"PTM\",\r\n  trawls_midwaterTrawls_shrimpTrawls: \"TMS\",\r\n  trawls_midwaterTrawls_midwaterTrawlsNotSpecified: \"TM\",\r\n  trawls_otterTwinTrawls: \"OTT\",\r\n  trawls_otterTrawlsNotSpecified: \"OT\",\r\n  trawls_pairTrawlsNotSpecified: \"PT\",\r\n  trawls_otherTrawlsNotSpecified: \"TX\",\r\n\r\n  dredges_boatDredges: \"DRB\",\r\n  dredges_handDredges: \"DRH\",\r\n\r\n  liftNets_portableLiftNets: \"LNP\",\r\n  liftNets_boatOperatedLiftNets: \"LNB\",\r\n  liftNets_shoreOperatedStationaryLiftNets: \"LNS\",\r\n  liftNets_liftNetsNotSpecified: \"LN\",\r\n\r\n  fallingGear_castNets: \"FCN\",\r\n  fallingGear_fallingGearNotSpecified: \"FG\",\r\n\r\n  gillnetsAndEntanglingNets_setGillnetsAnchored: \"GNS\",\r\n  gillnetsAndEntanglingNets_driftnets: \"GND\",\r\n  gillnetsAndEntanglingNets_encirclingGillnets: \"GNC\",\r\n  gillnetsAndEntanglingNets_fixedGillnetsOnStakes: \"GNF\",\r\n  gillnetsAndEntanglingNets_trammelNets: \"GTR\",\r\n  gillnetsAndEntanglingNets_combinedGillnetsTrammelNets: \"GTN\",\r\n  gillnetsAndEntanglingNets_gillnetsAndEntanglingNetsNotSpecified: \"GEN\",\r\n  gillnetsAndEntanglingNets_gillnetsNotSpecified: \"GN\",\r\n\r\n  traps_stationaryUncoveredPoundNets: \"FPN\",\r\n  traps_pots: \"FPO\",\r\n  traps_fykeNets: \"FYK\",\r\n  traps_stowNets: \"FSN\",\r\n  traps_barriersFencesWeirsEtc: \"FWR\",\r\n  traps_aerialTraps: \"FAR\",\r\n  traps_trapsNotSpecified: \"FIX\",\r\n\r\n  hooksAndLines_handlinesAndPoleLinesHandOperated: \"LHP\",\r\n  hooksAndLines_handlinesAndPoleLinesMechanized: \"LHM\",\r\n  hooksAndLines_setLonglines: \"LLS\",\r\n  hooksAndLines_driftingLonglines: \"LLD\",\r\n  hooksAndLines_longlinesNotSpecified: \"LL\",\r\n  hooksAndLines_trollingLines: \"LTL\",\r\n  hooksAndLines_hooksAndLinesNotSpecified: \"LX\",\r\n\r\n  grapplingAndWounding_harpoons: \"HAR\",\r\n\r\n  harvestingMachines_pumps: \"HMP\",\r\n  harvestingMachines_mechanizedDredges: \"HMD\",\r\n  harvestingMachines_harvestingMachinesNotSpecified: \"HMX\",\r\n\r\n  miscellaneousGear: \"MIS\",\r\n  recreationalFishingGear: \"RG\",\r\n  gearNotKnowOrNotSpecified: \"NK\"\r\n} as any;\r\n\r\n/**\r\n * data extraction code:\r\n\r\nimport {camel} from \"case\"\r\n\r\nconst data = `\r\n\r\n`.split('\\n')\r\n\r\nconst output = {}\r\n\r\ndata.map(d=>camel(d.trim())).forEach(d=>output[d] = null)\r\n\r\nconsole.log(JSON.stringify(output, \"\\t\", 2))\r\n\r\n */\r\n\r\n/**\r\n  * \r\n  * convert to ISSCFG Code, not accomodating special case.\r\n  * \r\nimport {camel} from \"case\"\r\n\r\nconst gearTree = {\r\n  surroundingNet: {\r\n    // 01.0.0\r\n    withPurseLines: {\r\n      // 01.1.0\r\n      oneBoatOperated: null, // 01.1.1\r\n      twoBoatsOperated: null // 01.1.2\r\n    },\r\n    withoutPurseLines: null // 01.2.0\r\n  },\r\n  seineNets: {\r\n    // 02.0.0\r\n    beachSeines: null, // 02.1.0\r\n    vesselSeines: {\r\n      // 02.2.0\r\n      danishSeines: null, // 02.2.1\r\n      scottishSeines: null,\r\n      pairSeines: null\r\n    },\r\n    seineNetsNotSpecified: null // 02.9.90\r\n  }\r\n};\r\n\r\nconst output = {}\r\n\r\nfunction extractTree (c, prevKey, prevIndex, level) {\r\n  if( c === null) {\r\n    \r\n    return;\r\n  };\r\n\r\n  Object.keys(c).forEach((k, i)=>{\r\n    const key = level === 1 ? k : `${prevKey}_${k}`\r\n\r\n    const nValue = key.search(/notSpecified/i) === -1 \r\n      ? i+1\r\n      : 9;\r\n\r\n    const baseValue = (level === 1 \r\n      ? (`0${nValue}`).slice(-2)\r\n      : `${prevIndex}.${nValue}`)\r\n\r\n    output[key] = baseValue + ('.0').repeat(3-level)\r\n    extractTree(c[k], key, baseValue, level + 1)\r\n  })\r\n}\r\n\r\nextractTree(gearTree,'', 0, 1)\r\n\r\nconsole.log(JSON.stringify(output, '\\t', 2))\r\n\r\n  * \r\n  */\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Select from \"react-styled-select\";\r\n\r\nimport { useCaptainProfileState } from \"../_data\";\r\nimport { StyledSubmitButton } from \"../_theme\";\r\nimport { createSelectOptionList } from \"../core/utils\";\r\n\r\nimport {\r\n  gearTree,\r\n  gearBaseList,\r\n  gearAbbreviationMap,\r\n  isGearValid,\r\n  getGearId,\r\n} from \"../data/gear\";\r\nimport { strings } from \"../i18n\";\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledSelect = styled(Select)`\r\n  width: 100%;\r\n  margin-bottom: 1em;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`;\r\n\r\nconst getGearKeyList : any = (gearTreeNode: null | Object) => {\r\n  if (gearTreeNode) {\r\n    const keys = Object.keys(gearTreeNode);\r\n\r\n    if (keys.length > 0) {\r\n      return createSelectOptionList(keys);\r\n    } else {\r\n      return [];\r\n    }\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const FishingGearInput = ({triggerNextStep}: any) => {\r\n  const [profile, setProfile] = useCaptainProfileState({});\r\n\r\n  const [partOne, setPartOne] = useState(\"\");\r\n  const [partTwo, setPartTwo] = useState(\"\");\r\n  const [partThree, setPartThree] = useState(\"\");\r\n\r\n  const partOneOptions = createSelectOptionList(gearBaseList);\r\n\r\n  const [partTwoOptions, setPartTwoOptions] = useState([]);\r\n  const [partThreeOptions, setPartThreeOptions] = useState([]);\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n\r\n  return (\r\n    <StyledForm\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n\r\n        setDisabled(true);\r\n\r\n        const gearId = getGearId(partOne, partTwo, partThree);\r\n\r\n        // console.log(gearId);\r\n        \r\n        if (!gearId) {\r\n          return console.error(\"GEAR ID IS INVALID!!!\");\r\n        }\r\n\r\n        const fishingGearTypeCode = gearAbbreviationMap[gearId];\r\n\r\n        setProfile({\r\n            ...profile,\r\n            fishingGearTypeCode\r\n        });\r\n\r\n        triggerNextStep();\r\n      }}\r\n    >\r\n      <StyledSelect\r\n        placeholder={strings.selectGearBase}\r\n        onChange={(value: string) => {\r\n          setPartOne(value);\r\n\r\n          setPartTwo(\"\");\r\n          setPartTwoOptions(getGearKeyList(gearTree[value]));\r\n\r\n          setPartThree(\"\");\r\n          setPartThreeOptions([]);\r\n        }}\r\n        value={partOne}\r\n        disabled={disabled}\r\n        options={partOneOptions}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n      <StyledSelect\r\n        placeholder={strings.selectGearSubtype}\r\n        onChange={(value: string) => {\r\n          setPartTwo(value);\r\n          setPartThree(\"\");\r\n          setPartThreeOptions(getGearKeyList(gearTree[partOne][value]));\r\n        }}\r\n        value={partTwo}\r\n        disabled={disabled || partTwoOptions.length === 0}\r\n        options={partTwoOptions}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n      <StyledSelect\r\n        clearable\r\n        placeholder={strings.selectGearOptionalType}\r\n        onChange={setPartThree}\r\n        onInputClear={()=>setPartThree('')}\r\n        value={partThree}\r\n        disabled={disabled || partThreeOptions.length === 0}\r\n        options={partThreeOptions}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n      />\r\n\r\n      <StyledSubmitButton\r\n        disabled={disabled || !isGearValid(partOne, partTwo, partThree)}\r\n      />\r\n    </StyledForm>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { animated } from \"react-spring\";\r\n\r\nimport { useCaptainProfileState, useProfileState, localStorageKey } from \"../_data\";\r\n\r\nimport { StyledSubmitButton, ReviewInput } from \"../_theme\";\r\n\r\nconst Container = styled(animated.div)`\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  margin-top: 1em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n`;\r\n\r\nexport const CaptainProfileReview = ({ triggerNextStep, steps }: any) => {\r\n  const {\r\n    add_productionMethod,\r\n\r\n    add_vesselOwnerName,\r\n    add_organizationName,\r\n\r\n    add_unitOfMeasurement\r\n  } = steps;\r\n\r\n  const [captainProfile] = useCaptainProfileState({});\r\n\r\n  const [, setProfile] = useProfileState({});\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const { captain, vessel, vesselCertification } = captainProfile;\r\n\r\n  const [formState, { text }] = useFormState<CaptainProfileReviewFormFields>({\r\n    firstName: captain.firstName,\r\n    middleName: captain.middleName,\r\n    lastName: captain.lastName,\r\n\r\n    vesselIdType: vessel.idType,\r\n    vesselIdString: vessel.idString,\r\n    vesselName: vessel.name,\r\n\r\n    vesselCertificationStandard: vesselCertification\r\n      ? vesselCertification.standard\r\n      : \"\",\r\n    vesselCertificationAgency: vesselCertification\r\n      ? vesselCertification.agency\r\n      : \"\",\r\n    vesselCertificationValue: vesselCertification\r\n      ? vesselCertification.value\r\n      : \"\",\r\n    vesselCertificationIdentification: vesselCertification\r\n      ? vesselCertification.identification\r\n      : \"\",\r\n\r\n    fishingGearType: captainProfile.fishingGearTypeCode,\r\n\r\n    productionMethod: add_productionMethod.value,\r\n\r\n    vesselOwnerName: add_vesselOwnerName ? add_vesselOwnerName.value : \"\",\r\n    organizationName: add_organizationName ? add_organizationName.value : \"\",\r\n\r\n    unitOfMeasurement: add_unitOfMeasurement.value\r\n  });\r\n\r\n  // console.log(formState.values)\r\n\r\n  // console.log(Object.keys(formState.values))\r\n\r\n  return (\r\n    <Container>\r\n      <StyledForm\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n\r\n          setDisabled(true);\r\n\r\n          setProfile({\r\n            ...formState.values,\r\n            completed: true\r\n          });\r\n\r\n          localStorage.removeItem(localStorageKey.chatCache);\r\n\r\n          triggerNextStep();\r\n        }}\r\n      >\r\n        {Object.keys(formState.values).map(k => (\r\n          <ReviewInput\r\n            key={k}\r\n            disabled={disabled}\r\n            label={k}\r\n            {...text(k as any)}\r\n          />\r\n        ))}\r\n\r\n        <StyledSubmitButton disabled={disabled} />\r\n      </StyledForm>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useFormState } from 'react-use-form-state'\r\nimport { animated } from 'react-spring'\r\n\r\nimport { useCaptainProfileState } from '../_data'\r\nimport { strings } from '../i18n'\r\n\r\nimport { StyledSubmitButton, LabeledInput } from '../_theme'\r\n\r\ninterface CertificationStandardFormFields {\r\n  standard: string\r\n  agency: string\r\n  value: string\r\n  identification: string\r\n}\r\n\r\nconst Container = styled(animated.div)`\r\n  width: 100%;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n`\r\n\r\nconst StyledForm = styled.form`\r\n  margin-top: 1em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledHeaderLabel = styled.span`\r\n  color: ${p => p.theme.botBubbleColor};\r\n  font-weight: bold;\r\n`\r\n\r\nconst CertificationInput = styled(LabeledInput)`\r\n  width: 100%;\r\n  margin-bottom: 0.5em;\r\n`\r\n\r\nexport const VesselCertificationInput = ({ triggerNextStep, steps }: any) => {\r\n  const [profile, setProfile] = useCaptainProfileState({})\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const [formState, { text }] = useFormState<CertificationStandardFormFields>()\r\n\r\n  return (\r\n    <Container>\r\n      <StyledHeaderLabel>{strings.certification}</StyledHeaderLabel>\r\n\r\n      <StyledForm\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n\r\n          setDisabled(true)\r\n\r\n          setProfile({\r\n            ...profile,\r\n            vesselCertification: {\r\n              ...formState.values,\r\n              standard: 'MSC'\r\n            }\r\n          })\r\n\r\n          triggerNextStep()\r\n        }}>\r\n        <CertificationInput\r\n          disabled={disabled}\r\n          required\r\n          label={strings.form_certificationAgencyLabel}\r\n          placeholder={strings.form_certificationAgencyPlaceholder}\r\n          {...text('agency')}\r\n        />\r\n\r\n        <CertificationInput\r\n          disabled={disabled}\r\n          required\r\n          label={strings.form_certificationValueLabel}\r\n          placeholder={strings.form_certificationValuePlaceholder}\r\n          {...text('value')}\r\n        />\r\n\r\n        <CertificationInput\r\n          disabled={disabled}\r\n          required\r\n          label={strings.form_certificationIdentificationLabel}\r\n          placeholder={strings.form_certificationIdentificationPlaceholder}\r\n          {...text('identification')}\r\n        />\r\n\r\n        <StyledSubmitButton disabled={disabled} />\r\n      </StyledForm>\r\n    </Container>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n  createOptionLabel,\r\n  createPromptArray\r\n} from \"../core/utils\";\r\nimport { VesselCaptainNameInput } from \"../components/VesselCaptainNameInput\";\r\nimport { VesselIDInput } from \"../components/VesselIDInput\";\r\nimport { FishingGearInput } from \"../components/FishingGearInput\";\r\nimport { CaptainProfileReview } from \"../components/CaptainProfileReview\";\r\nimport { VesselCertificationInput } from \"../components/VesselCertificationInput\";\r\n\r\nconst promptOrder = [\r\n  \"prompt_welcomeNew\",\r\n\r\n  \"prompt_introduceNemo\",\r\n\r\n  \"prompt_vesselCaptainName\",\r\n  \"add_vesselCaptainName\",\r\n\r\n  \"prompt_vesselName\",\r\n  \"add_vesselName\",\r\n\r\n  \"prompt_vesselID\",\r\n  \"add_vesselID\",\r\n\r\n  \"prompt_fishingGearTypeCode\",\r\n  \"add_fishingGearTypeCode\",\r\n\r\n  \"prompt_productionMethod\",\r\n  \"add_productionMethod\",\r\n\r\n  \"prompt_ownership\",\r\n  \"add_ownership\",\r\n\r\n  \"prompt_vesselOwnerName\",\r\n  \"add_vesselOwnerName\",\r\n\r\n  \"prompt_organization\",\r\n  \"add_organization\",\r\n\r\n  \"prompt_organizationName\",\r\n  \"add_organizationName\",\r\n\r\n  \"prompt_certificationHolder\",\r\n  \"add_certificationHolder\",\r\n\r\n  \"prompt_certificationStandard\",\r\n  \"add_certificationStandard\",\r\n\r\n  \"prompt_unitOfMeasurement\",\r\n  \"add_unitOfMeasurement\",\r\n\r\n  \"prompt_setupProfileCompleted\",\r\n\r\n  \"prompt_profileReview\",\r\n\r\n  \"prompt_profileDone\",\r\n\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nconst promptStructure = {\r\n  add_vesselCaptainName: {\r\n    component: <VesselCaptainNameInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_vesselName: {\r\n    user: true\r\n  },\r\n\r\n  add_vesselID: {\r\n    component: <VesselIDInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_fishingGearTypeCode: {\r\n    // user: true,\r\n    component: <FishingGearInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  add_productionMethod: {\r\n    // user: true\r\n    hideInput: true,\r\n    options: [\"aquaculture\", \"inlandFishery\", \"marineFishery\"].map(\r\n      createOptionLabel\r\n    )\r\n  },\r\n\r\n  add_ownership: {\r\n    // user: true\r\n    hideInput: true,\r\n    options: [\"yes\", \"no\"].map(createOptionLabel),\r\n    triggers: [\"prompt_organization\", \"prompt_vesselOwnerName\"]\r\n  },\r\n\r\n  add_vesselOwnerName: {\r\n    user: true\r\n  },\r\n\r\n  add_organization: {\r\n    hideInput: true,\r\n    options: [\"yes\", \"no\"].map(createOptionLabel),\r\n    triggers: [\"prompt_organizationName\", \"prompt_certificationHolder\"]\r\n  },\r\n\r\n  add_organizationName: {\r\n    user: true\r\n  },\r\n\r\n  add_unitOfMeasurement: {\r\n    hideInput: true,\r\n    options: [\"pound\", \"kilogram\"].map(createOptionLabel)\r\n  },\r\n\r\n  add_certificationHolder: {\r\n    hideInput: true,\r\n    options: [\"yes\", \"no\"].map(createOptionLabel),\r\n    triggers: [\"prompt_certificationStandard\", \"prompt_unitOfMeasurement\"]\r\n  },\r\n\r\n  add_certificationStandard: {\r\n    component: <VesselCertificationInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  },\r\n\r\n  prompt_profileReview: {\r\n    component: <CaptainProfileReview />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  }\r\n} as any;\r\n\r\nexport const createSetupCaptainProfilePrompt = () =>\r\n  createPromptArray(promptOrder, promptStructure);\r\n","export const csvDemo1Header = [\r\n  \"informationProviderID\",\r\n  \"informationProviderContactName\",\r\n  \"informationProviderEmail\",\r\n  \"destinationID\",\r\n  \"destinationContactName\",\r\n  \"destinationEmail\",\r\n  \"eventDateV1\",\r\n  \"eventTimeZoneOffsetV1\",\r\n  \"readPointV1\",\r\n  \"bizLocationV1\",\r\n  \"seafoodID\",\r\n  \"speciesCode\",\r\n  \"speciesScientificName\",\r\n  \"tradeItemDescription\",\r\n  \"tradeItemConditionCode\",\r\n  \"seafoodQuantity\",\r\n  \"seafoodUOM\",\r\n  \"vesselOperator\",\r\n  \"vesselID\",\r\n  \"vesselRegistration\",\r\n  \"vesselName\",\r\n  \"vesselFlagState\",\r\n  \"catchAreaFAO\",\r\n  \"fishingGearTypeCode\",\r\n  \"productionMethodCode\",\r\n  \"harvestStartDate\",\r\n  \"harvestEndDate\",\r\n  \"unloadingPort\",\r\n  \"mscCertification\",\r\n  \"landingAuthority\",\r\n  \"landingAuthorization\",\r\n  \"landingDateStart\",\r\n  \"landingDateEnd\",\r\n  \"harvestCertification\",\r\n  \"harvestCertificationCoC\",\r\n  \"FIP\",\r\n  \"ISSF\",\r\n  \"ratingsScore\",\r\n  \"ratingsScheme\",\r\n  \"vesselTransponder\",\r\n  \"vesselRegistryLink\",\r\n  \"visibilityEvent\",\r\n  \"productOwnerV1\",\r\n  \"eventDateV2\",\r\n  \"eventTimeZoneOffsetV2\",\r\n  \"readPointV2\",\r\n  \"bizLocationV2\",\r\n  \"inputSeafoodID\",\r\n  \"inputSeafoodQuantity\",\r\n  \"inputSeafoodUOM\",\r\n  \"outputProductID\",\r\n  \"outputProductName\",\r\n  \"outputQuantity\",\r\n  \"outputUOM\",\r\n  \"lotNumber\",\r\n  \"productionDate\",\r\n  \"bestBeforeDate\",\r\n  \"storageStateCode\",\r\n  \"firstFreezeDate\",\r\n  \"countryOfOrigin\",\r\n  \"processorOwnerName\",\r\n  \"processorID\",\r\n  \"processorAddress1\",\r\n  \"processorAddress2\",\r\n  \"processorCity\",\r\n  \"processorState\",\r\n  \"processorPostalCode\",\r\n  \"processorCountryCode\",\r\n  \"processorContactName\",\r\n  \"processorContactEmail\",\r\n  \"transformationVisibilityEvent\",\r\n  \"productOwnerV3\"\r\n];\r\n","import { DateTime } from \"luxon\";\r\n\r\n// const parseDate = (s) => DateTime.fromFormat(s, 'dd/MM/yy').toISO()\r\n\r\nconst createSender = ({ informationProviderID, informationProviderContactName, informationProviderEmail }) => `\r\n<sbdh:Sender>\r\n    <sbdh:Identifier>${informationProviderID}</sbdh:Identifier>\r\n    <sbdh:ContactInformation>\r\n        <sbdh:Contact>${informationProviderContactName}</sbdh:Contact>\r\n        <sbdh:EmailAddress>${informationProviderEmail}</sbdh:EmailAddress>\r\n    </sbdh:ContactInformation>\r\n</sbdh:Sender>\r\n`\r\n\r\nconst createReceiver = ({ destinationID, destinationContactName, destinationEmail }) => `\r\n<sbdh:Receiver>\r\n    <sbdh:Identifier>${destinationID}</sbdh:Identifier>\r\n    <sbdh:ContactInformation>\r\n        <sbdh:Contact>${destinationContactName}</sbdh:Contact>\r\n        <sbdh:EmailAddress>${destinationEmail}</sbdh:EmailAddress>\r\n    </sbdh:ContactInformation>\r\n</sbdh:Receiver>\r\n`\r\n\r\nconst createFishVocab = ({ seafoodID, speciesCode, speciesScientificName, tradeItemDescription, informationProviderID, tradeItemConditionCode }) => `\r\n<VocabularyElement id=\"${seafoodID}\"> \r\n    <attribute id=\"urn:epcglobal:cbv:mda#speciesForFisheryStatisticsPurposesCode\">${speciesCode}</attribute>\r\n    <attribute id=\"urn:epcglobal:cbv:mda#speciesForFisheryStatisticsPurposesName\">${speciesScientificName}</attribute>\r\n    <attribute id=\"urn:epcglobal:cbv:mda#descriptionShort\">${tradeItemDescription}</attribute>\r\n    <attribute id=\"urn:epcglobal:cbv:mda#informationProvider\">${informationProviderID}</attribute>\r\n    <attribute id=\"urn:epcglobal:cbv:mda#tradeItemConditionCode\">${tradeItemConditionCode}</attribute>\r\n</VocabularyElement>\r\n`\r\nconst createVocabEl = ({ id, ...props }) => `\r\n<VocabularyElement id=\"${id}\">\r\n    ${Object.keys(props).map(k => `<attribute id=\"urn:epcglobal:cbv:mda#${k}\">${props[k]}</attribute>`).join('\\n')}\r\n</VocabularyElement>\r\n`\r\n\r\nconst createOutputProductVocab = (data: CsvPayloadFields) => createVocabEl({\r\n    id: data.outputProductID,\r\n    informationProvider: data.informationProviderID,\r\n    descriptionShort: data.outputProductName\r\n})\r\n\r\nconst createLocationVocab = (data: CsvPayloadFields) => createVocabEl({\r\n    id: data.processorID,\r\n    informationProvider: data.informationProviderID,\r\n    name: data.processorOwnerName,\r\n    streetAddressOne: data.processorAddress1,\r\n    streetAddressTwo: data.processorAddress2,\r\n    city: data.processorCity,\r\n    state: data.processorState,\r\n    postalCode: data.processorPostalCode,\r\n    countryCode: data.processorCountryCode,\r\n    contact: data.processorContactName,\r\n    email: data.processorContactEmail\r\n})\r\n\r\nconst createFishCatchEvent = (data: CsvPayloadFields) => `\r\n<ObjectEvent> <!-- V1 Fishing/Catch Event (represents one catch, if multiple creat multiple events and IDs) -->\r\n    <eventTime>${data.eventDateV1}</eventTime> <!-- Reflects when the catch event is recorded, not actually when fish are caught -->\r\n    <eventTimeZoneOffset>${data.eventTimeZoneOffsetV1}</eventTimeZoneOffset>\r\n    <epcList>\r\n    </epcList>\r\n    <action>ADD</action> <!-- Action ADD indicates this is the creation point of the specific lot of fish -->\r\n    <bizStep>urn:epcglobal:cbv:bizstep:commissioning</bizStep> <!-- Indicates first time this ID appears in traceability event stream -->\r\n    <disposition>urn:epcglobal:cbv:disp:active</disposition> <!-- This indicates the lot is active. -->\r\n    <readPoint>\r\n        <id>${data.readPointV1}</id> <!-- This should either be where the catch event was recorded or where the fish was landed -->\r\n    </readPoint>\r\n    <bizLocation>\r\n        <id>${data.bizLocationV1}</id> <!-- Optional, if the vessel has a globally unique ID.  Otherwise, exclude.-->\r\n    </bizLocation>\r\n    <extension>              \r\n        <quantityList>\r\n            <quantityElement> \r\n                <epcClass>${data.seafoodID}</epcClass> <!-- #10 GDST KDE Seafood Identifier -->\r\n                <quantity>${data.seafoodQuantity}</quantity> <!-- #11 GDST KDE Weight/Commodity -->\r\n                <uom>${data.seafoodUOM}</uom> <!-- SIMP UOM is KG -->\r\n            </quantityElement>\r\n        </quantityList>\r\n        <ilmd>\r\n            <cbvmda:vesselCatchInformationList> <!--  Attach GDST KDEs to unique Catch Event -->\r\n                <vesselCatchInformation>\r\n                    <vesselOperator>${data.vesselOperator}</vesselOperator> <!-- #24 GDST KDE Vessel Ownership -->\r\n                    <vesselID>${data.vesselID}</vesselID>\r\n                    <vesselRegistration>${data.vesselRegistration}</vesselRegistration>\r\n                    <vesselName>${data.vesselName}</vesselName>\r\n                    <vesselFlagState>${data.vesselFlagState}</vesselFlagState>\r\n                    <catchArea>${data.catchAreaFAO}</catchArea> <!-- #7 GDST KDE FAO Catch Area -->\r\n                    <fishingGearTypeCode>${data.fishingGearTypeCode}</fishingGearTypeCode> <!-- #5 GDST KDE Gear Type Code -->\r\n                </vesselCatchInformation>\r\n            </cbvmda:vesselCatchInformationList>\r\n            <cbvmda:productionMethodCode>${data.productionMethodCode}</cbvmda:productionMethodCode> <!-- SIMP Source Type Code \"HCF\" -->\r\n            <cbvmda:harvestStartDate>${data.harvestStartDate}</cbvmda:harvestStartDate> <!-- #8 & 9 GDST KDE Date of Capture -->\r\n            <cbvmda:harvestEndDate>${data.harvestEndDate}</cbvmda:harvestEndDate> <!-- #8 & 9 GDST KDE Date of Capture -->\r\n            <cbvmda:certificationList> <!-- CERTIFICATES -->\r\n                <certification>\r\n                    <certificationStandard>MSC</certificationStandard>\r\n                    <certificationIdentification>${data.mscCertification}</certificationIdentification>\r\n                </certification>\r\n                <certification>\r\n                    <certificationStandard>${data.landingAuthority}</certificationStandard>\r\n                    <certificationIdentification>${data.landingAuthorization}</certificationIdentification>\r\n                </certification>\r\n            </cbvmda:certificationList>\r\n        </ilmd>\r\n    </extension>\r\n    <!-- EXTENSION -->\r\n    <gdst:visibilityEvent>${data.visibilityEvent}</gdst:visibilityEvent> <!-- Visibility Data -->\r\n    <gdst:productOwner>${data.productOwnerV1}</gdst:productOwner> <!-- Product Owner -->\r\n    <cbvmda:informationProvider>${data.informationProviderID}</cbvmda:informationProvider> <!-- Submitter of Data -->\r\n</ObjectEvent>\r\n`\r\n\r\nconst createProcessEvent = (data: CsvPayloadFields) => `\r\n<extension> <!-- V2 Process Into Loins -->\r\n    <TransformationEvent>\r\n        <eventTime>${data.eventDateV2}</eventTime>\r\n        <eventTimeZoneOffset>${data.eventTimeZoneOffsetV2}</eventTimeZoneOffset>\r\n        <inputQuantityList>\r\n            <quantityElement> \r\n                <epcClass>${data.inputSeafoodID}</epcClass>\r\n                <quantity>${data.inputSeafoodQuantity}</quantity>\r\n                <uom>${data.inputSeafoodUOM}</uom>\r\n            </quantityElement>\r\n        </inputQuantityList>\r\n        <outputQuantityList>\r\n            <quantityElement>\r\n                <epcClass>${data.outputProductID}</epcClass> \r\n                <quantity>${data.outputQuantity}</quantity>\r\n                <uom>${data.outputUOM}</uom>\r\n            </quantityElement>\r\n        </outputQuantityList> \r\n        <bizStep>urn:epcglobal:cbv:bizstep:commissioning</bizStep>\r\n        <disposition>urn:epcglobal:cbv:disp:active</disposition>\r\n        <readPoint>\r\n            <id>${data.readPointV2}</id> <!-- Actual Location where event is captured -->\r\n        </readPoint>\r\n        <bizLocation>\r\n            <id>${data.bizLocationV2}</id> <!-- Processor Location -->\r\n        </bizLocation>\r\n        <ilmd> <!-- Master Data Related to a specific production lot -->\r\n            <cbvmda:lotNumber>${data.lotNumber}</cbvmda:lotNumber>\r\n            <cbvmda:productionDate>${data.productionDate}</cbvmda:productionDate>\r\n            <cbvmda:bestbeforeDate>${data.bestBeforeDate}</cbvmda:bestbeforeDate>\r\n            <cbvmda:storageStateCode>${data.storageStateCode}</cbvmda:storageStateCode>\r\n            <cbvmda:firstFreezeDate>${data.firstFreezeDate}</cbvmda:firstFreezeDate>\r\n        </ilmd>\r\n        <!-- EXTENSION -->\r\n        <gdst:visibilityEvent>${data.transformationVisibilityEvent}</gdst:visibilityEvent>\r\n        <gdst:productOwner>${data.productOwnerV3}</gdst:productOwner> <!-- PGLN of company who owned products when event occurred. In the case of a transaction, it is the seller. -->\r\n        <cbvmda:informationProvider>${data.informationProviderID}</cbvmda:informationProvider> <!-- PGLN of company who input the data. -->\r\n    </TransformationEvent>\r\n</extension>\r\n`\r\n\r\nexport const createAggregatedXmlDemo = async (dataList: [CsvPayloadFields]) => {\r\n    const dt = DateTime.local();\r\n\r\n    const creationDate = dt.toISO();\r\n\r\n    // Use the 1st row for sender and receiver\r\n    const {\r\n        informationProviderID, informationProviderContactName, informationProviderEmail, destinationID, destinationContactName, destinationEmail\r\n    } = dataList[0]\r\n\r\n    const fishIdSet = new Set()\r\n    const fishVocabList = dataList.filter(({ seafoodID }) => {\r\n        if (fishIdSet.has(seafoodID)) return false\r\n        fishIdSet.add(seafoodID)\r\n        return true\r\n    })\r\n\r\n    const outputProductIdSet = new Set()\r\n    const outputProductVocabList = dataList.filter(({ outputProductID }) => {\r\n        if (outputProductIdSet.has(outputProductID)) return false\r\n        outputProductIdSet.add(outputProductID)\r\n        return true\r\n    })\r\n\r\n    /**\r\n     *  \r\n        id: processorID,\r\n        informationProvider: informationProviderID,\r\n        name: processorOwnerName,\r\n        streetAddressOne: processorAddress1,\r\n        streetAddressTwo: processorAddress2,\r\n        city: processorCity,\r\n        state: processorState,\r\n        postalCode: processorPostalCode,\r\n        countryCode: processorCountryCode,\r\n        contact: processorContactName,\r\n        email: processorContactEmail\r\n     */\r\n\r\n    const locationIdSet = new Set()\r\n    const locationVocabList = dataList.filter(({ processorID }) => {\r\n        if (locationIdSet.has(processorID)) return false\r\n        locationIdSet.add(processorID)\r\n        return true\r\n    })\r\n\r\n    return `\r\n<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:1\" \r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n    xmlns:sbdh=\"http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader\" schemaVersion=\"0\" creationDate=\"2001-12-17T09:30:47Z\" \r\n    xsi:schemaLocation=\"urn:epcglobal:epcis:xsd:1  http://www.gs1si.org/BMS/epcis/1_2/EPCglobal-epcis-1_2.xsd\" \r\n    xmlns:cbvmda=\"urn:epcglobal:cbv:mda\"\r\n    xmlns:gdst=\"https://traceability-dialogue.org/epcis\">\r\n    <EPCISHeader>\r\n        <sbdh:StandardBusinessDocumentHeader>\r\n            <sbdh:HeaderVersion>1.0</sbdh:HeaderVersion>\r\n\r\n            ${createSender({ informationProviderID, informationProviderContactName, informationProviderEmail })}\r\n\r\n            ${createReceiver({ destinationID, destinationContactName, destinationEmail })}\r\n\r\n            <sbdh:DocumentIdentification> <!-- Meets minimum GDST Wild Caught BUL KDE 4.0 and CTEs  -->\r\n                <sbdh:Standard>GDST</sbdh:Standard> \r\n                <sbdh:TypeVersion>4.0</sbdh:TypeVersion>\r\n                <sbdh:Type>Wild</sbdh:Type>\r\n                <sbdh:CreationDateAndTime>${creationDate}</sbdh:CreationDateAndTime>\r\n            </sbdh:DocumentIdentification>\r\n        </sbdh:StandardBusinessDocumentHeader>\r\n        <extension>\r\n            <EPCISMasterData>\r\n                <VocabularyList> \r\n                    <Vocabulary type=\"urn:epcglobal:epcis:vtype:EPCClass\">\r\n                        <VocabularyElementList>\r\n\r\n                            ${fishVocabList.map(createFishVocab).join('\\n')}\r\n\r\n                            ${outputProductVocabList.map(createOutputProductVocab).join('\\n')}\r\n\r\n                        </VocabularyElementList>\r\n                    </Vocabulary>\r\n                    <Vocabulary type=\"urn:epcglobal:epcis:vtype:Location\">\r\n                        <VocabularyElementList>\r\n                            ${locationVocabList.map(createLocationVocab).join('\\n')}\r\n                        </VocabularyElementList>\r\n                    </Vocabulary>           \r\n                </VocabularyList>\r\n            </EPCISMasterData>\r\n        </extension>\r\n    </EPCISHeader>\r\n        <EPCISBody>\r\n        <EventList>\r\n            ${dataList.map(createFishCatchEvent).join('\\n')}\r\n\r\n            ${dataList.map(createProcessEvent).join('\\n')}\r\n            </EventList>\r\n    </EPCISBody>\r\n</epcis:EPCISDocument>\r\n`\r\n}\r\n\r\nexport const createCsvDemo1Payload = async (data: CsvPayloadFields) => {\r\n    const dt = DateTime.local();\r\n\r\n    const creationDate = dt.toISO();\r\n\r\n    // const { latitude, longitude } = (await getCoordinate()) as any;\r\n\r\n    // const quantityElementList = generateQuantityElementList(\r\n    //   fishCode,\r\n    //   quantityList\r\n    // );\r\n\r\n    // const vesselCaptainName = upper(`${lastName}_${firstName}`, \",\");\r\n\r\n    // const productionMethodCode = productionMethodCodeMap[productionMethod];\r\n\r\n    // const vesselID = upper(vesselIdType) + \".\" + vesselIdString;\r\n\r\n    // const vesselFlagState = upper(language);\r\n\r\n    return `\r\n<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:1\" \r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n    xmlns:sbdh=\"http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader\" schemaVersion=\"0\" creationDate=\"2001-12-17T09:30:47Z\" \r\n    xsi:schemaLocation=\"urn:epcglobal:epcis:xsd:1  http://www.gs1si.org/BMS/epcis/1_2/EPCglobal-epcis-1_2.xsd\" \r\n    xmlns:cbvmda=\"urn:epcglobal:cbv:mda\"\r\n    xmlns:gdst=\"https://traceability-dialogue.org/epcis\">\r\n    <EPCISHeader>\r\n        <sbdh:StandardBusinessDocumentHeader>\r\n            <sbdh:HeaderVersion>1.0</sbdh:HeaderVersion>\r\n\r\n            ${createSender(data)}\r\n\r\n            ${createReceiver(data)}\r\n\r\n            <sbdh:DocumentIdentification> <!-- Meets minimum GDST Wild Caught BUL KDE 4.0 and CTEs  -->\r\n                <sbdh:Standard>GDST</sbdh:Standard> \r\n                <sbdh:TypeVersion>4.0</sbdh:TypeVersion>\r\n                <sbdh:Type>Wild</sbdh:Type>\r\n                <sbdh:CreationDateAndTime>${creationDate}</sbdh:CreationDateAndTime>\r\n            </sbdh:DocumentIdentification>\r\n        </sbdh:StandardBusinessDocumentHeader>\r\n        <extension>\r\n            <EPCISMasterData>\r\n                <VocabularyList> \r\n                    <Vocabulary type=\"urn:epcglobal:epcis:vtype:EPCClass\">\r\n                        <VocabularyElementList>\r\n                            ${createFishVocab(data)}\r\n\r\n                            ${createOutputProductVocab(data)}\r\n                        </VocabularyElementList>\r\n                    </Vocabulary>\r\n                    <Vocabulary type=\"urn:epcglobal:epcis:vtype:Location\">\r\n                        <VocabularyElementList>\r\n                            ${createLocationVocab(data)}    \r\n                        </VocabularyElementList>\r\n                    </Vocabulary>           \r\n                </VocabularyList>\r\n            </EPCISMasterData>\r\n        </extension>\r\n    </EPCISHeader>\r\n        <EPCISBody>\r\n        <EventList>\r\n            ${createFishCatchEvent(data)}\r\n            ${createProcessEvent(data)}\r\n            </EventList>\r\n    </EPCISBody>\r\n</epcis:EPCISDocument>\r\n`\r\n};\r\n","import React, { useState, useRef } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { DateTime } from 'luxon'\r\n\r\nimport FileDrop from 'react-file-drop'\r\nimport { FillButton, Divider } from '../_theme'\r\n\r\nimport fileReaderStream from 'filereader-stream'\r\nimport neatCsv from 'neat-csv'\r\nimport { csvDemo1Header } from '../data/csvConfig'\r\nimport { createCsvDemo1Payload, createAggregatedXmlDemo } from '../api/csvDemo1'\r\nimport { Accordion, AccordionPanel, Box, Heading } from 'grommet'\r\nimport { Grommet } from 'grommet'\r\nimport { grommet } from 'grommet/themes'\r\nimport api from '../api'\r\nimport { saveAs } from 'file-saver'\r\n\r\ntype SentStateType = 'default' | 'sending' | 'sent'\r\n\r\nconst StyledGrommet = styled(Grommet)`\r\n  width: 100%;\r\n`\r\n\r\nconst DataContainer = styled.div`\r\n  max-height: 30vh;\r\n  overflow-y: auto;\r\n`\r\n\r\nconst FileDropContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  .file-drop {\r\n    /* relatively position the container bc the contents are absolute */\r\n    position: relative;\r\n    height: 100px;\r\n    width: 100%;\r\n    border: 2px dashed;\r\n  }\r\n\r\n  .file-drop > .file-drop-target {\r\n    cursor: pointer;\r\n\r\n    /* basic styles */\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 2px;\r\n    /* --------------- */\r\n\r\n    /* horizontally and vertically center all content */\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    justify-content: center;\r\n    align-content: center;\r\n    text-align: center;\r\n    /* --------------- */\r\n  }\r\n\r\n  .file-drop > .file-drop-target.file-drop-dragging-over-frame {\r\n    /* overlay a black mask when dragging over the frame */\r\n    border: none;\r\n    background-color: ${p => p.theme.userFontColor};\r\n    box-shadow: none;\r\n    z-index: 50;\r\n    opacity: 1;\r\n    /* --------------- */\r\n\r\n    /* typography */\r\n    color: white;\r\n    /* --------------- */\r\n  }\r\n\r\n  .file-drop > .file-drop-target.file-drop-dragging-over-target {\r\n    /* turn stuff orange when we are dragging over the target */\r\n    color: ${p => p.theme.headerBgColor};\r\n    box-shadow: 0 0 13px 3px ${p => p.theme.headerBgColor};\r\n  }\r\n`\r\n\r\nconst HiddenContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n`\r\n\r\nconst HiddenFileInput = styled.div`\r\n  display: none;\r\n`\r\n\r\nconst FileDropText = styled.div`\r\n  padding: 1em;\r\n`\r\n\r\nconst AccordionContent = styled(Box)`\r\n  height: 20vh;\r\n  overflow-y: auto;\r\n`\r\n\r\nconst CodeContainer = styled.code`\r\n  white-space: pre-wrap;\r\n  font-size: smaller;\r\n`\r\n\r\nexport const CsvFileInput = ({ triggerNextStep }: any) => {\r\n  const fileInputRef = useRef(null)\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const [sent, setSent] = useState<SentStateType>('default')\r\n\r\n  const [epcisXmlList, setEpcisXmlList] = useState([])\r\n\r\n  const [aggregatedXml, setAggregatedXml] = useState(null)\r\n\r\n  const processFile = async ([file]: any) => {\r\n    if (!file) return\r\n\r\n    if (file.name.split('.').pop() !== 'csv') {\r\n      return\r\n    }\r\n\r\n    const readerStream = fileReaderStream(file)\r\n    const [, ...csvRowList] = await neatCsv(readerStream, {\r\n      headers: csvDemo1Header\r\n    }) as any\r\n\r\n    console.log(csvRowList)\r\n\r\n    const parsedData = await Promise.all(csvRowList.map(createCsvDemo1Payload))\r\n\r\n    setEpcisXmlList(parsedData)\r\n\r\n    setAggregatedXml(await createAggregatedXmlDemo(csvRowList))\r\n  }\r\n\r\n  return (\r\n    <FileDropContainer>\r\n      {!disabled && (\r\n        <>\r\n          <HiddenContainer onClick={() => fileInputRef.current.click()}>\r\n            <FileDrop onDrop={processFile}>\r\n              <FileDropText>Drop your CSV file here, or tap the box to select a file.</FileDropText>\r\n            </FileDrop>\r\n            <HiddenFileInput>\r\n              <input\r\n                ref={fileInputRef}\r\n                accept=\".csv\"\r\n                type=\"file\"\r\n                onChange={evt => {\r\n                  processFile(evt.target.files)\r\n                }}\r\n              />\r\n            </HiddenFileInput>\r\n          </HiddenContainer>\r\n          {epcisXmlList.length > 0 && (\r\n            <StyledGrommet theme={grommet}>\r\n              <Heading size=\"small\" level={2}>\r\n                {epcisXmlList.length} event{epcisXmlList.length > 0 && 's'} found:\r\n              </Heading>\r\n              <DataContainer>\r\n                <Accordion multiple margin=\"small\">\r\n                  {epcisXmlList.map((d, i) => (\r\n                    <AccordionPanel key={i} label={`Event #${i + 1}`}>\r\n                      <AccordionContent>\r\n                        <CodeContainer>{d}</CodeContainer>\r\n                      </AccordionContent>\r\n                    </AccordionPanel>\r\n                  ))}\r\n                </Accordion>\r\n              </DataContainer>\r\n\r\n              <Divider />\r\n              <FillButton\r\n                disabled={sent !== 'default'}\r\n                onClick={async () => {\r\n                  setSent('sending')\r\n                  await Promise.all(epcisXmlList.map(d => api.freepcis.sendCatchEvent(d)))\r\n                  setSent('sent')\r\n                }}>\r\n                {sent === 'sending' ? 'Sending...' : sent === 'sent' ? 'Data sent!' : 'Send to FreEPCIS'}\r\n              </FillButton>\r\n\r\n              {aggregatedXml && (\r\n                <FillButton\r\n                  background={'lime'}\r\n                  disabled={disabled}\r\n                  onClick={() => {\r\n                    const blob = new Blob([aggregatedXml], { type: 'application/xml;charet=ustf-8' })\r\n                    const dt = DateTime.local()\r\n\r\n                    const creationDate = dt.toISO()\r\n\r\n                    saveAs(blob, `GDST-EPCIS-${creationDate}.xml`)\r\n                  }}>\r\n                  Download Aggregated XML\r\n                </FillButton>\r\n              )}\r\n            </StyledGrommet>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <FillButton\r\n        disabled={disabled}\r\n        onClick={() => {\r\n          setDisabled(true)\r\n          triggerNextStep()\r\n        }}>\r\n        Finalize\r\n      </FillButton>\r\n    </FileDropContainer>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { createPromptArray } from \"../core/utils\";\r\nimport { CsvFileInput } from \"../components/CsvFileInput\";\r\n\r\nconst promptOrder = [\r\n  \"prompt_test\",\r\n\r\n  \"comp_test\",\r\n  \r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nconst promptStructure = {\r\n  comp_test: {\r\n    component: <CsvFileInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  }\r\n} as any;\r\n\r\nexport const createTestPrompt = () =>\r\n  createPromptArray(promptOrder, promptStructure);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nimport { RpcError } from \"eosjs\";\r\n\r\nimport {\r\n  StyledColumn,\r\n  StyledColumnForm,\r\n  LabeledInput,\r\n  FillButton,\r\n  Divider,\r\n  StyledLabel,\r\n} from \"../_theme\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { dappVault, claimCatchEvent } from \"../api/dapp\";\r\nimport { useIpfs } from \"../hooks/use-ipfs\";\r\nimport api from \"../api\";\r\n\r\n// const debug = require(\"debug\")(\"DappProducerReceiveInput\");\r\n\r\ninterface TestInputFields {\r\n  verifyId: string;\r\n  apiUrl: string;\r\n  txId: number;\r\n}\r\n\r\nconst Container = styled(StyledColumn)`\r\n  word-break: break-word;\r\n  margin: 0.5em;\r\n`;\r\n\r\nconst EpcisDataContainer = styled.div`\r\n  overflow: scroll;\r\n  height: 30vh;\r\n`;\r\n\r\nconst EpcisDataViewer = styled.code`\r\n  font-size: 10px;\r\n`;\r\n\r\nexport const DappProducerReceiveInput = ({\r\n  triggerNextStep,\r\n  previousStep\r\n}: any) => {\r\n  const { apiUrl } = dappVault;\r\n\r\n  const { ipfs, isIpfsReady, ipfsInitError } = useIpfs();\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [formState, { text }] = useFormState<TestInputFields>({\r\n    apiUrl\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const [epcisData, setEpcisData] = useState(\"\");\r\n  const [receiptId, setReceiptId] = useState(\"\");\r\n\r\n  const onFinish = async (event: any) => {\r\n    event.preventDefault();\r\n    setDisabled(true);\r\n    triggerNextStep();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {isIpfsReady && (\r\n        <StyledColumnForm\r\n          onSubmit={async event => {\r\n            event.preventDefault();\r\n\r\n            try {\r\n              const catchResult = await claimCatchEvent(formState.values, ipfs);\r\n\r\n              setReceiptId(catchResult.originId);\r\n              setEpcisData(catchResult.epcisData);\r\n\r\n              setSuccess(\"sent\");\r\n              // setSuccess(`IPFS URL: ${nemoTx.data.str}`);\r\n            } catch (err) {\r\n              console.error(err);\r\n              if (err instanceof RpcError) {\r\n                console.log(JSON.stringify(err.json, null, 2));\r\n              } \r\n              setError(err.message);\r\n            }\r\n          }}\r\n        >\r\n          <LabeledInput\r\n            label={\"API\"}\r\n            disabled={disabled}\r\n            required\r\n            {...text(\"apiUrl\")}\r\n            placeholder={\"find a p2p server . . .\"}\r\n          />\r\n\r\n          <LabeledInput\r\n            disabled={disabled}\r\n            label={\"ID\"}\r\n            required\r\n            {...text(\"txId\")}\r\n            placeholder={\"put ID from table here . . .\"}\r\n          />\r\n\r\n          {/* <LabeledInput\r\n            disabled={disabled}\r\n            label={\"CODE\"}\r\n            {...text(\"verifyId\")}\r\n            placeholder={\"(optional) Claim Code\"}\r\n          /> */}\r\n\r\n          <FillButton disabled={disabled}>Pay and Claim</FillButton>\r\n        </StyledColumnForm>\r\n      )}\r\n      <div style={{ color: \"red\" }}>\r\n        {error.length > 0 && <span>ERROR: {error}</span>}\r\n        {ipfsInitError && (\r\n          <span>ERROR: {ipfsInitError.message || ipfsInitError}</span>\r\n        )}\r\n      </div>\r\n      {success.length > 0 && (\r\n        <div>\r\n          <StyledLabel>\r\n            Paid and claimed. Will take ~3 minutes for it to register -\r\n          </StyledLabel>\r\n          <a\r\n            href=\"https://jungle.eosweb.net/account/nemoeosmark1\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\" \r\n          >\r\n            https://jungle.eosweb.net/account/nemoeosmark1\r\n          </a>\r\n          <Divider />\r\n          <StyledLabel> Check your balance here: </StyledLabel>\r\n          <a\r\n            href=\"https://jungle.eosweb.net/account/nemotestero4\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\" \r\n          >\r\n            https://jungle.eosweb.net/account/nemotestero4\r\n          </a>\r\n          <Divider />\r\n          <StyledLabel> Here is your Receipt ID: </StyledLabel>\r\n          <br />\r\n          {receiptId}\r\n          <br />\r\n          <FillButton onClick={() => copy(receiptId)}>\r\n            Click to Copy Receipt ID\r\n          </FillButton>\r\n          <Divider />\r\n          <StyledLabel> Here is the EPCIS data: </StyledLabel>\r\n\r\n          <EpcisDataContainer>\r\n            <EpcisDataViewer>{epcisData}</EpcisDataViewer>\r\n          </EpcisDataContainer>\r\n\r\n          <FillButton onClick={() => copy(epcisData)}>\r\n            Click to Copy EPCIS\r\n          </FillButton>\r\n          <FillButton\r\n            disabled={disabled}\r\n            onClick={async e => {\r\n              e.preventDefault();\r\n              setDisabled(true);\r\n              await api.freepcis.sendCatchEvent(epcisData);\r\n              triggerNextStep();\r\n            }}\r\n          >\r\n            Send to FreEPCIS\r\n          </FillButton>\r\n        </div>\r\n      )}\r\n      <FillButton\r\n        background=\"red\"\r\n        disabled={disabled}\r\n        onClick={onFinish}\r\n      >\r\n        Finalize/Cancel\r\n      </FillButton>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { createPromptArray } from \"../core/utils\";\r\nimport { DappProducerReceiveInput } from \"../components/DappProducerReceiveInput\";\r\n\r\nconst promptOrder = [\r\n  \"prompt_receive\",\r\n\r\n  \"form_dappProducerReceiveInput\",\r\n\r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nconst promptStructure = {\r\n  \"form_dappProducerReceiveInput\": {\r\n    component: <DappProducerReceiveInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  }\r\n} as any;\r\n\r\nexport const createReceivePrompt = () =>\r\n  createPromptArray(promptOrder, promptStructure);\r\n","import React from \"react\";\r\nimport { createPromptArray } from \"../core/utils\";\r\nimport { CsvFileInput } from \"../components/CsvFileInput\";\r\n\r\nconst promptOrder = [\r\n  \"prompt_csv\",\r\n\r\n  \"comp_csvInput\",\r\n  \r\n  \"prompt_anotherOne\"\r\n];\r\n\r\nconst promptStructure = {\r\n  comp_csvInput: {\r\n    component: <CsvFileInput />,\r\n    hideInput: true,\r\n    replace: false,\r\n    waitAction: true\r\n  }\r\n} as any;\r\n\r\nexport const createCsvPrompt = () =>\r\n  createPromptArray(promptOrder, promptStructure);\r\n","import { strings } from \"./i18n\";\r\nimport { createCatchPrompt } from \"./data/catchPrompt\";\r\nimport { createLandingPrompt } from \"./data/landingPrompt\";\r\nimport { createSalePrompt } from \"./data/salePrompt\";\r\nimport { createSetupCaptainProfilePrompt } from \"./data/setupCaptainProfilePrompt\";\r\nimport createPersistedState from \"use-persisted-state\";\r\nimport { createSelectOptionList } from \"./core/utils\";\r\nimport { createTestPrompt } from \"./data/testPrompt\";\r\nimport { createReceivePrompt } from \"./data/receivePrompt\";\r\nimport { createCsvPrompt } from \"./data/csvPrompt\";\r\n\r\nconst isDebug = localStorage.getItem(\"debug\");\r\n\r\n// import { IDialogue } from \"./react-app-env\";\r\n\r\n// https://github.com/Semantic-Org/Semantic-UI-React/blob/master/docs/src/examples/modules/Dropdown/common.js\r\n\r\nexport const fishes = [\r\n  \"atlanticCod\",\r\n  \"blueCrab\",\r\n  \"dolphinFish\",\r\n  \"grouper\",\r\n  \"kingCrab\",\r\n  \"pacificCod\",\r\n  \"redSnapper\",\r\n  \"seaCucumber\",\r\n  \"shark\",\r\n  \"swordfish\",\r\n  \"albacoreTuna\",\r\n  \"bigeyeTuna\",\r\n  \"skipjackTuna\",\r\n  \"yellowfinTuna\",\r\n  \"bluefinTuna\"\r\n];\r\n\r\nexport const fishOptionList = createSelectOptionList(fishes);\r\n\r\nexport const shipIDTypeList = [\"imo\", \"mmsi\"];\r\n\r\nexport const durationList = [\"days\", \"weeks\", \"months\"];\r\n\r\nexport const durationMultiplier = {\r\n  days: 24 * 60 * 60 * 1000,\r\n  weeks: 7 * 24 * 60 * 60 * 1000,\r\n  months: 30 * 7 * 24 * 60 * 60 * 1000\r\n};\r\n\r\nexport const shipIDTypeOptionList = createSelectOptionList(shipIDTypeList);\r\n\r\nexport const uomMap: any = {\r\n  kilogram: \"KGM\",\r\n  pound: \"LBR\"\r\n};\r\n\r\nexport const productionMethodCodeMap = {\r\n  aquaculture: \"AQUACULTURE\",\r\n  inlandFishery: \"INLAND_FISHERY\",\r\n  marineFishery: \"MARINE_FISHERY\"\r\n} as any;\r\n\r\nexport const fao3AMap: any = {\r\n  atlanticCod: \"LPS\",\r\n  blueCrab: \"CRB\",\r\n  dolphinFish: \"DOL\",\r\n  grouper: \"EWL\",\r\n  kingCrab: \"KCD\",\r\n  pacificCod: \"PCO\",\r\n  redSnapper: \"RES\",\r\n  seaCucumber: \"EHV\",\r\n  shark: \"HXC\",\r\n  swordfish: \"SWO\",\r\n  albacoreTuna: \"ALB\",\r\n  bigeyeTuna: \"BET\",\r\n  skipjackTuna: \"SKJ\",\r\n  yellowfinTuna: \"YFT\",\r\n  bluefinTuna: \"PBF\"\r\n};\r\n\r\nexport const localStorageKey = {\r\n  savedLanguage: \"NEMO_LANGUAGE\",\r\n  captainProfile: \"NEMO_CAPTAIN_PROFILE_TEMP\",\r\n  profile: \"NEMO_PROFILE\",\r\n  chatCache: \"NEMO_CHAT_CACHE\",\r\n  catchCache: \"NEMO_CATCH_CACHE\"\r\n};\r\n\r\nexport const useCaptainProfileState = createPersistedState(\r\n  localStorageKey.captainProfile\r\n);\r\nexport const useLanguageState = createPersistedState(\r\n  localStorageKey.savedLanguage\r\n);\r\nexport const useProfileState = createPersistedState(localStorageKey.profile);\r\n\r\nexport const useCatchCacheState = createPersistedState(\r\n  localStorageKey.catchCache\r\n);\r\n\r\nexport const createSteps = (isProfileSetup: boolean) => [\r\n  ...(isProfileSetup\r\n    ? [\r\n        {\r\n          id: \"prompt_welcome\",\r\n          hideInput: true,\r\n          message: () => strings.prompt_welcome,\r\n          trigger: \"prompt_initial\"\r\n        }\r\n      ]\r\n    : []),\r\n  ...createSetupCaptainProfilePrompt(),\r\n  {\r\n    id: \"prompt_initial\",\r\n    hideInput: true,\r\n    message: () => strings.prompt_initial,\r\n    trigger: \"prompt_events\"\r\n  },\r\n  {\r\n    id: `prompt_anotherOne`,\r\n    hideInput: true,\r\n    message: () => strings.prompt_anotherOne,\r\n    trigger: \"prompt_events\"\r\n  },\r\n  {\r\n    id: `prompt_nothing`,\r\n    hideInput: true,\r\n    message: () => strings.prompt_nothing,\r\n    trigger: \"prompt_end\"\r\n  },\r\n  {\r\n    id: \"prompt_events\",\r\n    hideInput: true,\r\n    options: [\r\n      ...(isDebug ? [\"test\"] : []),\r\n      \"csv\",\r\n      \"receive\",\r\n      \"catch\",\r\n      \"landing\",\r\n      \"sale\",\r\n      \"transport\",\r\n      \"nothing\"\r\n    ].map(value => ({\r\n      value,\r\n      label: `${strings[value]}`,\r\n      trigger: `prompt_${value}`\r\n    }))\r\n  },\r\n  ...[\"transport\"].map(value => ({\r\n    id: `prompt_${value}`,\r\n    message: () => strings.prompt_unavailable,\r\n    trigger: \"prompt_end\"\r\n  })),\r\n  {\r\n    id: \"prompt_end\",\r\n    hideInput: true,\r\n    message: () => strings.prompt_end,\r\n    end: true\r\n  },\r\n  ...createCsvPrompt(),\r\n  ...createReceivePrompt(),\r\n  ...createSalePrompt(),\r\n  ...createCatchPrompt(),\r\n  ...createLandingPrompt(),\r\n  ...(isDebug ? createTestPrompt() : [])\r\n];\r\n","import React, { useState, useRef } from \"react\";\r\nimport {\r\n  useSpring,\r\n  useChain,\r\n  config,\r\n  animated\r\n} from \"react-spring\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Close } from \"styled-icons/material/Close\";\r\nimport { useProfileState, localStorageKey } from \"../_data\";\r\nimport { useFormState } from \"react-use-form-state\";\r\nimport { StyledSubmitButton, StyledColumnForm, StyledButton, RowDiv, ReviewInput } from \"../_theme\";\r\n\r\nexport const CaptainProfileIcon = () => {\r\n  return <div>Profile Icon</div>;\r\n};\r\n\r\nconst Container = styled(animated.div)`\r\n  position: absolute;\r\n\r\n  border-radius: 5px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-content: center;\r\n\r\n  background: white;\r\n\r\n  cursor: pointer;\r\n\r\n  will-change: width, height, opacity;\r\n  z-index: 1001;\r\n  top: 0;\r\n  right: 0;\r\n`;\r\n\r\n\r\nconst ProfileIcon = styled(animated.div)`\r\n  border-radius: 100%;\r\n\r\n  position: relative;\r\n  width: 36px;\r\n  height: 36px;\r\n  background: pink;\r\n\r\n  cursor: pointer;\r\n\r\n  z-index: 1000;\r\n`;\r\n\r\nconst CloseProfileModalButton = styled(ProfileIcon)`\r\n  background: white;\r\n  z-index: 1002;\r\n  position: absolute;\r\n  right: 1em;\r\n  top: 1em;\r\n  box-shadow: 0 2px 25px rgba(255, 0, 130, 0.2);\r\n  svg {\r\n    fill: #ff0081;\r\n  }\r\n`;\r\n\r\nconst ItemContainer = styled(animated.div)`\r\n  margin: 3em 3em;\r\n`;\r\n\r\nconst StyledForm = styled(StyledColumnForm)`\r\n  margin-top: 1em;\r\n`;\r\n\r\nexport const CaptainProfile = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [profile, setProfile] = useProfileState({});\r\n\r\n  const { completed, ...profileFormRest } = profile;\r\n\r\n  const [formState, { text }] = useFormState<CaptainProfileReviewFormFields>({\r\n    ...profileFormRest\r\n  });\r\n\r\n  const springRef = useRef(null);\r\n  const { size, ...rest } = useSpring({\r\n    ref: springRef,\r\n    // config: config.stiff,\r\n    from: {\r\n      size: \"2%\",\r\n      opacity: 0\r\n    },\r\n    to: {\r\n      size: open ? \"100%\" : \"2%\",\r\n      opacity: open ? 1 : 0\r\n    }\r\n  }) as any;\r\n\r\n  const transRef = useRef(null);\r\n\r\n  const closeButtonRef = useRef(null);\r\n\r\n  const closeButtonPopin = useSpring({\r\n    ref: closeButtonRef,\r\n    config: config.stiff,\r\n    from: { opacity: 0, transform: \"scale(0)\" },\r\n    to: { opacity: open ? 1 : 0, transform: open ? \"scale(1)\" : \"scale(0)\" }\r\n  });\r\n\r\n  useChain(\r\n    open\r\n      ? [springRef, closeButtonRef, transRef]\r\n      : [closeButtonRef, transRef, springRef],\r\n    [0, open ? 0.1 : 0.6]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ProfileIcon onClick={() => setOpen(true)} />\r\n      <Container style={{ ...rest, width: size, height: size }}>\r\n        <CloseProfileModalButton\r\n          style={closeButtonPopin}\r\n          onClick={() => setOpen(false)}\r\n        >\r\n          <Close />\r\n        </CloseProfileModalButton>\r\n        <ItemContainer>\r\n          {/* {transitions.map(({ item, key, props }) => (\r\n            <Item key={key} style={{ ...props, background: item.css }}>\r\n\r\n            </Item>\r\n          ))} */}\r\n\r\n          <StyledForm\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n\r\n              setProfile({\r\n                ...formState.values,\r\n                completed: true\r\n              });\r\n\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            {Object.keys(formState.values).map(k => (\r\n              <ReviewInput key={k} label={k} {...text(k as any)} />\r\n            ))}\r\n\r\n            <RowDiv>\r\n              <StyledButton\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  localStorage.removeItem(localStorageKey.chatCache);\r\n                  window.location.reload();\r\n                }}\r\n              >\r\n                Clear chat cache\r\n              </StyledButton>\r\n              <StyledSubmitButton />\r\n            </RowDiv>\r\n          </StyledForm>\r\n        </ItemContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Flag from \"react-country-flag\";\r\n\r\nimport Select from \"react-styled-select\";\r\nimport { languages } from \"../i18n\";\r\n\r\nimport {CaptainProfile} from './CaptainProfile'\r\n\r\nconst HeaderContainer = styled.div`\r\n  height: 3.6em;\r\n  background: ${p => p.theme.headerBgColor};\r\n  color: ${p => p.theme.headerFontColor};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-direction: row;\r\n\r\n  padding-right: 1em;\r\n  padding-left: 1em;\r\n\r\n  h1 {\r\n    font-size: 1.8em;\r\n  }\r\n`;\r\n\r\nconst StyledSelect = styled(Select)`\r\n  width: 9em;\r\n  margin-left: 1em;\r\n  margin-right: 1em;\r\n\r\n  .select-control {\r\n    border-radius: 2em;\r\n    background: #eee;\r\n  }\r\n\r\n  .select-input {\r\n    margin-left: 0.5em;\r\n  }\r\n\r\n  .select-label {\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nexport const Header = ({ language, onLanguageChanged }: any) => {\r\n  return (\r\n    <HeaderContainer>\r\n      <h1>Nemo</h1>\r\n\r\n      <StyledSelect\r\n        value={language}\r\n        options={languages}\r\n        classes={{\r\n          selectControl: \"select-control\",\r\n          selectInput: \"select-input\"\r\n        }}\r\n        valueRenderer={({ value, label }: any) => (\r\n          <div>\r\n            <Flag code={value} svg />{\" \"}\r\n            <span className=\"select-label\">{label}</span>\r\n          </div>\r\n        )}\r\n        onChange={(lang: string) => {\r\n          onLanguageChanged(lang);\r\n        }}\r\n      />\r\n\r\n      <CaptainProfile/>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport ChatBot from \"react-simple-chatbot\";\r\n\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\n\r\nimport { Header } from \"./components/Header\";\r\n\r\nimport { theme, RefreshButton } from \"./_theme\";\r\nimport { localStorageKey, createSteps, useLanguageState, useProfileState } from \"./_data\";\r\nimport { strings, languages } from \"./i18n\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledChatBot = styled(ChatBot)`\r\n  width: 90%;\r\n  height: 90%;\r\n\r\n  .rsc-container {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .rsc-os-options {\r\n    display: flex;\r\n    flex-flow: wrap;\r\n    flex-direction: row-reverse;\r\n  }\r\n\r\n  .rsc-os-option-element {\r\n    display: flex;\r\n    height: 3em;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\n\r\nexport const App = ({props} : any) => {\r\n  const [hasEnded, setHasEnded] = useState(false)\r\n  \r\n  const [language, setLanguage] = useLanguageState(languages[0].value)\r\n\r\n  const [profile] = useProfileState({ completed: false });\r\n  const isProfileSetup = !!profile.completed;\r\n\r\n  strings.setLanguage(language);\r\n\r\n  const steps = createSteps(isProfileSetup);\r\n\r\n  const handleLanguageChanged =(newLanguage: string)=> {\r\n    if (language === newLanguage) return;\r\n\r\n    setLanguage(newLanguage);\r\n    \r\n    localStorage.removeItem(localStorageKey.chatCache);\r\n    \r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        {hasEnded && <RefreshButton />}\r\n        <StyledChatBot\r\n          { ... props}\r\n          headerComponent={\r\n            <Header\r\n              key={language}\r\n              language={language}\r\n              onLanguageChanged={handleLanguageChanged}\r\n            />\r\n          }\r\n          enableMobileAutoFocus\r\n          botAvatar={\"assets/avatar.png\"}\r\n          hideUserAvatar\r\n          cache={isProfileSetup}\r\n          cacheName={localStorageKey.chatCache}\r\n          userAvatar={\"assets/captain.png\"}\r\n          placeholder={strings.placeholder}\r\n          userDelay={0}\r\n          steps={steps}\r\n          handleEnd={()=> setHasEnded(true)}\r\n        />\r\n      </Container>\r\n    </ThemeProvider>\r\n  ) \r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { App } from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { Api, JsonRpc } from \"eosjs\";\r\nimport { JsSignatureProvider } from \"eosjs/dist/eosjs-jssig\";\r\n\r\nconst debug = require(\"debug\")(\"api.dapp\");\r\n\r\n// Jungle testnet keys\r\nexport const dappVault = {\r\n  ipfsRepo: '/nemo',\r\n  apiUrl: \"https://api.jungle.alohaeos.com:443\",\r\n  keys: [\r\n    \"5JjfJTnv7auXdk3QskJ79SiXo3dfJHhkH785AF7P7KedhyHkbLG\",\r\n    \"5J74G7maytuLsujt5Bn14b3ifbHbgVtxVBU6aDBkpXsobdw4g3w\",\r\n    \"5JdVxGhEgV481QDMS1PMDjhoQRdyuBssFnqjRnVWurpjgDeRb5z\",\r\n    \"5JWmbWCHjMD59QUnwrmvCxTeYgc7PxVRVf4dYNtj7Zs7BjM2XnA\"\r\n  ],\r\n  table: 'nemotablemk2',\r\n  account: {\r\n    eosiotoken: \"eosio.token\",\r\n    contract: \"nemoeosmark1\",\r\n    captain: \"nemotestero3\",\r\n    producer: \"nemotestero4\"\r\n  }\r\n}\r\n\r\nexport const encodeNemoTXValue = (id: string, blockNum: any) => `${id}.NEMOTX.${blockNum}`\r\n\r\nexport const decodeNemoTXValue = (tx: string) => tx.split('.NEMOTX.')\r\n\r\nexport const claimCatchEvent = async ({ txId, apiUrl }: any, ipfs: any) => {\r\n\r\n  // debug()\r\n  const { account, table, keys } = dappVault;\r\n\r\n  const signatureProvider = new JsSignatureProvider(keys);\r\n\r\n  const rpc = new JsonRpc(apiUrl);\r\n\r\n  const api = new Api({ rpc, signatureProvider });\r\n\r\n  const tableData = await rpc.get_table_rows({\r\n    json: true,                 // Get the response as json\r\n    code: account.contract,           // Contract that we target\r\n    scope: account.contract,           // Account that owns the data\r\n    table,          // Table name\r\n    lower_bound: txId,      // Table primary key value\r\n    limit: 1,                   // Here we limit to 1 to get only the\r\n    show_payer: false,         // Optional: Show ram payer\r\n  })\r\n\r\n  debug(tableData);\r\n  // result.trx.trx.actions;\r\n\r\n  const [{\r\n    buyer,\r\n    seller,\r\n    price,\r\n    tax,\r\n    value\r\n  }] = tableData.rows\r\n\r\n  if (buyer.length > 0) {\r\n    throw new Error('Record is already claimed')\r\n  }\r\n\r\n  const result = await api.transact(\r\n    {\r\n      actions: [\r\n        {\r\n          account: account.eosiotoken,\r\n          name: \"transfer\",\r\n          authorization: [\r\n            {\r\n              actor: account.producer,\r\n              permission: \"active\"\r\n            }\r\n          ],\r\n          data: {\r\n            from: account.producer,\r\n            to: seller,\r\n            quantity: price,\r\n            memo: `payment for ${value}`\r\n          }\r\n        },\r\n        {\r\n          account: account.eosiotoken,\r\n          name: \"transfer\",\r\n          authorization: [\r\n            {\r\n              actor: account.producer,\r\n              permission: \"active\"\r\n            }\r\n          ],\r\n          data: {\r\n            from: account.producer,\r\n            to: account.contract,\r\n            quantity: tax,\r\n            memo: `tax for ${value}`\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      blocksBehind: 3,\r\n      expireSeconds: 30\r\n    }\r\n  );\r\n\r\n  const receipt = encodeNemoTXValue(result.transaction_id, result.processed.block_num)\r\n\r\n  const claimResult = await api.transact(\r\n    {\r\n      actions: [\r\n        {\r\n          account: account.contract,\r\n          name: \"claim\",\r\n          authorization: [\r\n            {\r\n              actor: account.producer,\r\n              permission: \"active\"\r\n            }\r\n          ],\r\n          data: {\r\n            buyer: account.producer,\r\n            id: txId,\r\n            receipt\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      blocksBehind: 3,\r\n      expireSeconds: 30\r\n    }\r\n  );\r\n\r\n  const epcisDataBuffer = await ipfs.cat(value)\r\n\r\n  return {\r\n    epcisData: epcisDataBuffer.toString('utf8'),\r\n    originId: encodeNemoTXValue(claimResult.transaction_id, claimResult.processed.block_num)\r\n  }\r\n}\r\n\r\nexport const sendCatchEvent = async ({\r\n  apiUrl,\r\n  price\r\n}: any, ipfs: any, body: any) => {\r\n\r\n  const { account, keys } = dappVault;\r\n\r\n  const content = Buffer.from(body);\r\n  const results = await ipfs.add(content);\r\n\r\n  const { hash } = results[0];\r\n\r\n  const signatureProvider = new JsSignatureProvider(keys);\r\n\r\n  const rpc = new JsonRpc(apiUrl);\r\n\r\n  const api = new Api({ rpc, signatureProvider });\r\n\r\n  const result = await api.transact(\r\n    {\r\n      actions: [\r\n        {\r\n          account: account.contract,\r\n          name: \"submit\",\r\n          authorization: [\r\n            {\r\n              actor: account.captain,\r\n              permission: \"active\"\r\n            }\r\n          ],\r\n          data: {\r\n            seller: account.captain,\r\n            value: hash,\r\n            price,\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      blocksBehind: 3,\r\n      expireSeconds: 30\r\n    }\r\n  );\r\n\r\n  return {\r\n    ipfsHash: hash,\r\n    originId: encodeNemoTXValue(result.transaction_id, result.processed.block_num)\r\n  }\r\n};\r\n"],"sourceRoot":""}